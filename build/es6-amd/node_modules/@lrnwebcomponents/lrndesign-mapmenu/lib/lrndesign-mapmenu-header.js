define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../lrndesign-avatar/lrndesign-avatar.js", "../../simple-icon/simple-icon.js", "../../simple-icon/lib/simple-icons.js", "../../../@polymer/iron-behaviors/iron-button-state.js", "../../../@polymer/polymer/lib/legacy/class.js"], function (_exports, _polymerElement, _lrndesignAvatar, _simpleIcon, _simpleIcons, _ironButtonState, _class) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignMapmenuHeader = void 0;

  class LrndesignMapmenuHeader extends (0, _class.mixinBehaviors)([_ironButtonState.IronButtonState], _polymerElement.PolymerElement) {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
        }
        #container {
          display: flex;
          align-items: center;
        }
        #icon {
          margin-right: 10px;
        }
        #center {
          flex: 1 1 auto;
        }
        lrndesign-avatar {
          display: inline-block;
          position: relative;
        }
        lrndesign-avatar ::slotted(*) {
          transform: translateY(2px);
        }
        #title {
          font-size: 19.2px;
        }
        #right simple-icon {
          color: gray;
          display: inline-flex;
        }
      </style>
      <div id="container">
        <template is="dom-if" if="[[avatarLabel]]">
          <div id="icon">
            <lrndesign-avatar label="[[avatarLabel]]"></lrndesign-avatar>
          </div>
        </template>
        <div id="center">
          <div id="label">[[label]]</div>
          <div id="title">[[title]]</div>
        </div>
        <div id="right">
          <template is="dom-if" if="[[!opened]]">
            <simple-icon icon="arrow-drop-down"></simple-icon>
          </template>
          <template is="dom-if" if="[[opened]]">
            <simple-icon icon="arrow-drop-up"></simple-icon>
          </template>
        </div>
      </div>
    `;
    }

    static get tag() {
      return "lrndesign-mapmenu-header";
    }

    static get properties() {
      return {
        title: {
          type: String
        },
        label: {
          type: String
        },
        avatarLabel: {
          type: String,
          value: ""
        },
        opened: {
          type: Boolean
        }
      };
    }

    connectedCallback() {
      super.connectedCallback();
      this.setAttribute("role", "button");
      this.setAttribute("tabindex", "0");
    }

  }

  _exports.LrndesignMapmenuHeader = LrndesignMapmenuHeader;
  window.customElements.define(LrndesignMapmenuHeader.tag, LrndesignMapmenuHeader);
});