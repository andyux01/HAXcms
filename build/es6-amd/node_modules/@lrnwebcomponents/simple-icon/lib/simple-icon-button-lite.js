define(["exports", "../../../lit-element/lit-element.js", "../../simple-colors/simple-colors.js", "./simple-icons.js", "./simple-icon-lite.js"], function (_exports, _litElement, _simpleColors, _simpleIcons, _simpleIconLite) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleIconButtonLite = _exports.SimpleIconButtonBehaviors = void 0;

  /**
   * Copyright 2020 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
  const SimpleIconButtonBehaviors = function (SuperClass) {
    return class extends SuperClass {
      constructor() {
        super();
      }

      static get styles() {
        return [...[super.styles || []], (0, _litElement.css)`
          :host([hidden]) {
            display: none;
          }
          :host {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            position: relative;
            vertical-align: middle;
            border-radius: var(--simple-icon-button-padding, 0px);
            border-radius: var(--simple-icon-button-border-radius, 50%);
            height: calc(
              var(--simple-icon-height, 24px) - 2 *
                var(--simple-icon-button-padding, 0px)
            );
            width: calc(
              var(--simple-icon-width, 24px) - 2 *
                var(--simple-icon-button-padding, 0px)
            );
          }
          button {
            cursor: pointer;
            border: 0;
            border-radius: var(--simple-icon-button-border-radius, 50%);
            height: var(--simple-icon-height, 24px);
            width: var(--simple-icon-width, 24px);
            background-color: transparent;
            padding: 0px;
            margin: 0px;
          }
          button:focus,
          button:hover {
            opacity: var(--simple-icon-button-focus-opacity, 0.8);
            --simple-icon-color: var(--simple-icon-button-focus-color);
          }

          simple-icon {
            height: var(--simple-icon-height, 24px);
            width: var(--simple-icon-width, 24px);
          }
        `];
      } // render function


      render() {
        return (0, _litElement.html)`
        <button>
          <simple-icon-lite icon=${this.icon}> </simple-icon-lite>
        </button>
      `;
      } // properties available to the custom element for data binding


      static get properties() {
        return { ...super.properties,
          icon: {
            type: String,
            reflect: true
          }
        };
      }

    };
  };
  /**
   * `simple-icon`
   * `Render an SVG based icon`
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @demo demo/button-lite.html
   * @element simple-icon
   */


  _exports.SimpleIconButtonBehaviors = SimpleIconButtonBehaviors;

  class SimpleIconButtonLite extends SimpleIconButtonBehaviors(_litElement.LitElement) {
    /**
     * This is a convention, not the standard
     */
    static get tag() {
      return "simple-icon-button-lite";
    }

    constructor() {
      super();
    }

  }

  _exports.SimpleIconButtonLite = SimpleIconButtonLite;
  customElements.define(SimpleIconButtonLite.tag, SimpleIconButtonLite);
});