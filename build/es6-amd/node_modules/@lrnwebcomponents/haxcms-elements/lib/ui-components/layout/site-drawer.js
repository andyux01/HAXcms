define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../../../simple-icon/simple-icon.js", "../../../../simple-icon/lib/simple-icons.js", "../../../../simple-icon/lib/simple-icon-button.js"], function (_exports, _require, _litElement, _simpleIcon, _simpleIcons, _simpleIconButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteDrawer = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `site-drawer`
   * `Basic off canvas drawer element`
   *
  
   * @demo demo/index.html
   */
  class SiteDrawer extends _litElement.LitElement {
    /**
     * LitElement constructable styles enhancement
     */
    static get styles() {
      return [(0, _litElement.css)`
        .drawer-contents {
          height: 100%;
          overflow-y: auto;
          padding: 16px;
        }
        simple-icon-button {
          color: var(--site-drawer-button-color, #ffffff);
        }
        app-drawer {
          background-color: #eeeeee;
          --app-drawer-scrim-background: #eeeeee;
          --app-drawer-width: var(--site-drawer-width, 300px);
        }
      `];
    }
    /**
     * HTMLElement
     */


    constructor() {
      super();
      this.align = "right";
      this.icon = "menu";
      setTimeout(() => {
        new Promise((res, rej) => _require.default(["../../../../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej));
      }, 0);
    }
    /**
     * LitElement life cycle - render
     */


    render() {
      return (0, _litElement.html)`
      <simple-icon-button
        icon="${this.icon}"
        @click="${this.toggle}"
      ></simple-icon-button>
      <app-drawer align="${this.align}">
        <div class="drawer-contents"><slot></slot></div>
      </app-drawer>
    `;
    }

    toggle(e) {
      this.shadowRoot.querySelector("app-drawer").toggle();
    }

    static get tag() {
      return "site-drawer";
    }

    static get properties() {
      return {
        align: {
          type: String
        },
        icon: {
          type: String
        }
      };
    }

  }

  _exports.SiteDrawer = SiteDrawer;
  window.customElements.define(SiteDrawer.tag, SiteDrawer);
});