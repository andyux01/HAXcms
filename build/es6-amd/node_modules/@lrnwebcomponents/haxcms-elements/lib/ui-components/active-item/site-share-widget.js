define(["exports", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js", "../../../../utils/utils.js", "../../../../simple-icon/simple-icon.js", "../../../../simple-icon/lib/simple-icons.js", "../../../../simple-icon/lib/simple-icon-button.js", "../../../../hax-iconset/lib/simple-hax-iconset.js", "../../../../../web-social-share/dist/esm/web-social-share.entry.js", "../../../../../web-social-share/dist/esm/index-bef2383e.js"], function (_exports, _litElement, _haxcmsSiteStore, _mobxEsm, _utils, _simpleIcon, _simpleIcons, _simpleIconButton, _simpleHaxIconset, _webSocialShareEntry, _indexBef2383e) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteShareWidget = void 0;

  const defineCustomElements = (win, options) => {
    return (0, _indexBef2383e.a)().then(() => {
      (0, _indexBef2383e.b)([["web-social-share", [[1, "web-social-share", {
        show: [1028],
        share: [16]
      }]]]], options);
    });
  };

  class SiteShareWidget extends _litElement.LitElement {
    static get tag() {
      return "site-share-widget";
    }

    static get styles() {
      return [(0, _litElement.css)`
        :host {
          display: block;
        }
        simple-icon-button {
          color: #ffffff;
          background-color: var(--site-share-widget-bg);
          padding: 8px;
          margin: 0 0 0 4px;
          border-radius: 50%;
        }
        web-social-share {
          --web-social-share-zindex: 10000;
        }
        simple-icon {
          display: block;
        }
        simple-icon:hover {
          box-shadow: 0 0 20px var(--haxcms-color, #000000);
        }
      `];
    }

    render() {
      return (0, _litElement.html)`
      <simple-icon-button
        @click="${this.click}"
        title="${this.alt}"
        icon="${this.icon}"
        dark
      ></simple-icon-button>
      <web-social-share share="false">
        <simple-icon slot="facebook" icon="mdi-social:facebook"></simple-icon>
        <simple-icon slot="twitter" icon="mdi-social:twitter"></simple-icon>
        <simple-icon slot="pinterest" icon="mdi-social:pinterest"></simple-icon>
        <simple-icon slot="linkedin" icon="mdi-social:linkedin"></simple-icon>
        <simple-icon slot="email" icon="icons:mail"></simple-icon>
        <simple-icon slot="copy" icon="icons:content-copy"></simple-icon>
      </web-social-share>
    `;
    }

    constructor() {
      super();
      defineCustomElements(window);
      this.alt = "Share page";
      this.icon = "social:share";
      this.activeGitFileLink = "";
      this.__disposer = [];
      (0, _mobxEsm.autorun)(reaction => {
        if (_haxcmsSiteStore.store.activeItem) {
          this.activeItem = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.activeItem);
        }

        this.__disposer.push(reaction);
      });
    }
    /**
     * Callback for clicking the button
     */


    click(e) {
      if (this.shadowRoot && this.shadowRoot.querySelector("web-social-share")) {
        const location = window.location.href;
        const email = (0, _utils.varGet)(_haxcmsSiteStore.store, "manifest.metadata.author.email", "");
        const share = {
          displayNames: true,
          config: [{
            facebook: {
              socialShareUrl: location,
              socialSharePopupWidth: 400,
              socialSharePopupHeight: 400
            }
          }, {
            twitter: {
              socialShareUrl: location,
              socialSharePopupWidth: 300,
              socialSharePopupHeight: 400
            }
          }, {
            linkedin: {
              socialShareUrl: location
            }
          }, {
            pinterest: {
              socialShareUrl: location
            }
          }, {
            email: {
              socialShareTo: email,
              socialShareBody: location
            }
          }, {
            copy: {
              socialShareUrl: location
            }
          }]
        };
        this.shadowRoot.querySelector("web-social-share").share = share;
      }

      this.shadowRoot.querySelector("web-social-share").show = true;
    }

    disconnectedCallback() {
      for (var i in this.__disposer) {
        this.__disposer[i].dispose();
      }

      super.disconnectedCallback();
    }

    static get properties() {
      return {
        activeItem: {
          type: Object
        },
        show: {
          type: Boolean
        },
        alt: {
          type: String
        },
        icon: {
          type: String
        }
      };
    }

  }

  _exports.SiteShareWidget = SiteShareWidget;
  window.customElements.define(SiteShareWidget.tag, SiteShareWidget);
});