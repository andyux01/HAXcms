/**
 * Copyright 2021 collinkleest
 * @license MIT, see License.md for full text.
 */
import{LitElement as t,html as e,css as o}from"../../../lit-element/lit-element.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icons.js";import{store as r}from"../../haxcms-elements/lib/core/haxcms-site-store.js";import{autorun as i,toJS as s}from"../../../mobx/dist/mobx.esm.js";class BootstrapBreadcrumb extends t{static get styles(){return[o`
        :host {
          --bootstrap-dark-theme-secondary-background-color: #343a40;
          --simple-icon-height: 18px;
          --simple-icon-width: 18px;
          --simple-icon-color: #007bff;
        }

        .container {
          background-color: #e9ecef;
          border-radius: 5px;
        }

        simple-icon-lite {
          margin-bottom: 5px;
        }

        a:hover simple-icon-lite {
          text-decoration: underline;
        }

        /* dark mode */
        :host([color-theme="1"]) {
          --simple-icon-color: #999;
        }

        :host([color-theme="1"]) simple-icon-lite:hover {
          --simple-icon-color: #fff;
        }

        :host([color-theme="1"]) .breadcrumb {
          background-color: var(
            --bootstrap-dark-theme-secondary-background-color
          );
        }

        :host([color-theme="1"]) .container {
          background-color: var(
            --bootstrap-dark-theme-secondary-background-color
          );
        }

        :host([color-theme="1"]) a {
          color: #999;
        }

        :host([color-theme="1"]) a:hover {
          color: #fff;
        }
      `]}static get tag(){return"bootstrap-breadcrumb"}static get properties(){return{items:{type:Array,reflect:!0},homeItem:{type:Object,reflect:!0},colorTheme:{type:String,reflect:!0,attribute:"color-theme"}}}constructor(){super(),this.items=[],this._activeItem={},this.homeItem={};let t=this.getBasePath(decodeURIComponent(import.meta.url));this._bootstrapPath=t+"bootstrap/dist/css/bootstrap.min.css",this._originUrl=window.location.origin+"/",i(()=>{let t=s(r.manifest.items[0]),e=s(r.activeItem);this.homeItem!==t&&(this.homeItem=t),this._activeItem!==e&&(this.items=[],this._activeItem=e,this.items.push(e),e.parent&&this.addParentToItems(e))})}render(){return e`
      <link rel="stylesheet" href="${this._bootstrapPath}" />
      <div class="container p-2 mb-3">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb m-auto">
            <li
              id="home"
              class="breadcrumb-item"
              data-bs-toggle="tooltip"
              data-bs-placement="top"
              title="${this.homeItem.title}"
            >
              <a href="${this._originUrl}${this.homeItem.title}">
                <simple-icon-lite accent-color="blue" icon="home">
                </simple-icon-lite>
              </a>
            </li>
            ${this.items.map(t=>e`
                  <li
                    class="breadcrumb-item"
                    data-bs-toggle="tooltip"
                    data-bs-placement="top"
                    title="${t.title}"
                  >
                    <a href="${this._originUrl}${t.slug}"> ${t.title} </a>
                  </li>
                `)}
          </ol>
        </nav>
      </div>
    `}getBasePath(t){return t.substring(0,t.lastIndexOf("/@lrnwebcomponents/")+1)}getParentById(t){let e=r.manifest.items.map(t=>s(t.id)).indexOf(t);return s(r.manifest.items[e])}addParentToItems(t){let e=this.getParentById(t.parent);this.items.unshift(e),e.parent&&this.addParentToItems(e)}firstUpdated(t){}updated(t){t.forEach((t,e)=>{})}}customElements.define(BootstrapBreadcrumb.tag,BootstrapBreadcrumb);export{BootstrapBreadcrumb};