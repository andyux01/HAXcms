/**
 * Copyright 2021 collinkleest
 * @license MIT, see License.md for full text.
 */
import{LitElement as t,html as e,css as i}from"../../lit-element/lit-element.js";import{HAXCMSLitElementTheme as n}from"../haxcms-elements/lib/core/HAXCMSLitElementTheme.js";import{HAXCMSMobileMenuMixin as s}from"../haxcms-elements/lib/core/utils/HAXCMSMobileMenu.js";import{HAXCMSUserStylesMenuMixin as o}from"../haxcms-elements/lib/core/utils/HAXCMSUserStylesMenu.js";import{HAXCMSThemeParts as a}from"../haxcms-elements/lib/core/utils/HAXCMSThemeParts.js";import{store as r}from"../haxcms-elements/lib/core/haxcms-site-store.js";import{autorun as m,toJS as c}from"../../mobx/dist/mobx.esm.js";import{ESGlobalBridgeStore as l}from"../es-global-bridge/es-global-bridge.js";class BootstrapTheme extends(a(o(s(n)))){static get tag(){return"bootstrap-theme"}static get styles(){return[...super.styles,i`
        :host {
          display: block;
          --haxcms-color: white !important;
          --hax-base-styles-p-font-size: 12px;
        }
        :host([menu-open]) .menu-outline {
          left: 0;
        }
        :host([is-logged-in][menu-open]) .menu-outline {
          left: 48px;
        }

        :host([responsive-size="xs"]) .main-content,
        :host([responsive-size="sm"]) .main-content {
          overflow-x: hidden;
        }
        :host([responsive-size="xs"]) .page-inner {
          overflow-x: auto;
        }

        .menu-outline {
          font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
          position: absolute;
          top: 0;
          left: -300px;
          bottom: 0;
          z-index: 1;
          overflow-y: auto;
          width: 300px;
          color: #364149;
          background: #fafafa;
          border-right: 1px solid rgba(0, 0, 0, 0.07);
          transition: left 250ms ease;
        }
        .page-wrapper {
          position: relative;
          outline: 0;
        }
        .main-content > :first-child {
          margin-top: 0 !important;
        }
        .main-content h1,
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5,
        .main-content h6 {
          margin-top: 1.275em;
          margin-bottom: 0.85em;
          font-weight: 700;
        }
        .main-content h1,
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5 {
          page-break-after: avoid;
        }
        .main-content *,
        .main-content ::slotted(*) {
          box-sizing: border-box;
          -webkit-box-sizing: border-box;
          font-size: inherit;
        }

        main-content h2 {
          font-size: 1.75em;
        }
        .main-content h3 {
          font-size: 1.5em;
        }
        .main-content h4 {
          font-size: 1.25em;
        }
        .main-content h5 {
          font-size: 1em;
        }
        .main-content h6 {
          font-size: 1em;
          color: #777;
        }
        .main-content h1,
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5,
        .main-content h6 {
          margin-top: 1.275em;
          margin-bottom: 0.85em;
          font-weight: 700;
        }

        .main-content h1,
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5 {
          page-break-after: avoid;
        }
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5,
        .main-content p {
          orphans: 3;
          widows: 3;
        }
        .main-content blockquote,
        .main-content dl,
        .main-content ol,
        .main-content p,
        .main-content table,
        .main-content ul {
          margin-top: 0;
          margin-bottom: 0.85em;
        }
        .main-content ol,
        .main-content ul {
          padding: 0;
          margin: 0;
          margin-bottom: 0.85em;
          padding-left: 2em;
        }
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5,
        .main-content p {
          orphans: 3;
          widows: 3;
        }
        .main-content * {
          box-sizing: border-box;
          -webkit-box-sizing: border-box;
          font-size: inherit;
        }
        .page-inner {
          position: relative;
          max-width: 800px;
          margin: 0 auto;
          min-height: 90vh;
          padding: 20px 15px 40px 15px;
        }
        .main-section {
          display: block;
          word-wrap: break-word;
          color: var(--haxcms-user-styles-color-theme-color-color);
          line-height: 1.7;
          text-size-adjust: 100%;
          -ms-text-size-adjust: 100%;
          -webkit-text-size-adjust: 100%;
          -moz-text-size-adjust: 100%;
        }
      `]}static get properties(){return{...super.properties,searchTerm:{type:String},menuOpen:{type:Boolean,attribute:"menu-open",reflect:!0}}}constructor(){super(),this.HAXCMSThemeSettings.autoScroll=!0,this.menuOpen=!0,this.headerTags=["H2","H3","H4","H5","H6"];let t=this.getBasePath(decodeURIComponent(import.meta.url));this._bootstrapPath=t+"bootstrap/dist/css/bootstrap.min.css",import("../haxcms-elements/lib/ui-components/active-item/site-active-title.js"),import("../haxcms-elements/lib/ui-components/navigation/site-menu-button.js"),import("../haxcms-elements/lib/ui-components/site/site-print-button.js"),import("../haxcms-elements/lib/ui-components/site/site-rss-button.js"),import("../haxcms-elements/lib/ui-components/active-item/site-git-corner.js"),this.__disposer=this.__disposer?this.__disposer:[],m(t=>{this.activeManifestIndex=c(r.activeManifestIndex),this.searchTerm="",this.__disposer.push(t)})}render(){return e`
      <link rel="stylesheet" href="${this._bootstrapPath}" />
      <div class="site container-fluid">
        <div class="menu-outline">
          <div id="site-search-input" role="search">
            <input
              type="text"
              aria-label="Search site content"
              placeholder="Type to search"
              .value="${this.searchTerm}"
              id="search"
              @input="${this.searchChanged}"
            />
            ${this.HAXCMSMobileMenu()}
          </div>
        </div>
        <div id="body" class="site-body">
          <div id="top"></div>
          <div class="site-inner">
            <header
              class="site-header"
              role="navigation"
              .part="${this.editMode?"edit-mode-active":""}"
            >
              <div class="btn-container">
                ${this.HAXCMSMobileMenuButton()} ${this.HAXCMSUserStylesMenu()}
                <div class="pull-right link-actions">
                  <site-print-button
                    class="btn js-toolbar-action"
                  ></site-print-button>
                  <site-rss-button
                    type="rss"
                    class="btn js-toolbar-action"
                  ></site-rss-button>
                  <site-git-corner size="small"></site-git-corner>
                </div>
              </div>
              <site-active-title></site-active-title>
            </header>
            <main class="page-wrapper" role="main">
              <article class="main-content page-inner">
                <div class="normal main-section">
                  <site-search
                    hide-input
                    search="${this.searchTerm}"
                    ?hidden="${""==this.searchTerm}"
                  ></site-search>
                  <section
                    class="card bg-white p-4"
                    id="contentcontainer"
                    ?hidden="${""!=this.searchTerm}"
                  >
                    <div id="slot">
                      <slot id="main-content"></slot>
                    </div>
                  </section>
                </div>
              </article>
            </main>
          </div>
        </div>
      </div>
    `}_wrapSections(){}_applyClasses(t){t.forEach(t=>{this.headerTags.includes(t.nodeName)&&t.classList.add("display-6")})}_applyMutationObserver(){this._observer=new MutationObserver((t,e)=>{t.forEach(t=>{this._applyClasses(t.addedNodes)})}),this._observer.observe(this,{childList:!0})}_generateBootstrapLink(){this._bootstrapLink&&document.head.removeChild(this._bootstrapLink);let t=this.getBasePath(decodeURIComponent(import.meta.url));console.log(t);let e=document.createElement("link");return e.setAttribute("rel","stylesheet"),e.setAttribute("href",t+"bootstrap/dist/css/bootstrap.min.css"),document.head.appendChild(e),e}disconnectedCallback(){this._bootstrapLink&&document.head.removeChild(this._bootstrapLink),super.disconnectedCallback()}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this._loadScripts(),this._bootstrapLink=this._generateBootstrapLink(),this._applyMutationObserver()}_loadScripts(){let t=this.getBasePath(decodeURIComponent(import.meta.url));window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("jquery",t+"jquery/dist/jquery.min.js"),window.addEventListener("es-bridge-jquery-loaded",this._jqueryLoaded.bind(this))}_bootstrapLoaded(t){this._bootstrap=!0}_loadBootstrap(){let t=this.getBasePath(decodeURIComponent(import.meta.url));window.ESGlobalBridge.instance.load("bootstrap",t+"bootstrap/dist/js/bootstrap.bundle.min.js"),window.addEventListener("es-bridge-bootstrap-loaded",this._bootstrapLoaded.bind(this))}_jqueryLoaded(t){this._jquery=!0,this._loadBootstrap()}getBasePath(t){return t.substring(0,t.lastIndexOf("/@lrnwebcomponents/")+1)}prevPage(t){super.prevPage(t)}nextPage(t){super.nextPage(t)}updated(t){super.updated&&super.updated(t),t.forEach((t,e)=>{})}}customElements.define(BootstrapTheme.tag,BootstrapTheme);export{BootstrapTheme};