import{LitElement as t,html as o,css as e}from"../../../lit/index.js";import{remoteLinkBehavior as i}from"../../utils/lib/remoteLinkBehavior.js";import{SimpleIconsetStore as s}from"../../simple-icon/lib/simple-iconset.js";import{I18NMixin as n}from"../../i18n-manager/lib/I18NMixin.js";import"../../simple-icon/simple-icon.js";import{DDD as r}from"../../d-d-d/d-d-d.js";export const StopNoteIconList={stop:"stopnoteicons:stop-icon",warning:"stopnoteicons:warning-icon",success:"stopnoteicons:confirm-icon",info:"stopnoteicons:book-icon"};class StopNoteProposed extends(n(i(r))){static get styles(){return[...super.styles,e`
        :host {
          display: block;
          width: auto;
          --background-color: var(--ddd-component-stop-note-icon-background, var(--ddd-theme-polaris-errorLight));
          --accent-color: var(--ddd-component-stop-note-text-background, var(--ddd-theme-polaris-error));
          margin: var(--ddd-spacing-5) 0;
        }

        simple-icon {
          --simple-icon-height: var(--ddd-icon-4xl);
          --simple-icon-width: var(--ddd-icon-4xl);
        }

        :host([icon="stopnoteicons:stop-icon"]) {
          --accent-color: var(--ddd-theme-polaris-original87Pink);
          --background-color: var(--ddd-theme-polaris-errorLight);
        }
        :host([status="stop"]) {
          --accent-color: var(--ddd-theme-polaris-original87Pink);
          --background-color: var(--ddd-theme-polaris-errorLight);
        }

        :host([icon="stopnoteicons:warning-icon"]) {
          --accent-color: var(--ddd-theme-polaris-keystoneYellow);
          --background-color: var(--ddd-theme-polaris-warningLight);
        }
        :host([status="warning"]) {
          --accent-color: var(--ddd-theme-polaris-keystoneYellow);
          --background-color: var(--ddd-theme-polaris-warningLight);
        }

        :host([icon="stopnoteicons:confirm-icon"]) {
          --accent-color: var(--ddd-theme-polaris-success);
          --background-color: var(--ddd-theme-polaris-successLight);
        }
        :host([status="success"]) {
          --accent-color: var(--ddd-theme-polaris-success);
          --background-color: var(--ddd-theme-polaris-successLight);
        }

        :host([icon="stopnoteicons:book-icon"]) {
          --accent-color: var(--ddd-theme-polaris-info);
          --background-color:  var(--ddd-theme-polaris-infoLight);
        }
        :host([status="info"]) {
          --accent-color:  var(--ddd-theme-polaris-info);
          --background-color:  var(--ddd-theme-polaris-infoLight);
        }

        .container {
          display: flex;
          width: auto;
        }

        .message_wrap {
          border-color: var(--ddd-component-stop-note-border, var(--accent-color));
          padding: var(--ddd-spacing-1) var(--ddd-spacing-6);
          flex: 1 1 auto;
          background-color: var(--ddd-component-stop-note-text-background, var(--background-color));
        }

        :host([title=""]) .secondary_message {
          display: flex;
          height: 60%;
          align-items: center;
          margin-top: auto;
          font-size: var(--ddd-font-size-s);
          width: 100%;
          font-weight: var(--ddd-font-primary-bold);
        }

        .secondary_message {
          width: 100%;
          font-weight: var(--ddd-font-primary-regular);
        }

        a:-webkit-any-link {
          text-decoration: none;
        }
        a:hover {
          text-decoration: underline;
        }

        .svg {
          display: flex;
          justify-content: center;
        }

        .svg_wrap {
          display: flex;
          align-items: center;
          justify-content: center;
          background-color: var(--ddd-component-stop-note-icon-background, var(--accent-color));
          padding: var(--ddd-spacing-2);
          width: auto;
        }
      `]}render(){return o`
      <div class="container">
        <div class="svg_wrap">
          <div class="svg">
            <simple-icon icon="${this.icon}" no-colorize></simple-icon>
          </div>
        </div>
        <div class="message_wrap br-lg">
          <h3 class="main_message ${this.url?"mt-2":"mt-5"} mb-2 pb-0" id="title">${this.title}</h3>
          <div class="secondary_message mb-2">
            <slot></slot>
            <slot name="message"></slot>
          </div>
          ${this.url?o`
                <div class="link mb-1">
                  <a href="${this.url}" id="link">
                    ${this.t.moreInformation} &gt;
                  </a>
                </div>
              `:""}
        </div>
      </div>
    `}static get tag(){return"stop-note-proposed"}constructor(){super(),this.url=null,this.title="",this.status="stop",this.icon="stopnoteicons:stop-icon",this.t={moreInformation:"More Information"},this.registerLocalization({context:this,basePath:import.meta.url,locales:["es"]})}static get properties(){return{...super.properties,title:{type:String,reflect:!0},url:{type:String},icon:{type:String,reflect:!0},status:{type:String,reflect:!0}}}updated(t){super.updated&&super.updated(t),t.forEach(((t,o)=>{"url"==o&&(this.remoteLinkURL=this[o]),"status"==o&&(StopNoteIconList[this[o]]?this.icon=StopNoteIconList[this[o]]:this.icon=StopNoteIconList.stop)}))}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.remoteLinkTarget=this.shadowRoot.querySelector("#link"),StopNoteIconList[this.status]?this.icon=StopNoteIconList[this.status]:this.icon=StopNoteIconList.stop}haxHooks(){return{editModeChanged:"haxeditModeChanged",activeElementChanged:"haxactiveElementChanged"}}haxeditModeChanged(t){super.haxeditModeChanged&&super.haxeditModeChanged(t),this._haxstate=t}haxactiveElementChanged(t,o){super.haxactiveElementChanged&&super.haxactiveElementChanged(t,o);let e=this.shadowRoot.querySelector("#title");return o&&null===this.getAttribute("data-hax-lock")?e.setAttribute("contenteditable",!0):(e.removeAttribute("contenteditable"),this.title=e.innerText),!1}haxinlineContextMenu(t){t.ceButtons=[{icon:"image:style",callback:"haxtoggleIcon",label:"Toggle icon"}]}haxtoggleIcon(t){const o=["stopnoteicons:stop-icon-proposed","stopnoteicons:warning-icon-proposed","stopnoteicons:confirm-icon-proposed","stopnoteicons:book-icon-proposed"];let e=o[0];return o.lastIndexOf(this.icon)!=o.length-1&&(e=o[o.lastIndexOf(this.icon)+1]),this.icon=e,!0}static get haxProperties(){return new URL(`./lib/${this.tag}.haxProperties.json`,import.meta.url).href}}customElements.define(StopNoteProposed.tag,StopNoteProposed);export{StopNoteProposed};