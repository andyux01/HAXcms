import{LitElement as t,html as e}from"lit";import{localStorageGet as s}from"@lrnwebcomponents/utils/utils.js";import"@lrnwebcomponents/jwt-login/jwt-login.js";import{toJS as i,autorun as a}from"mobx";import{store as n}from"./AppHaxStore.js";export class AppHaxBackendAPI extends t{refreshRequest;static get tag(){return"app-hax-backend-api"}constructor(){super(),this.jwt=s("jwt",null),this.method=window.appSettings.demo?"GET":"POST",this.basePath="/",this.lastResponse={},this.appSettings={},a((()=>{this.appSettings=i(n.appSettings),this.appSettings.method&&(this.method=this.appSettings.method),this.appSettings.jwt&&(this.jwt=this.appSettings.jwt)})),a((()=>{this.token=i(n.token)}))}static get properties(){return{jwt:{type:String},basePath:{type:String,attribute:"base-path"},appSettings:{type:Object},method:{type:String},token:{type:String}}}render(){return e`<jwt-login
      jwt="${this.jwt}"
      url="${this.appSettings.login}"
      method="${this.method}"
      refresh-url="${this.appSettings.refreshUrl}"
      redirect-url="${this.appSettings.redirectUrl}"
      logout-url="${this.appSettings.logout}"
      id="jwt"
      @jwt-changed="${this.jwtChanged}"
      @jwt-login-login-failed="${this.jwtFailed}"
    ></jwt-login>`}jwtFailed(t){this.jwt=null,this.token=null}async jwtChanged(t){this.jwt=t.detail.value;const e=await this.makeCall("getUserDataPath");e&&e.data&&(n.user={name:e.data.userName})}async makeCall(t,e={},s=!1,i=!1){if(this.appSettings&&this.appSettings[t]){var a=`${this.basePath}${this.appSettings[t]}`,n={method:this.method};this.jwt&&(e.jwt=this.jwt),this.token&&(e.token=this.token),"GET"===this.method?a+="?"+new URLSearchParams(e).toString():n.body=JSON.stringify(e);const p=await fetch(`${a}`,n).then((a=>a.ok?a.json():(401===a.status?window.dispatchEvent(new CustomEvent("jwt-login-logout",{composed:!0,bubbles:!0,cancelable:!1,detail:{redirect:!0}})):403===a.status&&window.dispatchEvent(new CustomEvent("jwt-login-refresh-token",{composed:!0,bubbles:!0,cancelable:!1,detail:{element:{obj:this,callback:"refreshRequest",params:[t,e,s,i]}}})),{})));return s&&(this.lastResponse[t]=p),i&&i(),p}}refreshRequest(t,e){const{call:s,data:i,save:a,callback:n}=e;this.jwt=t,this.makeCall(s,i,a,n)}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),n.AppHaxAPI=this,n.newSitePromiseList=[...n.newSitePromiseList,async()=>await this.makeCall("createSite",this._formatSitePostData(),!0)]}_formatSitePostData(){const t=i(n.site);return{site:{name:t.name,description:`${t.type} ${t.structure}`,theme:t.theme},theme:{color:"blue",icon:"icons:link"}}}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"jwt"===e&&(n.jwt=this[e]),"token"===e&&(n.token=this[e])}))}}window.AppHaxAPI=window.AppHaxAPI||{},window.AppHaxAPI.requestAvailability=()=>(window.AppHaxAPI.instance||(window.AppHaxAPI.instance=document.createElement(AppHaxBackendAPI.tag),document.body.appendChild(window.AppHaxAPI.instance)),window.AppHaxAPI.instance);export const AppHaxAPI=window.AppHaxAPI.requestAvailability();customElements.define(AppHaxBackendAPI.tag,AppHaxBackendAPI);