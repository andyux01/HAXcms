/**
 * Copyright 2022 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as a,nothing as i}from"../../../../../lit/index.js";import{unsafeHTML as s}from"../../../../../lit/directives/unsafe-html.js";import{store as l}from"../../core/haxcms-site-store.js";import{MicroFrontendRegistry as r}from"../../../../micro-frontend-registry/micro-frontend-registry.js";import{enableServices as o}from"../../../../micro-frontend-registry/lib/microServices.js";import"../../../../simple-fields/lib/simple-tags.js";import"../../../../simple-fields/lib/simple-fields-field.js";import"../../../../simple-fields/lib/simple-fields-tag-list.js";import"../../../../simple-icon/lib/simple-icon-button-lite.js";import"../../../../editable-table/lib/editable-table-display.js";import{iconFromPageType as d}from"../../../../course-design/lib/learning-component.js";import{autorun as n,toJS as c}from"../../../../../mobx/dist/mobx.esm.js";export class SiteViewsRoute extends t{static get tag(){return"site-views-route"}static get styles(){return[a`
        :host {
          display: block;
          font-size: 16px;
        }
        editable-table-display::part(tag-link),
        a {
          text-decoration: none;
          font-size: 16px;
        }
        [data-active] {
          background-color: var(--simple-colors-default-theme-accent-1);
        }
        simple-icon-button-lite {
          border-radius: 0;
          font-size: 16px;
        }
        /* list display */
        .list {
          margin: 0;
          padding: 0;
          list-style: none;
        }
        .list-item {
          margin: 0;
          padding: 16px;
          border-bottom: 1px solid var(--simple-colors-default-theme-grey-3);
        }
        .list-item:hover {
          background-color: var(--simple-colors-default-theme-grey-2);
        }
        .list-link a {
          font-size: 32px;
        }
        .list-breadcrumb {
          font-size: 10px;
        }


        /* editable table display */
        editable-table-display,
        editable-table-display::part(table),
        table,tr,th,td {
          font-size: 16px;
        }
    `]}constructor(){super(),this.loading=!1,this.params={display:"list"},this.results=[],this._debounce=null,o(["haxcms"]),n((()=>{l.currentRouterLocation;clearTimeout(this._debounce),this._debounce=setTimeout((async()=>{await this.rebuildSearchResults()}),0)}))}async rebuildSearchResults(){if(!this.loading&&"views"===l.getInternalRoute()){const t=new URLSearchParams(location.search),e=Object.fromEntries(t);this.params={...this.params,...e},e.display||(t.set("display",this.params.display||"list"),window.history.replaceState({},"",decodeURIComponent(`./x/views?${t}`)));const a=c(l.manifest);let i=document.querySelector("base").href;i||(i="/");const s={type:"site",site:{file:i+"site.json",id:a.id,title:a.title,author:a.author,description:a.description,license:a.license,metadata:a.metadata,items:a.items},link:i,...e};this.loading=!0;const o=await r.call("@haxcms/views",s);o.data&&(this.results=o.data),this.loading=!1}}toggleDisplay(t){const e=new URLSearchParams(window.location.search);e.set("display",t.target.dataset.display),window.history.pushState({},"",decodeURIComponent(`./x/views?${e}`)),this.params=Object.fromEntries(e)}toggleMediaDisplay(t){const e=new URLSearchParams(window.location.search);e.set("mediatype",t.target.dataset.mediatype),window.history.pushState({},"",decodeURIComponent(`./x/views?${e}`)),this.params=Object.fromEntries(e)}evaluateTagValue(t){setTimeout((()=>{if(0===this.shadowRoot.querySelector("simple-fields-tag-list").tagList.length){const t=new URLSearchParams(window.location.search);t.delete("tag"),window.history.pushState({},"",decodeURIComponent(`./x/views?${t}`)),this.params=Object.fromEntries(t)}}),0)}render(){return e`
    <simple-icon-button-lite ?data-active="${"list"===this.params.display}" data-display="list" @click="${this.toggleDisplay}" icon="hax:module">List display</simple-icon-button-lite>
    <simple-icon-button-lite ?data-active="${"table"===this.params.display}" data-display="table" @click="${this.toggleDisplay}" icon="editable-table:col-striped">Table display</simple-icon-button-lite>
    <simple-icon-button-lite ?data-active="${"card"===this.params.display}" data-display="card" @click="${this.toggleDisplay}" icon="image:grid-on">Card display</simple-icon-button-lite>
    <simple-icon-button-lite ?data-active="${"media"===this.params.display}" data-display="media" @click="${this.toggleDisplay}" icon="hax:multimedia">Media display</simple-icon-button-lite>
    <simple-icon-button-lite @click="${this.rebuildSearchResults}" icon="refresh">Refresh data</simple-icon-button-lite>
    
    <simple-fields-tag-list
      style="background-color:transparent;"
      label="Tags"
      single-value-only
      @click="${this.evaluateTagValue}"
      .value="${this.params.tag||null}"
    ></simple-fields-tag-list>
    ${this.loading?e`<h3>Loading...</h3>`:e`<h3>Results</h3>
${"list"===this.params.display?this.listTemplate():i}
${"table"===this.params.display?this.tableTemplate():i}
${"card"===this.params.display?this.cardTemplate():i}
${"media"===this.params.display?this.mediaTemplate():i}
    <slot></slot>`}`}iconFromKey(t){switch(t){case"audio":return"av:volume-up";case"selfChecks":return"hax:check";case"objectives":return"hax:learning-outcome";case"authorNotes":return"hax:note";case"images":return"image:photo";case"h5p":return"hax:h5p";case"headings":return"editor:format-size";case"dataTables":return"editor:table-chart";case"specialTags":return"hax:tag";case"links":return"editor:link";case"placeholders":return"editor:insert-comment";case"siteremotecontent":return"hax:remote";case"video":return"av:videocam";default:return"hax:module"}}mediaTemplate(){let t=["audio","selfChecks","objectives","authorNotes","images","h5p","headings","dataTables","specialTags","links","placeholders","siteremotecontent","video"];return e`
    <div>
      ${t.map((t=>e`
        <simple-icon-button-lite ?data-active="${this.params.mediatype===t}" data-mediatype="${t}" @click="${this.toggleMediaDisplay}" icon="${this.iconFromKey(t)}">${t}</simple-icon-button-lite>
      `))}
    </div>
    <div>
    ${this.results.map((a=>e`
      ${t.map((t=>e`${"string"==typeof a.media[t]&&this.params.mediatype===t?s(a.media[t]):i}`))}
      `))}
    </div>
    `}listTemplate(){return e`
    <ul class="list">
      ${this.results.map((t=>e`
        <li class="list-item">
          <div class="list-link"><a href="${t.slug}">${t.title}</a></div>
          <div class="list-breadcrumb">${this.calculateBreadcrumb(t).map((t=>e`
          <span>${t.title}</span> `))}</div>
        ${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((a=>e`<a href="x/views?tag=${a.trim()}">
          <simple-tag
            auto-accent-color
            value="${a.trim()}"
            accent-color="${t.accentColor}"
          ></simple-tag></a>`)):i}
      </li>`))}
      </ul>`}tableTemplate(){return e`
    <editable-table-display 
      accent-color="cyan" 
      bordered 
      caption="Content matching your search criteria" 
      numeric-styles
      column-header
      printable
      downloadable
      sort
      striped>
    <table>
      <tr>
        <th>Icon</th>
        <th>Type</th>
        <th>Title</th>
        <th>Tags</th>
        <th>Updated</th>
        <th>Created</th>
        <th>Status</th>
      </tr>
    ${this.results.map((t=>e`
      <tr>
        <td>${t.metadata.pageType?e`<simple-icon title="${t.metadata.pageType}" icon="${d(t.metadata.pageType)}"></simple-icon>`:i}</td>
        <td>${t.metadata.pageType?t.metadata.pageType:i}</td>
        <td><a href="${t.slug}">${t.title}</a></td>
        <td>
          ${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((a=>e`<a part="tag-link" href="x/views?tag=${a.trim()}">
            <simple-tag
              auto-accent-color
              value="${a.trim()}"
              accent-color="${t.accentColor}"
            ></simple-tag></a>`)):i}
        </td>
        <td>
          <simple-datetime
            format="m/j/y"
            timestamp="${t.metadata.created}"
            unix
            class="info-date"
          ></simple-datetime>
        </td>
        <td>
          <simple-datetime
            format="m/j/y"
            timestamp="${t.metadata.updated}"
            unix
            class="info-date"
          ></simple-datetime>
        </td>
        <td>
          ${!1!==t.metadata.published?"published":"unpublished"}
        </td>
      </tr>`))}
      </table>
      </editable-table-display>`}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"params"===e&&t&&this.params&&(t.tag!==this.params.tag||"media"===this.params.display)&&this.rebuildSearchResults()}))}cardTemplate(){return e`${this.results.map((t=>e`
        <accent-card image-src="http://placekitten.com/200/600" accent-color="red" horizontal accent-heading>
          <div slot="heading">${t.title}</div>
          <div slot="subheading">${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((a=>e`<a href="x/views?tag=${a.trim()}">
                  <simple-tag
                    auto-accent-color
                    value="${a.trim()}"
                    accent-color="${t.accentColor}"
                  ></simple-tag></a>`)):i}</div>
          <div slot="content">        <a href="${t.slug}">Link to content</a>
        </div>
        </accent-card>`))}`}calculateBreadcrumb(t){let e=[];const a=c(l.manifest);let i=t;for(;i&&null!=i.parent;)i=a.items.find((t=>t.id==i.parent)),i&&e.unshift({title:i.title});return e}activateView(t){const e=new URLSearchParams(window.location.search);e.set("tag",t.target.value),window.history.pushState({},"",decodeURIComponent(`./x/views?${e}`))}static get properties(){return{results:{type:Array},loading:{type:Boolean,reflect:!0},params:{type:Object}}}}customElements.define(SiteViewsRoute.tag,SiteViewsRoute);