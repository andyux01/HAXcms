/**
 * Copyright 2022 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as s,nothing as i}from"../../../../../lit/index.js";import{HAXCMSI18NMixin as a}from"../../core/utils/HAXCMSI18NMixin.js";import"../../../../simple-fields/lib/simple-tags.js";import"../../../../simple-fields/lib/simple-fields-field.js";import"../../../../simple-icon/lib/simple-icon-button-lite.js";import"../../../../simple-icon/lib/simple-icon-lite.js";import"../../../../grid-plate/grid-plate.js";import{loadViewsForm as l,mediaKeys as r}from"../magic/site-view.js";export class SiteViewsRoute extends(a(e)){static get tag(){return"site-views-route"}static get styles(){return[s`
        :host {
          display: block;
          font-size: 16px;
        }
        h3 {
          margin: 4px 0;
          padding: 0;
        }
        a {
          text-decoration: none;
          font-size: 16px;
        }
        [data-active] {
          background-color: var(--simple-colors-default-theme-accent-1);
        }
        simple-icon-button-lite {
          border-radius: 0;
          font-size: 16px;
        }
        /* list display */
        .list {
          margin: 0;
          padding: 0;
          list-style: none;
        }
        .list-item {
          margin: 0;
          padding: 16px;
          border-bottom: 1px solid var(--simple-colors-default-theme-grey-3);
        }
        .list-item:hover {
          background-color: var(--simple-colors-default-theme-grey-2);
        }
        .list-link a {
          font-size: 32px;
        }
        .list-breadcrumb {
          font-size: 10px;
        }

        .overview {
          padding: 0;
          margin: 0;
          list-style: none;
          font-size: 12px;
        }
    `]}constructor(){super(),this.search=window.location.search,this.t=super.t||{},this.t={...this.t,selectPage:"Select Page",title:"Title",parent:"Parent",block:"Block",tags:"Tags"},this.loading=!1,this.params={display:"list",displayOf:"title"},this._searchDebounce=null}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.shadowRoot.querySelector("#schema").fields=l(),setTimeout((()=>{this.shadowRoot.querySelector("#schema").value={settings:{displayFormat:{displayedAs:this.params.display||"list",displayOf:this.params.displayOf||"title"},filters:{title:this.params.title||"",parent:this.params.parent||"",tags:this.params.tags?this.params.tags:"",blockFilter:this.params.blockFilter||""}}}}),0)}formValuesChanged(e){clearTimeout(this._formDebounce),this._formDebounce=setTimeout((()=>{const t=new URLSearchParams(window.location.search),s=e.detail.value.settings;if(s&&s.displayFormat&&s.filters){if(s.displayFormat.displayedAs&&t.set("display",s.displayFormat.displayedAs),s.displayFormat.displayOf&&(t.set("displayOf",s.displayFormat.displayOf),this.shadowRoot.querySelector("#schema").formElements["settings.filters.blockFilter"]&&(this.shadowRoot.querySelector("#schema").formElements["settings.filters.blockFilter"].element.hidden="blocks"!==s.displayFormat.displayOf)),s.filters.title?t.set("title",s.filters.title):t.delete("title"),s.filters.parent&&"null"!=s.filters.parent?t.set("parent",s.filters.parent):t.delete("parent"),s.filters.tags?t.set("tags",s.filters.tags):t.delete("tags"),s.filters.blockFilter&&"blocks"===s.displayFormat.displayOf){let e=s.filters.blockFilter;parseInt(e)&&r[parseInt(e)]&&(e=r[e]),t.set("blockFilter",e)}else t.delete("blockFilter");window.history.pushState({},"",decodeURIComponent(`./x/views?${t}`)),this.search=`?${decodeURIComponent(t)}`}}),600)}iconForDisplay(e){switch(e){case"list":default:return"hax:module";case"table":return"editable-table:col-striped";case"card":return"image:grid-on";case"contentplayer":return"hax:multimedia"}}render(){return t`
<grid-plate cols="1-1" disable-responsive>
  <div slot="col-1">
    <form id="form"><simple-fields id="schema" @value-changed="${this.formValuesChanged}"></simple-fields></form>
  </div>
  <div slot="col-2">
    <ul class="overview">
      <li>Display:
        <simple-icon-lite icon="${this.iconForDisplay(this.params.display)}"></simple-icon-lite>
        ${this.params.display} of ${this.params.displayOf}
      </li>
      <li>Filters:
        <ul>
          ${this.params.title?t`<li>${this.t.title}: ${this.params.title}</li>`:i}
          ${this.params.parent?t`<li>${this.t.parent}: ${this.params.parent}</li>`:i}
          ${this.params.tags?t`<li>${this.t.tags}: ${this.params.tags}</li>`:i}
          ${this.params.blockFilter?t`<li>${this.t.block}: ${this.params.blockFilter}</li>`:i}
          <textarea cols="40" rows="5"><site-view search="${this.search}"></site-view></textarea>
        </ul>
      </li>
    </ul>
  </div>
</grid-plate>
${this.loading?t`<h3>Loading...</h3>`:t`<h3>Results <simple-icon-button-lite icon="refresh" @click="${this.refreshData}">Refresh</simple-icon-button-lite></h3>`}
<site-view search="${this.search}" @loading-changed="${this.syncLoad}"></site-view>
    <slot></slot>`}refreshData(e){this.shadowRoot.querySelector("site-view").rebuildSearchResults()}syncLoad(e){this.loading=e.detail.value}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{if("search"===t&&e&&this.search){const e=new URLSearchParams(this.search),t=Object.fromEntries(e);this.params=t,t.display||(e.set("display",this.params.display||"list"),window.history.replaceState({},"",decodeURIComponent(`./x/views?${e}`)))}"params"===t&&e&&this.params&&this.shadowRoot&&this.shadowRoot.querySelector("site-view").rebuildSearchResults()}))}static get properties(){return{...super.properties,loading:{type:Boolean,reflect:!0},params:{type:Object},search:{type:String}}}}customElements.define(SiteViewsRoute.tag,SiteViewsRoute);