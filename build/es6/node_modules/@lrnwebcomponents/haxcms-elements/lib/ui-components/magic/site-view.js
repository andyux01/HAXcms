/**
 * Copyright 2022 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as i,render as a,nothing as s}from"../../../../../lit/index.js";import{unsafeHTML as l}from"../../../../../lit/directives/unsafe-html.js";import{store as r}from"../../core/haxcms-site-store.js";import{MicroFrontendRegistry as o}from"../../../../micro-frontend-registry/micro-frontend-registry.js";import{enableServices as n}from"../../../../micro-frontend-registry/lib/microServices.js";import"../../../../simple-fields/lib/simple-tags.js";import"../../../../simple-fields/lib/simple-fields-field.js";import"../../../../simple-icon/lib/simple-icon-button-lite.js";import"../../../../simple-icon/lib/simple-icon-lite.js";import"../../../../hax-iconset/lib/simple-hax-iconset.js";import"../../../../editable-table/lib/editable-table-display.js";import"../../../../play-list/play-list.js";import"../site/site-remote-content.js";import{iconFromPageType as d}from"../../../../course-design/lib/learning-component.js";export const mediaKeys=["audio","selfChecks","objectives","authorNotes","images","h5p","headings","dataTables","specialTags","links","placeholders","siteremotecontent","video"];export function loadViewsForm(){const t=r.getManifest(!0);var e=[{text:"Select page",value:null}];return t.items.forEach((i=>{let a=i,s="- ";for(;a&&null!=a.parent;)a=t.items.find((t=>t.id==a.parent)),a&&(s="--"+s);e.push({text:s+i.title,value:i.id})})),[{property:"settings",inputMethod:"collapse",properties:[{property:"displayFormat",title:"Display format",accordion:!0,expanded:!1,properties:[{property:"displayedAs",title:"Displayed as",description:"How the entire display should be rendered",inputMethod:"select",options:{list:"List",table:"Table",card:"Card",contentplayer:"Content Player"}},{property:"displayOf",title:"Results as",description:"How do you want each result to appear",inputMethod:"select",options:{title:"Title",full:"Full content",fullRemote:"Full content (remote load)",blocks:"Blocks"}}]},{property:"filters",title:"Filters",accordion:!0,expanded:!1,properties:[{property:"parent",title:"Parent",description:"Limit results to those that have this item as it's parent",inputMethod:"select",itemsList:e},{property:"tags",title:"Tags",description:"Filter by tags, comma separated",inputMethod:"text"},{property:"title",title:"Title",description:"Filter by title",inputMethod:"text"},{property:"blockFilter",title:"Block filter",description:"Filter by block type",inputMethod:"select",options:mediaKeys}]}]}]}export class SiteView extends t{static get tag(){return"site-view"}static get styles(){return[i`
        :host {
          display: block;
          font-size: 16px;
        }
        h3 {
          margin: 4px 0;
          padding: 0;
        }
        editable-table-display::part(tag-link),
        a {
          text-decoration: none;
          font-size: 16px;
        }
        [data-active] {
          background-color: var(--simple-colors-default-theme-accent-1);
        }
        simple-icon-button-lite {
          border-radius: 0;
          font-size: 16px;
        }
        :host([loading]) .loading {
          width: 100%;
          --simple-icon-height: 50px;
          --simple-icon-width: 50px;
        }
        /* list display */
        .list {
          margin: 0;
          padding: 0;
          list-style: none;
        }
        .list-item {
          margin: 0;
          padding: 16px;
          border-bottom: 1px solid var(--simple-colors-default-theme-grey-3);
        }
        .list-item:hover {
          background-color: var(--simple-colors-default-theme-grey-2);
        }
        .list-link a {
          font-size: 32px;
        }
        .list-breadcrumb {
          font-size: 10px;
        }

        .overview {
          padding: 0;
          margin: 0;
          list-style: none;
          font-size: 12px;
        }

        /* editable table display */
        editable-table-display,
        editable-table-display::part(table),
        table,tr,th,td {
          font-size: 16px;
        }
    `]}constructor(){super(),this.loading=!1,this.params={display:"list",displayOf:"title"},this.results=[],this._searchDebounce=null,n(["haxcms"])}static get haxProperties(){return{canScale:!1,canPosition:!1,canEditSource:!1,gizmo:{title:"Site View",description:"A dynamic block that queries and displays certain information based on criteria",icon:"av:call-to-action",color:"grey",tags:["Other","haxcms"],handles:[],meta:{author:"HAXTheWeb core team",owner:"The Pennsylvania State University"}},settings:{configure:loadViewsForm(),advanced:[{property:"search",title:"View URL",description:"URL containing criteria for generating the view. You can obtain this from the Views page.",inputMethod:"textfield",required:!0}]},demoSchema:[{tag:"site-view",properties:{},content:""}]}}rebuildSearchResults(){clearTimeout(this._searchDebounce),this._searchDebounce=setTimeout((async()=>{if(this.shadowRoot&&!this.loading){const t=r.getManifest(!0);let e=document.querySelector("base").href;e||(e="/");const i={type:"site",site:{file:e+"site.json",id:t.id,title:t.title,author:t.author,description:t.description,license:t.license,metadata:t.metadata,items:t.items},link:e,...this.params};this.loading=!0;const a=await o.call("@haxcms/views",i);a.data&&(this.results=[...a.data]),this.loading=!1}}),100)}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.rebuildSearchResults()}render(){return e`
    ${this.loading?e`<div class="loading">${this.loading?e`<simple-icon-lite icon="hax:loading"></simple-icon-lite>`:""}</div>
`:e`
${0!==this.results.length||this.loading?s:e`<h4>No results found</h4><p>Try changing the filter criteria.</p>`}
${"list"===this.params.display?this.listTemplate():s}
${"table"===this.params.display?this.tableTemplate():s}
${"card"===this.params.display?this.cardTemplate():s}
${"contentplayer"===this.params.display?this.contentplayerTemplate():s}
    <slot></slot>`}`}contentplayerTemplate(){return e`<play-list id="contentplayertemplate"></play-list>`}listTemplate(){return e`
    <ul class="list">
      ${this.results.map((t=>e`
        <li class="list-item">
    ${"blocks"===this.params.displayOf?mediaKeys.map((e=>t.media&&t.media[e]&&"string"==typeof t.media[e]&&this.params.blockFilter===e?l(t.media[e]):s)):e`<div class="play-list-item">
      ${"title"===this.params.displayOf?e`<div class="list-link"><a href="${t.slug}">${t.title}</a></div>
      <div class="list-breadcrumb">${this.calculateBreadcrumb(t).map((t=>e`
      <span>${t.title}</span> `))}</div>
      ${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((i=>e`<a href="x/views?tags=${i.trim()}">
          <simple-tag
            auto-accent-color
            value="${i.trim()}"
            accent-color="${t.accentColor}"
          ></simple-tag></a>`)):s}`:"full"===this.params.displayOf?l(`<h3>${t.title}</h3>`+t.contents):e`<site-remote-content player hide-reference uuid="${t.id}" show-title></site-remote-content>`}</div>`}
      </li>`))}
      </ul>`}tableTemplate(){return e`
    <editable-table-display 
      accent-color="cyan" 
      bordered 
      caption="Content matching your search criteria" 
      numeric-styles
      column-header
      printable
      downloadable
      sort
      striped>
    <table>
      <tr>
        <th>Icon</th>
        <th>Type</th>
        <th>Title</th>
        <th>Tags</th>
        <th>Updated</th>
        <th>Created</th>
        <th>Status</th>
      </tr>
    ${this.results.map((t=>e`
      <tr>
        <td>${t.metadata.pageType?e`<simple-icon title="${t.metadata.pageType}" icon="${d(t.metadata.pageType)}"></simple-icon>`:s}</td>
        <td>${t.metadata.pageType?t.metadata.pageType:s}</td>
        <td><a href="${t.slug}">${t.title}</a></td>
        <td>
          ${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((i=>e`<a part="tag-link" href="x/views?tags=${i.trim()}">
            <simple-tag
              auto-accent-color
              value="${i.trim()}"
              accent-color="${t.accentColor}"
            ></simple-tag></a>`)):s}
        </td>
        <td>
          <simple-datetime
            format="m/j/y"
            timestamp="${t.metadata.created}"
            unix
            class="info-date"
          ></simple-datetime>
        </td>
        <td>
          <simple-datetime
            format="m/j/y"
            timestamp="${t.metadata.updated}"
            unix
            class="info-date"
          ></simple-datetime>
        </td>
        <td>
          ${!1!==t.metadata.published?"published":"unpublished"}
        </td>
      </tr>`))}
      </table>
      </editable-table-display>`}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{if("loading"===e&&this.dispatchEvent(new CustomEvent("loading-changed",{detail:{value:this.loading}})),"search"===e&&t&&this.search){const t=new URLSearchParams(this.search),e=Object.fromEntries(t);this.params={...this.params,...e},this.rebuildSearchResults()}"results"===e&&t&&this.results&&"contentplayer"===this.params.display&&setTimeout((()=>{this.renderPlayListTemplate()}),0)}))}renderPlayListTemplate(){let t=document.createElement("template");a(e`${this.results.map((t=>e`
    ${"blocks"===this.params.displayOf?mediaKeys.map((e=>t.media&&t.media[e]&&"string"==typeof t.media[e]&&this.params.blockFilter===e?l(t.media[e]):s)):e`<div class="play-list-item">
      ${"title"===this.params.displayOf?e`<div class="list-link"><a href="${t.slug}">${t.title}</a></div>
      <div class="list-breadcrumb">${this.calculateBreadcrumb(t).map((t=>e`
      <span>${t.title}</span> `))}</div>`:"full"===this.params.displayOf?l(`<h3>${t.title}</h3>`+t.contents):e`<site-remote-content player hide-reference uuid="${t.id}" show-title></site-remote-content>`}</div>`}`))}`,t),this.shadowRoot.querySelector("#contentplayertemplate").appendChild(t)}cardTemplate(){return e`${this.results.map((t=>e`
        <accent-card image-src="http://placekitten.com/200/600" accent-color="red" horizontal accent-heading>
          <div slot="heading">${t.title}</div>
          <div slot="subheading">${t.metadata.tags&&""!=t.metadata.tags?t.metadata.tags.split(",").map((i=>e`<a href="x/views?tags=${i.trim()}">
                  <simple-tag
                    auto-accent-color
                    value="${i.trim()}"
                    accent-color="${t.accentColor}"
                  ></simple-tag></a>`)):s}</div>
          <div slot="content"><a href="${t.slug}">Link to content</a>
        </div>
        </accent-card>`))}`}calculateBreadcrumb(t){let e=[];const i=r.getManifest(!0);let a=t;for(;a&&null!=a.parent;)a=i.items.find((t=>t.id==a.parent)),a&&e.unshift({title:a.title});return e}static get properties(){return{search:{type:String,reflect:!0},results:{type:Array},loading:{type:Boolean,reflect:!0},params:{type:Object}}}}customElements.define(SiteView.tag,SiteView);