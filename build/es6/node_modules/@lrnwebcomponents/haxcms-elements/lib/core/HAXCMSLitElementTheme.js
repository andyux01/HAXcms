/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{css as t,LitElement as e,render as o,unsafeCSS as a}from"../../../../lit/index.js";import{HAXCMSTheme as i}from"./HAXCMSThemeWiring.js";import{ResponsiveUtilityBehaviors as n}from"../../../responsive-utility/lib/responsive-utility-behaviors.js";import{store as r}from"./haxcms-site-store.js";import{autorun as s,toJS as c}from"../../../../mobx/dist/mobx.esm.js";import"../../../simple-icon/lib/simple-icons.js";import{SimpleIconsetStore as l}from"../../../simple-icon/lib/simple-iconset.js";import{editableTableDisplayStyles as d}from"../../../editable-table/lib/editable-table-behaviors.js";import{learningComponentColors as h,iconFromPageType as p}from"../../../course-design/lib/learning-component.js";class HAXCMSLitElementTheme extends(i(n(e))){constructor(){super(),this.editMode=!1,this.isLoggedIn=!1,this.__disposer=this.__disposer?this.__disposer:[],s((t=>{this.editMode=c(r.editMode),this.__disposer.push(t)})),s((t=>{c(r.activeItemContent);this.HAXCMSThemeSettings.autoScroll&&this.shadowRoot&&this.HAXCMSThemeSettings.scrollTarget&&this.HAXCMSThemeSettings.scrollTarget.scrollTo({top:0,left:0}),setTimeout((()=>{let t=this.querySelectorAll("h1,h2,h3,h4,h5,h6");t.length>0&&t.forEach((t=>{t.addEventListener("click",this.copyLink.bind(this)),t.addEventListener("pointerenter",this.hoverIntentEnter.bind(this)),t.addEventListener("pointerout",this.hoverIntentLeave.bind(this))}))}),500),this.__disposer.push(t)}))}hoverIntentEnter(t){this.__styleTag=document.createElement("style");let e=l.getIcon("icons:link");this.__styleTag.innerHTML=`\n    #${t.target.getAttribute("id")} { cursor: copy; text-decoration: dotted underline}\n    #${t.target.getAttribute("id")} {\n      background-image: url("${e}");\n      background-position: right;\n      background-repeat: no-repeat;\n      background-size: 36px;\n    }`,t.target.appendChild(this.__styleTag)}hoverIntentLeave(t){this.__styleTag&&this.__styleTag.remove()}HAXCMSGlobalStyleSheetContent(){let e=["red","blue","green","orange","purple"].map((e=>t`
          .haxcms-theme-element [data-style-decoration~="highlight"] {
            color: var(--haxcms-style-element-color, white);
            background-color: var(
              --haxcms-style-element-background-color,
              black
            );
            font-weight: 400;
            word-wrap: break-word;
            padding: 4px 8px;
            text-transform: uppercase;
            text-decoration: none;
          }
          .haxcms-theme-element [data-style-decoration~="${a(e)}"] {
            --haxcms-style-element-background-color: var(
              --simple-colors-default-theme-${a(e)}-7,
              ${a(e)}
            );
          }
        `)),o=Object.keys(h).map((e=>{let o=h[e];return t`
          h1[data-instructional-action="${a(e)}"],
          h2[data-instructional-action="${a(e)}"],
          h3[data-instructional-action="${a(e)}"],
          h4[data-instructional-action="${a(e)}"],
          h5[data-instructional-action="${a(e)}"],
          h6[data-instructional-action="${a(e)}"] {
            --hax-action-color: var(
              --simple-colors-default-theme-${a(o)}-8,
              ${a(o)}
            );
            --hax-action-line-color: var(
              --simple-colors-default-theme-${a(o)}-8,
              ${a(o)}
            );
            --hax-action-accent-color: #eeeeee;
            --hax-action-border: var(
                --simple-colors-default-theme-${a(o)}-8,
                ${a(o)}
              )
              solid 3px;
          }

          h1[data-instructional-action="${a(e)}"]::after,
          h2[data-instructional-action="${a(e)}"]::after,
          h3[data-instructional-action="${a(e)}"]::after,
          h4[data-instructional-action="${a(e)}"]::after,
          h5[data-instructional-action="${a(e)}"]::after,
          h6[data-instructional-action="${a(e)}"]::after {
            -webkit-mask-image: url("${a(l.getIcon(p(e)))}");
          }
          hr[data-instructional-action="${a(e)}"] {
            --hax-action-color: var(
              --simple-colors-default-theme-${a(e)}-8,
              ${a(e)}
            );
            --hax-action-line-color: var(
              --simple-colors-default-theme-${a(o)}-8,
              ${a(e)}
            );
            --hax-action-accent-color: #eeeeee;
            --hax-action-border: var(
                --simple-colors-default-theme-${a(e)}-8,
                ${a(e)}
              )
              solid 3px;
          }

          hr[data-instructional-action="${a(e)}"]::after {
            -webkit-mask-image: url("${a(l.getIcon(p(e)))}");
          }
        `}));return[t`
        hr[data-instructional-action] {
          border: none;
          border-top: 2px dashed var(--hax-action-line-color, blue);
          overflow: visible;
          text-align: center;
          height: 4px;
          padding: 0px;
          background-color: white;
        }

        hr[data-instructional-action]::before {
          background-color: var(--hax-action-accent-color, #aaa);
          height: 50px;
          width: 50px;
          margin: 0 auto;
          background-position: center;
          content: "";
          display: block;
          top: -28px;
          position: relative;
          z-index: 1;
          border: var(--hax-action-border, 2px solid blue);
          border-radius: 50%;
        }

        hr[data-instructional-action]::after {
          content: "";
          position: relative;
          z-index: 2;
          background-color: var(--hax-action-color, blue);
          mask-repeat: no-repeat;
          mask-size: contain;
          -webkit-mask-repeat: no-repeat;
          -webkit-mask-size: contain;
          padding: 18px;
          top: -54px;
        }
        h1[data-instructional-action],
        h2[data-instructional-action],
        h3[data-instructional-action],
        h4[data-instructional-action],
        h5[data-instructional-action],
        h6[data-instructional-action] {
          padding-left: 72px;
        }
        h1[data-instructional-action]::before,
        h2[data-instructional-action]::before,
        h3[data-instructional-action]::before,
        h4[data-instructional-action]::before,
        h5[data-instructional-action]::before,
        h6[data-instructional-action]::before {
          background-color: var(--hax-action-accent-color, #aaa);
          height: 50px;
          width: 50px;
          background-position: center;
          content: "";
          display: block;
          position: absolute;
          z-index: 1;
          border: var(--hax-action-border, 3px solid black);
          border-radius: 50%;
          left: 0px;
          margin: 4px;
        }
        h1[data-instructional-action]::after,
        h2[data-instructional-action]::after,
        h3[data-instructional-action]::after,
        h4[data-instructional-action]::after,
        h5[data-instructional-action]::after,
        h6[data-instructional-action]::after {
          content: "";
          position: relative;
          z-index: 2;
          background-color: var(--hax-action-color, blue);
          mask-repeat: no-repeat;
          mask-size: contain;
          -webkit-mask-repeat: no-repeat;
          -webkit-mask-size: contain;
          padding: 22px;
          margin: 10px;
          position: absolute;
          left: 0px;
        }
        [data-instructional-action][data-id-emphasize] {
          background-color: var(--hax-action-color) !important;
          color: white;
        }
      `,...e,...o,d]}copyLink(t){let e=t.target;e||(e=t.path[0]);let o=document.createElement("textarea");o.value=window.location.origin+window.location.pathname+"#"+e.getAttribute("id"),window.history.pushState({},null,o.value),document.body.appendChild(o),o.select(),document.execCommand("copy"),document.body.removeChild(o),window.dispatchEvent(new CustomEvent("haxcms-toast-show",{cancelable:!0,detail:{text:"Link copied to clipboard",duration:3e3}}))}static get properties(){let t={};return super.properties&&(t=super.properties),{...t,hexColor:{type:String,attribute:"hex-color"},color:{type:String,reflect:!0},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},isLoggedIn:{type:Boolean,reflect:!0,attribute:"is-logged-in"},contentContainer:{type:Object},_location:{type:Object}}}static get styles(){let e=[];return super.styles&&(e=super.styles),[...e,t`
        :host([edit-mode]) {
          opacity: 1;
          --hax-base-styles-p-min-height: 38px;
        }
        :host([hidden]) {
          display: none;
        }
        [hidden] {
          display: none !important;
        }

        @media (prefers-reduced-motion: reduce) {
          * {
            transition: none !important;
          }
        }
        /**
        * Hide the slotted content during edit mode. This must be here to work.
        */
        :host([edit-mode]) #slot {
          display: none;
        }
        #slot {
          min-height: 50vh;
        }
      `]}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),null==this.contentContainer&&(this.contentContainer=this.shadowRoot.querySelector("#contentcontainer")),o(this.HAXCMSGlobalStyleSheetContent(),r.themeStyleElement)}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"_location"==e&&this._locationChanged(this[e],t),"color"==e&&this._colorChanged(this[e],t),"contentContainer"==e&&(this.dispatchEvent(new CustomEvent("content-container-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this[e]})),this._contentContainerChanged(this[e],t)),"isLoggedIn"==e&&this.dispatchEvent(new CustomEvent("is-logged-in-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this[e]})),"editMode"==e&&(this.dispatchEvent(new CustomEvent("edit-mode-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this[e]})),this._editModeChanged(this[e],t))}))}}export{HAXCMSLitElementTheme};