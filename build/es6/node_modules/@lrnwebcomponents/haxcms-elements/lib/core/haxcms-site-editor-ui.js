import{html as e,css as t,unsafeCSS as o}from"../../../../lit/index.js";import{store as i}from"./haxcms-site-store.js";import{HaxStore as a,HAXStore as s}from"../../../hax-body/lib/hax-store.js";import{autorun as n,toJS as d}from"../../../../mobx/dist/mobx.esm.js";import{localStorageSet as l}from"../../../utils/utils.js";import"../../../simple-icon/simple-icon.js";import"../../../simple-icon/lib/simple-icons.js";import{HAXCMSThemeParts as r}from"./utils/HAXCMSThemeParts.js";import{HAXCMSI18NMixin as p}from"./utils/HAXCMSI18NMixin.js";import"../../../rpg-character/rpg-character.js";import"../../../app-hax/lib/v1/app-hax-top-bar.js";import"../../../app-hax/lib/v1/app-hax-user-menu.js";import"../../../app-hax/lib/v1/app-hax-user-menu-button.js";import"../../../../wired-elements/lib/wired-button.js";import{SimpleColors as c}from"../../../simple-colors/simple-colors.js";import{SuperDaemonInstance as h}from"../../../super-daemon/super-daemon.js";import"../../../simple-modal/simple-modal.js";import"./haxcms-site-insights.js";import"../../../simple-fields/lib/simple-fields-form.js";import"./micros/haxcms-button-add.js";import"./haxcms-darkmode-toggle.js";import"../ui-components/site/site-remote-content.js";import"../../../page-flag/page-flag.js";const m=new URL("../../../app-hax/lib/assets/images/HAXLogo.svg",import.meta.url).href,u=(new URL("../../../app-hax/lib/assets/images/ButtonBGLM.svg",import.meta.url).href,new URL("../../../app-hax/lib/assets/images/ButtonBGDM.svg",import.meta.url).href,new URL("../../../app-hax/lib/assets/images/Logout.svg",import.meta.url).href);class HAXCMSSiteEditorUI extends(r(p(c))){static get styles(){return[...super.styles,t`
        :host *:not(:defined) {
          display: none;
        }
        :host {
          display: block;
          position: relative;
          height: 48px;
          left: 0;
          top: 0;
          right: 0;
          background-color: var(--haxcms-system-bg, #37474f);
          z-index: 10000;
          visibility: visible;
        }
        :host([edit-mode]) {
          z-index: 9999;
        }
        :host([dashboard-opened]) {
          left: 50vw;
        }
        /**
         * Dashboard open trumps all contextual settings
         */
        :host([dashboard-opened]) #editbutton,
        :host([dashboard-opened]) #editdetails,
        :host([dashboard-opened]) #deletebutton,
        :host([dashboard-opened]) #addbutton,
        :host([dashboard-opened]) #outlinebutton,
        :host([dashboard-opened]) #insightsbutton,
        :host([dashboard-opened]) #addmenubutton,
        :host([dashboard-opened]) #addbuttonchild,
        :host([dashboard-opened]) #duplicatebutton {
          display: none !important;
        }
        :host *[hidden] {
          display: none;
        }
        simple-tooltip:not(:defined) {
          display: none !important;
        }
        :host([painting]) {
          opacity: 0;
          visibility: hidden;
        }
        #editbutton {
          visibility: hidden;
          opacity: 0;
        }
        :host([page-allowed]) #editbutton,
        :host([page-allowed]) #editdetails,
        :host([page-allowed]) #deletebutton {
          visibility: visible;
          opacity: 1;
        }
        #editbutton[icon="icons:save"]:focus,
        #editbutton[icon="icons:save"]:active,
        #editbutton[icon="icons:save"]:hover {
          background-color: var(--simple-colors-default-theme-green-2);
        }
        #editbutton[icon="icons:save"] {
          background-color: var(--simple-colors-default-theme-green-1);
          color: var(--simple-colors-default-theme-green-8);
        }
        #cancelbutton {
          color: var(--hax-ui-color-danger-secondary);
          background-color: var(--simple-colors-default-theme-red-1);
        }
        #cancelbutton:hover,
        #cancelbutton:active,
        #cancelbutton:focus {
          background-color: var(--simple-colors-default-theme-red-2);
        }
        simple-toolbar-menu:hover,
        simple-toolbar-menu:active,
        simple-toolbar-menu:focus,
        simple-toolbar-button:hover,
        simple-toolbar-button:active,
        simple-toolbar-button:focus {
          background-color: var(--hax-ui-background-color-accent);
          color: var(--hax-ui-color);
        }

        :host(:hover),
        :host(:active),
        :host(:focus) {
          opacity: 1;
        }
        simple-tooltip {
          --simple-tooltip-background: #000000;
          --simple-tooltip-opacity: 1;
          --simple-tooltip-text-color: #ffffff;
          --simple-tooltip-delay-in: 0;
          --simple-tooltip-duration-in: 200ms;
          --simple-tooltip-duration-out: 0;
          --simple-tooltip-border-radius: 0;
          --simple-tooltip-font-size: 14px;
          font-family: "Press Start 2P", sans-serif;
        }
        app-hax-top-bar {
          z-index: 1000;
          right: 0;
          left: 0;
          position: fixed;
        }
        :host([dark-mode]) app-hax-top-bar {
          --bg-color: #222;
          --accent-color: #fff;
        }
        app-hax-top-bar::part(top-bar) {
          grid-template-columns: 20% 60% 20%;
          overflow: visible;
        }
        .haxLogo {
          color: var(--simple-colors-default-theme-accent-12, black);
        }
        :host([dark-mode]) .haxLogo {
          color: var(--simple-colors-default-theme-accent-1, white);
        }
        :host([dark-mode]) .haxLogo:hover,
        :host([dark-mode]) .haxLogo:focus,
        :host([dark-mode]) .haxLogo:active,
        .haxLogo:hover,
        .haxLogo:focus,
        .haxLogo:active {
          color: var(--haxcms-color);
        }
        .haxLogo simple-icon-lite {
          --simple-icon-height: 40px;
          --simple-icon-width: 40px;
          margin: 4px;
        }
        .soundToggle {
          position: relative;
          display: inline-flex;
          vertical-align: top;
        }

        .soundToggle img {
          width: 24px;
          height: 24px;
        }

        app-hax-search-bar {
          vertical-align: middle;
          display: inline-flex;
        }
        simple-toolbar {
          align-items: stretch;
          justify-content: center;
          height: var(--top-bar-height);
          --simple-toolbar-button-disabled-border-color: transparent;
          --simple-toolbar-button-disabled-opacity: 0.3;
          --simple-toolbar-button-padding: 3px 6px;
        }
        simple-toolbar[dark-mode] {
          --simple-toolbar-button-color: #e0e0e0;
          --simple-toolbar-button-hover-color: #fff;
          --simple-toolbar-button-bg: #222;
          --simple-toolbar-button-hover-bg: #000;
        }
        simple-toolbar::part(buttons) {
          flex: 0 1 auto;
        }
        .ops-panel {
          justify-content: space-around;
          display: flex;
          padding: 4px 0px;
        }

        .topbar-character {
          cursor: pointer;
          display: inline-block;
          border: none;
          border-radius: 0px;
          padding: 0 8px;
          margin: 0 0 0 16px;
          background-color: transparent;
          height: 48px;
          max-width: 160px;
          transition: all 0.5 ease-in-out;
        }
        .characterbtn-name {
          font-family: "Press Start 2P", sans-serif;
          margin-left: 8px;
          font-size: 12px;
          vertical-align: bottom;
          line-height: 48px;
          overflow: hidden;
          text-overflow: ellipsis;
          height: 48px;
          word-break: break-all;
        }
        :host([dark-mode]) .topbar-character,
        :host([dark-mode]) .topbar-character {
          color: #e0e0e0;
          background-color: #222;
        }
        .topbar-character rpg-character {
          margin: -4px -14px 0px -10px;
          height: 52px;
          width: 64px;
          display: inline-block;
          transform: scale(0.7);
          transition: all 0.5 ease-in-out;
        }
        .topbar-character:hover rpg-character,
        .topbar-character:focus rpg-character {
          transform: scale(0.9);
        }

        .logout::part(menu-button) {
          background-image: url("${o(u)}");
          background-repeat: no-repeat;
          background-position: center center;
          text-align: center;
          background-size: cover;
          border-top: 0px;
          border-bottom: 0px;
          padding: 10px;
          font-family: "Press Start 2P", sans-serif;
        }
        app-hax-user-menu app-hax-user-menu-button::part(menu-button) {
          font-family: "Press Start 2P", sans-serif;
          font-size: 12px;
        }

        @media screen and (max-width: 800px) {
          :host([dashboard-opened]) {
            left: 90vw;
          }
          :host([edit-mode]) {
            bottom: unset;
          }
          .topbar-character {
            padding: 0;
            margin: 0;
          }
          .characterbtn-name {
            padding: 0;
            margin: 0;
            width: 30px;
            display: inline-flex;
            overflow: hidden;
            text-overflow: ellipsis;
            letter-spacing: -2px;
            margin-left: -6px;
          }
          simple-toolbar {
            --simple-toolbar-button-padding: 3px 3px;
          }
          .characterbtn-name,
          haxcms-button-add,
          simple-toolbar-menu,
          simple-toolbar-button {
            font-size: 10px;
          }
          simple-toolbar-menu {
            --icon-offset-right: 2px;
            --icon-offset-left: 2px;
          }
          simple-toolbar-menu::part(dropdown-icon) {
            right: 0;
            top: 10px;
          }
          :host([edit-mode]) #deletebutton,
          :host([edit-mode]) #addmenubutton,
          :host([edit-mode]) #editdetails {
            display: none;
          }
        }
        @media (max-width: 600px) {
          simple-toolbar {
            --simple-toolbar-button-padding: 0px;
          }
          app-hax-top-bar::part(top-bar) {
            grid-template-columns: 10% 80% 10%;
          }
          .haxLogo simple-icon-lite {
            margin: 0px;
          }
          .characterbtn-name {
            display: none;
          }
        }
      `]}static get tag(){return"haxcms-site-editor-ui"}_internalLinkChanged(e){if(e.detail.value&&i.findItem(e.detail.value)){const t=d(i.findItem(e.detail.value));s.haxTray.shadowRoot.querySelector("[name='settings.configure.href']").value=t.slug}}constructor(){if(super(),this.rpgHat="none",this.darkMode=!1,this.__settingsText="",this.__editText="",this.userMenuOpen=!1,this.soundIcon="",this.__disposer=this.__disposer||[],this.t=this.t||{},h.allowedCallback=()=>!0,h.noResultsSlot=()=>e`Expecting to see results?
        <a
          @click="${e=>{s._haxStoreContribute("merlin","POP,enhancement",h.commandContext+" "+h.like)}}"
          >Make a suggestion</a
        >
        for what you thought you would see here!`,h.appendContext("CMS"),window.addEventListener("hax-store-ready",this.haxStoreReady.bind(this)),s.ready){let e=document.createElement("site-remote-content");s.haxAutoloader.appendChild(e);let t=document.createElement("citation-element");s.haxAutoloader.appendChild(t);let o=document.createElement("page-flag");s.haxAutoloader.appendChild(o),s.primativeHooks.a||(s.primativeHooks.a={}),s.primativeHooks.a.setupActiveElementForm=e=>{const t=i.getManifestItems(!0);var o=[{text:`-- ${this.t.selectPage} --`,value:null}];t.forEach((e=>{if(e.id!=this.itemId){let i=e,a="- ";for(;i&&null!=i.parent;)i=t.find((e=>e.id==i.parent)),i&&(a="--"+a);o.push({text:a+e.title,value:e.id})}})),e.settings.configure.splice(1,0,{property:"data-uuid",title:"Internal content",description:"Link to content internal to this site",inputMethod:"select",itemsList:o}),setTimeout((()=>{s.haxTray.shadowRoot.querySelector("[name='settings.configure.data-uuid']").addEventListener("value-changed",this._internalLinkChanged.bind(this))}),100)}}this.t={...this.t,selectPage:"Select page",backToSiteList:"Back to site list",cancelEditing:"Cancel editing",editDetails:"Page details",addPage:"Add page",addChildPage:"Add child page",duplicatePage:"Duplicate page",importDocxFile:"Import docx file",deletePage:"Delete page",shareSite:"Share site",closeSiteSettings:"Close site settings",editSiteSettings:"Site settings",savePageContent:"Save page",editPageContent:"Edit page",newJourney:"New Journey",accountInfo:"Account Info",outlineDesigner:"Outline designer",more:"More",insights:"Insights",logOut:"Log out",menu:"Menu",showMore:"More"},this.backText="Site list",this.painting=!0,this.pageAllowed=!1,this.editMode=!1,this.__editIcon="hax:page-edit",this.icon="hax:site-settings",this.manifestEditMode=!1,this.backLink="../../",window.appSettings&&window.appSettings.backLink&&(this.backLink=window.appSettings.backLink),n((()=>{const e=d(i.badDevice);if(!1===e){const e=document.createElement("link");e.setAttribute("href","https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap"),e.setAttribute("rel","stylesheet"),e.setAttribute("fetchpriority","low"),document.head.appendChild(e)}else!0===e&&document.body.classList.add("bad-device")})),n((()=>{this.darkMode=d(i.darkMode),this.dark=this.darkMode,d(i.darkMode)?s.globalPreferences.haxUiTheme="haxdark":s.globalPreferences.haxUiTheme="hax"})),n((()=>{this.soundIcon=d(i.soundStatus)?new URL("../../../app-hax/lib/assets/images/FullVolume.svg",import.meta.url).href:new URL("../../../app-hax/lib/assets/images/Silence.svg",import.meta.url).href})),setTimeout((()=>{import("./haxcms-outline-editor-dialog.js"),import("./haxcms-share-dialog.js"),import("./haxcms-site-dashboard.js")}),0)}haxStoreReady(e){if(e.detail){let e=document.createElement("site-remote-content");s.haxAutoloader.appendChild(e)}}soundToggle(){const e=!d(i.soundStatus);i.soundStatus=e,l("app-hax-soundStatus",e),e?(i.toast("Can you hear me now? Good.",2e3,{hat:"random"}),i.playSound("click")):i.toast("Sound off.. hey.. HELLO!?!",2e3,{fire:!0})}toggleMenu(){this.userMenuOpen=!this.userMenuOpen,i.playSound("click")}render(){return e`
      <app-hax-top-bar part="top-bar">
        <span slot="left" class="home-btn">
          <a
            href="${this.backLink}"
            class="haxLogo"
            id="backtosites"
            part="hax-logo"
          >
            <simple-icon-lite src="${m}"></simple-icon-lite>
          </a>
          <simple-tooltip for="backtosites" position="right"
            >${this.backText}</simple-tooltip
          >
          <slot name="haxcms-site-editor-ui-prefix-avatar"></slot>
        </span>
        <simple-toolbar
          slot="center"
          ?dark="${!this.darkMode}"
          icon-position="top"
          show-text-label
          label="${this.t.showMore}"
        >
          <slot name="haxcms-site-editor-ui-prefix-buttons"></slot>
          <simple-toolbar-button
            hidden
            id="editbutton"
            icon="${this.__editIcon}"
            icon-position="top"
            @click="${this._editButtonTap}"
            label="${this.__editText}"
            show-text-label
            voice-command="edit (this) page"
          ></simple-toolbar-button>
          <simple-toolbar-menu
            id="addmenubutton"
            ?disabled="${this.editMode}"
            icon="hax:add-page"
            icon-position="top"
            label="${this.t.addPage}"
            tabindex="${this.editMode?"-1":"0"}"
            @dblclick="${this._addPageClick}"
            show-text-label
          >
            <simple-toolbar-menu-item>
              <haxcms-button-add
                hidden
                ?disabled="${this.editMode}"
                show-text-label
                id="addbutton"
                show-text-label
                data-super-daemon-label="${this.t.addPage}"
                data-super-daemon-icon="hax:add-page"
                data-super-daemon-path="CMS/action/create/page"
              >
              </haxcms-button-add>
            </simple-toolbar-menu-item>
            <simple-toolbar-menu-item>
              <haxcms-button-add
                hidden
                ?disabled="${this.editMode}"
                id="addbuttonchild"
                type="child"
                show-text-label
                data-super-daemon-path="CMS/action/create/child"
                data-super-daemon-label="${this.t.addChildPage}"
                data-super-daemon-icon="hax:add-child-page"
              ></haxcms-button-add>
            </simple-toolbar-menu-item>
            <simple-toolbar-menu-item>
              <haxcms-button-add
                hidden
                ?disabled="${this.editMode}"
                type="duplicate"
                id="duplicatebutton"
                show-text-label
                data-super-daemon-path="CMS/action/create/duplicate"
                data-super-daemon-label="${this.t.duplicatePage}"
                data-super-daemon-icon="hax:duplicate"
              ></haxcms-button-add>
            </simple-toolbar-menu-item>
            <simple-toolbar-menu-item>
              <haxcms-button-add
                hidden
                ?disabled="${this.editMode}"
                type="docximport"
                id="docximport"
                show-text-label
                data-super-daemon-path="CMS/action/import/docx"
                data-super-daemon-label="${this.t.importDocxFile}"
                data-super-daemon-icon="hax:file-docx"
              ></haxcms-button-add>
            </simple-toolbar-menu-item>
          </simple-toolbar-menu>
          <simple-toolbar-button
            ?disabled="${this.editMode}"
            tabindex="${this.editMode?"-1":"0"}"
            id="deletebutton"
            hidden
            icon-position="top"
            icon="icons:delete"
            @click="${this._deleteButtonTap}"
            label="${this.t.deletePage}"
            show-text-label
            voice-command="delete page"
          ></simple-toolbar-button>
          <simple-toolbar-button
            ?disabled="${this.editMode}"
            tabindex="${this.editMode?"-1":"0"}"
            id="outlinebutton"
            @click="${this._outlineButtonTap}"
            icon-position="top"
            icon="hax:site-map"
            part="outlinebtn"
            show-text-label
            label="${this.t.outlineDesigner}"
          ></simple-toolbar-button>
          <simple-toolbar-button
            ?disabled="${this.editMode}"
            tabindex="${this.editMode?"-1":"0"}"
            id="insightsbutton"
            icon="hax:clipboard-pulse"
            part="insightsbtn"
            icon-position="top"
            @click="${this._insightsButtonTap}"
            label="${this.t.insights}"
            show-text-label
            voice-command="insights"
          ></simple-toolbar-button>
          <simple-toolbar-menu
            show-text-label
            ?disabled="${this.editMode}"
            icon="more-vert"
            part="morebtn"
            icon-position="top"
            label="${this.t.more}"
            tabindex="${this.editMode?"-1":"0"}"
          >
            <simple-toolbar-menu-item>
              <simple-toolbar-button
                id="editdetails"
                hidden
                ?disabled="${this.editMode}"
                icon="hax:page-details"
                icon-position="left"
                @click="${this._editDetailsButtonTap}"
                label="${this.t.editDetails}"
                show-text-label
                voice-command="edit (page) details"
                part="detailsbtn"
                tabindex="${this.editMode?"-1":"0"}"
              ></simple-toolbar-button>
            </simple-toolbar-menu-item>
            <simple-toolbar-menu-item>
              <simple-toolbar-button
                @click="${this._manifestButtonTap}"
                icon-position="left"
                icon="${this.icon}"
                part="manifestbtn"
                id="manifestbtn"
                show-text-label
                tabindex="${this.editMode?"0":"-1"}"
                label="${this.__settingsText}"
              ></simple-toolbar-button>
            </simple-toolbar-menu-item>
          </simple-toolbar-menu>
          <simple-toolbar-button
            id="cancelbutton"
            icon="icons:cancel"
            icon-position="top"
            @click="${this._cancelButtonTap}"
            .hidden="${!this.editMode}"
            show-text-label
            tabindex="${this.editMode?"0":"-1"}"
            label="${this.t.cancelEditing}"
            voice-command="cancel (editing)"
          ></simple-toolbar-button>
          <slot name="haxcms-site-editor-ui-suffix-buttons"></slot>
        </simple-toolbar>

        <app-hax-user-menu slot="right" id="user-menu" part="app-hax-user-menu">
          <button
            class="topbar-character"
            slot="menuButton"
            @click="${this.toggleMenu}"
          >
            <rpg-character
              seed="${this.userName}"
              width="68"
              height="68"
              part="rpgcharacter"
              aria-label="${this.t.menu}"
              hat="${this.rpgHat}"
            ></rpg-character>
            <span class="characterbtn-name">${this.userName}</span>
            <slot name="haxcms-site-editor-ui-topbar-character-button"></slot>
          </button>
          <div slot="pre-menu" class="ops-panel">
            <slot name="haxcms-site-editor-ui-pre-menu"></slot>
            <wired-button
              elevation="1"
              class="soundToggle"
              @click="${this.soundToggle}"
            >
              <simple-icon-lite
                src="${this.soundIcon}"
                loading="lazy"
                decoding="async"
              ></simple-icon-lite>
            </wired-button>
            <haxcms-darkmode-toggle></haxcms-darkmode-toggle>
          </div>
          <!-- <app-hax-user-menu-button
          slot="main-menu"
          icon="face"
          label="${this.t.accountInfo}"
        ></app-hax-user-menu-button> -->
          <slot slot="main-menu" name="haxcms-site-editor-ui-main-menu"></slot>

          <app-hax-user-menu-button
            id="sharebutton"
            @click="${this._shareButtonTap}"
            slot="main-menu"
            icon="social:share"
            part="sharebtn"
            label="${this.t.shareSite}"
          ></app-hax-user-menu-button>

          <app-hax-user-menu-button
            slot="main-menu"
            icon="add"
            label="${this.t.newJourney}"
            part="newjourneybtn"
            @click="${this._addButtonTap}"
          ></app-hax-user-menu-button>
          <slot slot="post-menu" name="haxcms-site-editor-ui-post-menu"></slot>
          <app-hax-user-menu-button
            slot="post-menu"
            part="logoutbtn"
            class="logout"
            label="${this.t.logOut}"
            @click=${this._logout}
          ></app-hax-user-menu-button>
        </app-hax-user-menu>
      </app-hax-top-bar>
    `}_logout(){window.dispatchEvent(new CustomEvent("jwt-login-logout",{composed:!0,bubbles:!0,cancelable:!1,detail:!0})),this.__logoutUserAction=!0}_jwtLoggedIn(e){!1===e.detail&&this.__logoutUserAction&&(this.__logoutUserAction=!1,setTimeout((()=>{window.location.reload()}),100))}_addPageClick(e){!this.editMode&&this.shadowRoot.querySelector("simple-toolbar-menu-item haxcms-button-add:not([hidden])")&&this.shadowRoot.querySelector("simple-toolbar-menu-item haxcms-button-add:not([hidden])").HAXCMSButtonClick()}updateAvailableButtons(){this.shadowRoot&&setTimeout((()=>{window.appSettings&&window.appSettings.backText&&(this.backText=window.appSettings.backText);[{varPath:"getNodeFieldsPath",selector:"#editdetails"},{varPath:"deleteNodePath",selector:"#deletebutton"},{varPath:"saveNodePath",selector:"#editbutton"},{varPath:"createNodePath",selector:"#addbutton"},{varPath:"createNodePath",selector:"#addbuttonchild"},{varPath:"createNodePath",selector:"#duplicatebutton"},{varPath:"createNodePath",selector:"#docximport"}].forEach((e=>{window.appSettings&&window.appSettings[e.varPath]&&null!=window.appSettings[e.varPath]&&""!=window.appSettings[e.varPath]&&"null"!=window.appSettings[e.varPath]&&(e.dep?null!=window.appSettings[e.dep]&&""!=window.appSettings[e.dep]&&"null"!=window.appSettings[e.dep]&&this.shadowRoot.querySelector(e.selector).removeAttribute("hidden"):this.shadowRoot.querySelector(e.selector).removeAttribute("hidden"))}))}),100)}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.shadowRoot.querySelectorAll("[data-super-daemon-path]").forEach((e=>{h.defineOption({title:e.getAttribute("data-super-daemon-label"),icon:e.getAttribute("data-super-daemon-icon"),tags:["page","operation","command","add","create"],value:{target:e},context:"CMS",eventName:"super-daemon-element-click",path:e.getAttribute("data-super-daemon-path")})})),h.defineOption({title:this.t.savePageContent,icon:"icons:save",tags:["CMS","save","page","operation","command"],value:{target:this,method:"_editButtonTap"},context:"HAX",eventName:"super-daemon-element-method",path:"CMS/action/save"}),h.defineOption({title:this.t.insights,icon:"hax:clipboard-pulse",tags:["CMS","insights","data","operation"],value:{target:this,method:"_insightsButtonTap"},context:"CMS",eventName:"super-daemon-element-method",path:"CMS/site/insights"}),h.defineOption({title:this.t.editPageContent,icon:"hax:page-edit",tags:["CMS","edit","page","operation","command"],value:{target:this,method:"_editButtonTap"},context:"CMS",eventName:"super-daemon-element-method",path:"CMS/action/edit"}),h.defineOption({title:this.t.editSiteSettings,icon:"hax:site-settings",tags:["CMS","site","settings","operation","command"],value:{target:this,method:"_manifestButtonTap",args:[{target:this.shadowRoot.querySelector("#manifestbtn")}]},context:"CMS",eventName:"super-daemon-element-method",path:"CMS/action/site/settings"}),h.defineOption({title:this.t.shareSite,icon:"social:share",tags:["CMS","share"],value:{target:this,method:"_shareButtonTap"},context:["logged-in","CMS","HAX"],eventName:"super-daemon-element-method",path:"CMS/action/share"}),h.defineOption({title:this.t.newJourney,icon:"add",tags:["CMS","create","new site"],value:{target:this,method:"_addButtonTap"},context:"CMS",eventName:"super-daemon-element-method",path:"CMS/action/create-site"}),h.defineOption({title:this.t.logOut,icon:"add",tags:["CMS","user","logout"],value:{target:this,method:"_logout"},context:["logged-in","CMS"],eventName:"super-daemon-element-method",path:"CMS/user/logout"}),h.defineOption({title:"Dark mode toggle",icon:"device:brightness-medium",tags:["CMS","dark mode"],value:{target:this.shadowRoot.querySelector("haxcms-darkmode-toggle"),method:"toggle"},context:["logged-in","CMS","HAX"],eventName:"super-daemon-element-method",path:"CMS/action/darkMode"}),h.defineOption({title:"Sound toggle",icon:"av:volume-up",tags:["CMS","sound"],value:{target:this.shadowRoot.querySelector(".soundToggle")},context:["logged-in","CMS","HAX"],eventName:"super-daemon-element-click",path:"CMS/action/sound"}),h.defineOption({title:this.t.outlineDesigner,icon:"hax:site-map",tags:["CMS","outline","designer","site outline","operation","command"],value:{target:this.shadowRoot.querySelector("#outlinebutton")},context:["CMS"],eventName:"super-daemon-element-click",path:"CMS/action/outline"}),h.defineOption({title:"DEV: Change theme",icon:"image:style",tags:["Developer","theme"],eventName:"super-daemon-run-program",path:">settings/theme",context:[">"],value:{name:"DEV: Change theme",context:">",program:async(e,t)=>{let o=[];return["clean-one","clean-two","learn-two-theme","bootstrap-theme","outline-player","haxor-slevin"].forEach((async t=>{(""==e||t.includes(e))&&o.push({title:t.replace("-theme","").replace("-"," "),icon:"image:style",tags:["theme"],value:{target:window.HAXCMS,method:"setTheme",args:[t]},eventName:"super-daemon-element-method",context:[">",">settings/theme/"+t],path:">settings/theme/"+t})})),o}}}),this.updateAvailableButtons(),this.dispatchEvent(new CustomEvent("haxcms-load-user-data",{bubbles:!0,composed:!0,cancelable:!1,detail:!0})),this.shadowRoot.querySelectorAll("[voice-command]").forEach((e=>{"editbutton"==e.getAttribute("id")&&this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: save (this) page",context:e,callback:"click"}})),this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: "+e.getAttribute("voice-command"),context:e,callback:"click"}}))}))}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{"userMenuOpen"===t&&void 0!==e&&(this.userMenuOpen?this.rpgHat="edit":this.rpgHat="none"),"editMode"==t&&(this.editMode?this.rpgHat="construction":this.rpgHat="none",h.close(),this._editModeChanged(this[t],e),this.dispatchEvent(new CustomEvent("edit-mode-changed",{detail:this[t]}))),"manifestEditMode"==t&&(this._manifestEditModeChanged(this[t],e),this.dispatchEvent(new CustomEvent("manifest-edit-mode-changed",{detail:this[t]}))),"dashboardOpened"!=t&&"t"!=t||this._dashboardOpenedChanged(this.dashboardOpened),"t"===t&&(this.editMode?this.__editText=this.t.savePageContent:this.__editText=this.t.editPageContent)}))}static get properties(){return{...super.properties,userName:{type:String,attribute:"user-name"},rpgHat:{type:String},userPicture:{type:String,attribute:"user-picture"},userMenuOpen:{type:Boolean},soundIcon:{type:String},darkMode:{type:Boolean,reflect:!0,attribute:"dark-mode"},backLink:{type:String},backText:{type:String},__editIcon:{type:String},__editText:{type:String},__settingsText:{type:String},painting:{type:Boolean,reflect:!0},pageAllowed:{type:Boolean,attribute:"page-allowed",reflect:!0},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},manifestEditMode:{type:Boolean,attribute:"manifest-edit-mode",reflect:!0},activeTitle:{type:String,attribute:"active-title"},manifest:{type:Object},icon:{type:String},dashboardOpened:{type:Boolean,reflect:!0,attribute:"dashboard-opened"}}}connectedCallback(){super.connectedCallback(),window.addEventListener("jwt-logged-in",this._jwtLoggedIn.bind(this)),n((e=>{i.userData&&(this.userName=d(i.userData.userName),this.userPicture=d(i.userData.userPicture),this.updateAvailableButtons()),this.__disposer.push(e)})),n((e=>{this.editMode=d(i.editMode),this.__disposer.push(e)})),n((e=>{this.manifest=d(i.manifest),this.icon="hax:site-settings",this.__disposer.push(e)})),n((e=>{this.dashboardOpened=d(i.dashboardOpened),this.__disposer.push(e)})),n((e=>{const t=d(i.activeItem);this.updateAvailableButtons(),t&&t.id?(this.activeTitle=t.title,this.pageAllowed=!0):this.pageAllowed=!1,this.__disposer.push(e)}))}disconnectedCallback(){for(var e in this.__disposer)this.__disposer[e].dispose();window.removeEventListener("jwt-logged-in",this._jwtLoggedIn.bind(this)),window.removeEventListener("hax-store-ready",this.haxStoreReady.bind(this)),super.disconnectedCallback()}_dashboardOpenedChanged(e){e?(this.__settingsText=this.t.closeSiteSettings,this.icon="icons:cancel"):e||(this.__settingsText=this.t.editSiteSettings,this.icon="hax:site-settings")}_editButtonTap(e){i.playSound("click"),this.editMode=!this.editMode,this.editMode||this.dispatchEvent(new CustomEvent("haxcms-save-node",{bubbles:!0,composed:!0,cancelable:!1,detail:i.activeItem})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_editDetailsButtonTap(e){i.playSound("click");const t=new CustomEvent("haxcms-load-node-fields",{bubbles:!0,composed:!0,cancelable:!1,detail:e.target});window.dispatchEvent(t)}_insightsButtonTap(e){i.playSound("click");const t=document.createElement("haxcms-site-insights"),o=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:this.t.insights,styles:{"--simple-modal-titlebar-background":"orange","--simple-modal-titlebar-color":"black","--simple-modal-width":"94vw","--simple-modal-min-width":"300px","--simple-modal-z-index":"100000000","--simple-modal-height":"94vh","--simple-modal-min-height":"300px","--simple-modal-titlebar-height":"80px"},elements:{content:t},invokedBy:this.shadowRoot.querySelector("#insightsbutton"),clone:!1,modal:!1}});window.dispatchEvent(o)}_cancelButtonTap(e){this.editMode=!1,i.playSound("error"),this.dispatchEvent(new CustomEvent("hax-cancel",{bubbles:!0,composed:!0,cancelable:!1,detail:e.detail})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_createNewItem(e){const t=new CustomEvent("haxcms-create-node",{bubbles:!0,composed:!0,cancelable:!1,detail:{values:this.__newForm.value}});this.dispatchEvent(t)}_updateItem(e){var t,o=e.target;t=o.__form?o.__form.value:o.parentNode.__form.value,window.dispatchEvent(new CustomEvent("haxcms-save-node-details",{bubbles:!0,composed:!0,cancelable:!0,detail:t})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}_deleteButtonTap(e){i.playSound("click");let t=document.createElement("span");t.innerHTML=`"${i.activeItem.title}" will be removed from the outline but its content stays on the file system.`;let o=document.createElement("button");o.appendChild(document.createTextNode("Confirm")),o.classList.add("hax-modal-btn"),o.addEventListener("click",this._deleteActive.bind(this));let a=document.createElement("button");a.appendChild(document.createTextNode("cancel")),a.addEventListener("click",(()=>i.playSound("error"))),a.setAttribute("dialog-dismiss","dialog-dismiss"),a.classList.add("hax-modal-btn"),a.classList.add("cancel");let s=document.createElement("span");s.appendChild(o),s.appendChild(a);const n=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Are you sure you want to delete this page?",styles:{"--simple-modal-titlebar-background":"orange","--simple-modal-titlebar-color":"black","--simple-modal-width":"25vw","--simple-modal-min-width":"300px","--simple-modal-z-index":"100000000","--simple-modal-height":"15vh","--simple-modal-min-height":"300px","--simple-modal-titlebar-height":"80px"},elements:{content:t,buttons:s},invokedBy:this.shadowRoot.querySelector("#deletebutton"),clone:!1,modal:!0}});window.dispatchEvent(n)}_deleteActive(e){i.playSound("click");const t=new CustomEvent("haxcms-delete-node",{bubbles:!0,composed:!0,cancelable:!1,detail:{item:i.activeItem}});this.dispatchEvent(t)}_shareButtonTap(e){i.playSound("click");const t=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:this.t.shareSite,styles:{"--simple-modal-titlebar-background":"orange","--simple-modal-titlebar-color":"black","--simple-modal-width":"55vw","--simple-modal-min-width":"300px","--simple-modal-z-index":"100000000","--simple-modal-height":"50vh","--simple-modal-min-height":"300px","--simple-modal-titlebar-height":"80px"},elements:{content:document.createElement("haxcms-share-dialog")},invokedBy:this.shadowRoot.querySelector("#sharebutton"),clone:!1,modal:!1}});window.dispatchEvent(t)}_outlineButtonTap(e){i.playSound("click");const t=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:this.t.outlineDesigner,styles:{"--simple-modal-titlebar-background":"orange","--simple-modal-titlebar-color":"black","--simple-modal-z-index":"100000000","--simple-modal-titlebar-height":"80px","--simple-modal-width":"85vw","--simple-modal-max-width":"85vw","--simple-modal-height":"90vh","--simple-modal-max-height":"90vh"},elements:{content:document.createElement("haxcms-outline-editor-dialog")},invokedBy:this.shadowRoot.querySelector("#outlinebutton"),clone:!1,modal:!0}});window.dispatchEvent(t)}_addButtonTap(){i.playSound("click"),setTimeout((()=>{window.location=this.backLink+"createSite-step-1"}),100)}_manifestButtonTap(e){i.playSound("click"),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}})),window.dispatchEvent(new CustomEvent("haxcms-load-site-dashboard",{bubbles:!0,composed:!0,cancelable:!1,detail:e.target}))}_editModeChanged(e,t){e?(this.__editIcon="icons:save",this.__editText=this.t.savePageContent,h.appendContext("HAX"),h.removeContext("CMS")):(this.__editIcon="hax:page-edit",this.__editText=this.t.editPageContent,h.appendContext("CMS"),h.removeContext("HAX")),void 0!==t&&(i.editMode=e,s.haxTray.collapsed=!e)}_outlineEditModeChanged(e,t){this.dispatchEvent(new CustomEvent("haxcms-outline-edit-mode-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:e}))}_manifestEditModeChanged(e,t){this.dispatchEvent(new CustomEvent("haxcms-manifest-edit-mode-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:e}))}}customElements.define(HAXCMSSiteEditorUI.tag,HAXCMSSiteEditorUI);export{HAXCMSSiteEditorUI};