/**
 * Copyright 2021 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import"./lib/loading-styles.js";import"../wc-autoload/wc-autoload.js";class ReplaceTag extends(function(e){return class extends e{constructor(){super()}disconnectedCallback(){this.intersectionObserver&&this.intersectionObserver.disconnect(),super.disconnectedCallback&&super.disconnectedCallback()}connectedCallback(){super.connectedCallback&&super.connectedCallback(),this.evaluateReplaceMethod()}performanceBasedReplacement(){this.setAttribute("laser-loader","laser-loader"),this.loadingStatement="Loading...",this.render(),this.runReplacement()}evaluateReplaceMethod(){window.WCRegistryLoaderCSS();let e=!1;"view"!=this.getAttribute("with-method")&&(navigator&&(navigator.deviceMemory&&navigator.deviceMemory<1&&(e=!0),navigator.hardwareConcurrency&&navigator.hardwareConcurrency<2&&(e=!0),navigator.getBattery&&navigator.getBattery().then((function(t){!t.charging&&t.level<.25&&(e=!0)})),navigator.connection&&navigator.connection.effectiveType&&["slow-2g","2g","3g"].includes(navigator.connection.effectiveType)&&(e=!0),navigator.connection&&navigator.connection.saveData&&(e=!0)),e&&(this.loadingStatement="Click / Tap to load",this.addEventListener("click",this.performanceBasedReplacement))),e||(this.setAttribute("laser-loader","laser-loader"),this.loadingStatement="Loading...",this.intersectionObserver=new IntersectionObserver(this.handleIntersectionCallback.bind(this),{root:document.rootElement,rootMargin:"0px",threshold:[0,.25,.5,.75,1],delay:250}),this.intersectionObserver.observe(this)),this.render()}handleIntersectionCallback(e){for(let t of e){Number(t.intersectionRatio).toFixed(2)>=.25&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,this.runReplacement())}}runReplacement(){this.getAttribute("with")?setTimeout(()=>{window.WCAutoload.requestAvailability().registry.loadDefinition(this.getAttribute("with")),customElements.whenDefined(this.getAttribute("with")).then(e=>{let t={};for(var n=0,i=this.attributes,r=i.length;n<r;n++)t[i[n].nodeName]=i[n].nodeValue;let a=document.createElement(t.with);for(var n in a.setAttribute("popup-loader","popup-loader"),t)null!=t[n]&&a.setAttribute(n,t[n]);a.removeAttribute("laser-loader"),a.innerHTML=this.innerHTML,this.replaceWith(a),setTimeout(()=>{a.removeAttribute("popup-loader"),a.removeAttribute("laser-loader"),a.style.setProperty("--laserEdgeAni-width",null),a.style.setProperty("--laserEdgeAni-innerWidth",null),a.style.setProperty("--laserEdgeAni-height",null),a.style.setProperty("--laserEdgeAni-innerHeight",null),document.querySelectorAll('replace-tag[with="'+t.with+'"]').forEach(e=>{e.runReplacement()})},250)})},250):console.warn("replace-tag requires use of with attribute for what to upgrade to")}}}(HTMLElement)){constructor(){super(),this.template=document.createElement("template"),this.attachShadow({mode:"open"})}static get tag(){return"replace-tag"}get html(){return`\n    <style>\n    :host {\n      display: block;\n      background-color: #DDDDDD;\n      color: black;\n      font-size: 16px;\n      margin:16px;\n      padding: 16px;\n      opacity: .8;\n      transition: .3s linear all;\n    }\n    :host(:not([with-method="view"]):hover) {\n      opacity: 1 !important;\n      outline: 1px solid black;\n      cursor: pointer;\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    </style>\n<div>${this.loadingStatement}</div>`}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}}customElements.define(ReplaceTag.tag,ReplaceTag);export{ReplaceTag};