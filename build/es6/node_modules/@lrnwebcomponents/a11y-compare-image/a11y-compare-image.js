import{LitElement as t,html as e,css as i}from"../../lit-element/lit-element.js";import"../simple-range-input/simple-range-input.js";class a11yCompareImage extends t{static get styles(){return[i`
        :host {
          display: inline-flex;
          margin: 15px 0;
        }
        :host([hidden]) {
          display: none !important;
        }
        figure {
          margin: 0;
        }
        #container,
        #container > div {
          margin: 0;
          padding: 0;
        }
        #container,
        #input {
          position: relative;
        }
        /* Added background-size: cover to adjust the bottom layer to match top in first example */
        #container {
          background-size: cover;
          background-repeat: no-repeat;
        }

        #layer {
          top: 0;
          left: 0;
          position: absolute;
          height: 100%;
          opacity: var(--a11y-compare-image-opacity, 1);
          width: var(--a11y-compare-image-width, 50%);
          background-size: cover;
          background-position-x: 0%;
          background-repeat: no-repeat;
        }
        #placeholder {
          opacity: 0;
        }

        #bottom {
          width: 100%;
        }
        #slider {
          top: 0;
          left: 0;
          padding-top: 10px;
          position: absolute;
          width: calc(100% + 32px);
          margin: -15px 0 0 -16px;
        }
        .marker {
          top: 6px;
          position: absolute;
          width: 1px;
          outline: 2px solid #bbb;
          background-color: #bbb;
          padding-top: 10px;
        }
        ::slotted([slot="bottom"]) {
          max-width: 100%;
        }
      `]}constructor(){super(),this.opacity=!1,this.position=0,this.__markers=[]}render(){return e`
      <figure>
        <figcaption>
          <slot name="heading"></slot>
          <div id="description"><slot name="description"></slot></div>
        </figcaption>
        <div id="container" style="background-image: url(${this.__lower})">
          <div>
            <div id="placeholder">
              <slot id="bottom" name="bottom"></slot>
            </div>
            <slot name="top" hidden></slot>
            <div
              id="layer"
              style="background-image: url(${this.__upper})"
            ></div>
            <slot></slot>
          </div>
        </div>
        <div id="input">
          ${this.__markers.map(t=>e` <div class="marker" style="left: ${t}%;"></div> `)}
          <simple-range-input
            accent-color="blue"
            id="slider"
            @immediate-value-changed="${this._valueChanged}"
            .value="${this.position}"
          ></simple-range-input>
        </div>
      </figure>
    `}_valueChanged(t){this.position=t.detail.value}static get tag(){return"a11y-compare-image"}static get properties(){return{...super.properties,activeLayer:{type:Number,attribute:"active-layer",reflect:!0},opacity:{type:Boolean},position:{type:Number,attribute:"position",reflect:!0},__lower:{type:String},__upper:{type:String},__markers:{type:Array}}}updated(t){super.updated(t),t.forEach((t,e)=>{"position"===e&&this._slide()})}_slide(){let t=this.shadowRoot.querySelector("#container"),e=this.querySelectorAll("[slot=top],[slot=bottom]"),i=e.length-1,o=100/i,a=Math.floor(this.position/o)||0;this.activeLayer=a+1;let r=o*a,s=this.position-r;100===this.position&&0===s||(this.position=100*s/o||0),this.__upper=e[a+1]?e[a+1].src:e[a].src,this.__lower=e[a].src,i-1!=this.__markers.length&&this._updateMarkers(i),!1===this.opacity?(t.style.setProperty("--a11y-compare-image-width",this.position+"%"),t.style.setProperty("--a11y-compare-image-opacity",1)):(t.style.setProperty("--a11y-compare-image-width","100%"),t.style.setProperty("--a11y-compare-image-opacity",this.position/100))}_updateMarkers(t){if(this.__markers=[],0!=t){let e=100/t;for(let t=e;t<=100;t+=e)this.__markers.push(t)}}}window.customElements.define(a11yCompareImage.tag,a11yCompareImage);export{a11yCompareImage};