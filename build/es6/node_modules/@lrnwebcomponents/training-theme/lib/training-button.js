import{LitElement as t,html as i,css as e}from"../../../lit/index.js";export class TrainingButton extends t{constructor(){super(),this.title="",this.id="",this.index=null}static get tag(){return"training-button"}static get properties(){return{title:{type:String},id:{type:String},index:{type:Number}}}static get styles(){return e`
      :host {
        display: block;
        /* margin: 16px;
        padding: 16px; */
      }
      .wrapper {
        /* font-size: larger; */
        text-decoration: none;
        display: flex;
        -webkit-box-align: center;
        align-items: center;
        /* font-size: 100px; */
        color: rgb(128, 134, 139);
        min-height: 52px;
        font-weight: bold;
        line-height: 20px;
        box-sizing: content-box;
        position: relative;
        font-family: Roboto, Noto, sans-serif;
        -webkit-font-smoothing: antialiased;
        transition: all 0.3s ease-in-out 0s;
        border: 1px solid rgb(218, 220, 224);
        border-radius: 5px;
        margin: 4px 17px;
        background-color: rgb(255, 255, 255);
      }
      #title {
        font-size: 14px;
        align-items: center;
        margin: auto -2px;
        font-weight: normal;
      }

      .dot div {
        font-size: 15px;
        align-items: center;
        margin-left: 10px;
        margin-top: auto;
        margin-bottom: auto;
        margin-right: 10px;
        color: white;
      }

      .dot {
        height: 25px;
        width: 25px;
        background-color: rgb(128 134 140);
        border-radius: 50%;
        margin: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .wrapper:active {
        background-color: #1a73e8;
      }
    `}updated(t){if(t.has("index")&&null!==this.index){const t=this.shadowRoot.querySelector(".dot"),i=this.shadowRoot.querySelector("#title");parseInt(this.id)-1===this.index?i.style.fontWeight="bold":i.style.fontWeight="normal",parseInt(this.id)-1<=this.index?(t.style.backgroundColor="#1a73e8",i.style.color="black"):(t.style.backgroundColor="rgb(128, 134, 140)",i.style.color="")}}render(){return i`
      <div class="wrapper">
        <span class="dot">
          <div>${this.index}</div>
        </span>
        <span id="title">${this.title}</span>
        <slot></slot>
      </div>
    `}}customElements.define(TrainingButton.tag,TrainingButton);