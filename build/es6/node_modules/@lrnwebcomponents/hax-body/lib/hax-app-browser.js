import{LitElement as t,html as e,css as i}from"../../../lit/index.js";import{HAXStore as a}from"./hax-store.js";import{autorun as s,toJS as r}from"../../../mobx/dist/mobx.esm.js";import"../../simple-toolbar/lib/simple-button-grid.js";import"../../a11y-collapse/a11y-collapse.js";import"./hax-app-search.js";import"./hax-tray-button.js";class HaxAppBrowser extends t{static get styles(){return[i`
        :host {
          position: relative;
        }
        simple-button-grid::part(buttons) {
          overflow: auto;
        }
        simple-button-grid.collapse-hide {
          max-height: 0 !important;
          transition: all 0.5s;
        }
        hax-tray-button {
          font-size: 11px;
          --hax-ui-font-size-sm: 11px;
        }
        .visibility-hidden {
          z-index: -1;
          visibility: hidden;
          opacity: 0;
          height: 0;
          transition: all 0.5s;
        }
        a11y-collapse {
          margin: 0;
          --a11y-collapse-margin: 0;
        }
        a11y-collapse::part(heading) {
          margin: 4px;
        }
      `]}constructor(){super(),this.searching=!1,this.categories=[],this.appList=[],this.activeApp=null,this.hasActive=!1,s((()=>{this.appList=r(a.appList)})),s((()=>{this.activeApp=r(a.activeApp)})),this.addEventListener("hax-tray-button-click",(t=>{"search-selected"===t.detail.eventName?(this.searching=!0,a.activeApp=r(this.appList[t.detail.index])):"cancel-search"===t.detail.eventName&&(this.searching=!1)}))}ucfirst(t){return t.charAt(0).toUpperCase()+t.slice(1)}render(){return e`${this.categories.map((t=>e`
          <a11y-collapse heading="${this.ucfirst(t)}" heading-button>
            <simple-button-grid
              class="${this.searching?"collapse-hide":""}"
              always-expanded
              columns="2"
            >
              ${this.appList.map((i=>e` ${i.details.tags.includes(t)?e` <hax-tray-button
                        class="${this.searching?"visibility-hidden":""}"
                        show-text-label
                        icon-position="top"
                        index="${i.index}"
                        label="${i.details.title}"
                        icon="${i.details.icon}"
                        color="${i.details.color}"
                        event-name="search-selected"
                        event-data="${i.index}"
                      >
                      </hax-tray-button>`:""}`))}
            </simple-button-grid>
          </a11y-collapse>
        `))}
      <hax-app-search
        id="haxappsearch"
        class="${this.searching?"":"visibility-hidden"}"
      ></hax-app-search>
      <slot></slot> `}static get tag(){return"hax-app-browser"}static get properties(){return{search:{type:String},searching:{type:Boolean,reflect:!0},activeApp:{type:Object},hasActive:{reflect:!0,type:Boolean,attribute:"has-active"},appList:{type:Array},categories:{type:Array}}}updated(t){t.forEach(((t,e)=>{"activeApp"==e&&this[e]&&this._activeAppChanged(this[e],t),"appList"==e&&this[e]&&this.shadowRoot&&(this.searching=!1,this.categories=[...this.updateCategories(this.appList)])}))}updateCategories(t){let e=[];return t.forEach((t=>{t.details.tags&&t.details.tags.forEach((t=>{e.includes(t)||e.push(t)}))})),e.sort(),e}_activeAppChanged(t,e){this.hasActive=void 0!==e&&null!=t}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.searching=!1}}customElements.define(HaxAppBrowser.tag,HaxAppBrowser);export{HaxAppBrowser};