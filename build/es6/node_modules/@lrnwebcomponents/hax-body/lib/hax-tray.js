import{html as e,css as t}from"../../../lit/index.js";import{winEventsElement as i,camelCaseToDash as a,wipeSlot as o,normalizeEventPath as s,localStorageSet as n}from"../../utils/utils.js";import{HaxSchematizer as l,HaxElementizer as r}from"../../hax-body-behaviors/lib/HAXFields.js";import{SimpleTourFinder as d}from"../../simple-popover/lib/SimpleTourFinder.js";import{HAXStore as h}from"./hax-store.js";import{autorun as c,toJS as p}from"../../../mobx/dist/mobx.esm.js";import{HaxComponentStyles as u,HaxTrayDetail as m}from"./hax-ui-styles.js";import"../../simple-fields/simple-fields.js";import"../../simple-fields/lib/simple-fields-tab.js";import"../../simple-icon/lib/simple-icons.js";import"../../hax-iconset/lib/simple-hax-iconset.js";import"./hax-tray-upload.js";import"./hax-app-search.js";import"./hax-gizmo-browser.js";import"./hax-gizmo-browser.js";import"./hax-view-source.js";import"./hax-stax-browser.js";import"./hax-map.js";import"./hax-tray-button.js";import"./hax-toolbar-menu.js";import{SuperDaemonInstance as g}from"../../super-daemon/super-daemon.js";import{I18NMixin as v}from"../../i18n-manager/lib/I18NMixin.js";import{Undo as b}from"../../undo-manager/undo-manager.js";import"../../iframe-loader/lib/loading-indicator.js";import"../../simple-toolbar/lib/simple-toolbar-menu-item.js";import{SimpleColors as x}from"../../simple-colors/simple-colors.js";class HaxTray extends(v(d(i(x)))){static get tag(){return"hax-tray"}constructor(){super(),this.tourController=new AbortController,this.dragController=new AbortController,this.tourName="hax",this.__winEvents={"can-redo-changed":"_redoChanged","can-undo-changed":"_undoChanged","hax-drop-focus-event":"_expandSettingsPanel"},this.resizeDrag=!1,this.hideToolbar=!1,this.dark=!1,this.__moveX=0,this.t={structure:"Outline",structureTip:"View Page Structure",edit:"Edit",properties:"Properties",save:"Save",move:"Move",close:"Close",move:"Move",menuAlignment:"Menu Alignment",menuLeft:"Move",menuRight:"Move",menuPosition:"Menu position",changeSideVisually:"Change which side of the screen the menu is affixed to visually.",expand:"Expand",collapse:"Collapse",menuSize:"Menu size",menuSizeDescription:"Expand or collapse the menu visually.",merlin:"Merlin",summonMerlin:"Summon Merlin",settings:"Settings",source:"Source",undo:"Undo",redo:"Redo",media:"Media",blocks:"Blocks",cancel:"Cancel",cancelWithoutSaving:"Cancel without saving",configure:"Configure",advanced:"Advanced",developer:"Developer",alignment:"Alignment",left:"Left",center:"Center",right:"Right",search:"Search",templates:"Templates",width:"Width"},this.registerLocalization({context:this,namespace:"hax",updateCallback:"_updateTrayDetail"}),this._initial=!0,this.activeValue={settings:{configure:{},advanced:{__position:"hax-align-left",__scale:100},developer:{}}},this.collapsed=!0,this.activeSchema=[{property:"settings",inputMethod:"collapse",properties:[]}],this.canUndo=!1,this.canRedo=!1,this.trayDetail="content-edit",this.activeTagName="",this.traySizeIcon="hax:arrow-expand-right",this.__setup=!1,this.addEventListener("hax-tray-button-click",this._processTrayEvent.bind(this)),c((()=>{this.activeGizmo=p(h.activeGizmo)})),c((()=>{this.activeNode=p(h.activeNode)})),c((()=>{this.elementAlign=p(h.elementAlign)})),c((()=>{this.tourOpened=p(h.tourOpened)})),c((()=>{this.loading=!p(h.appStoreLoaded)})),c((()=>{this.globalPreferences=p(h.globalPreferences),this.haxUiTheme=(this.globalPreferences||{}).haxUiTheme||"hax",this.dark="haxdark"===this.haxUiTheme,document.body.setAttribute("hax-ui-theme",this.haxUiTheme)})),c((()=>{this.editMode=p(h.editMode)}))}_expandSettingsPanel(e){this.hideToolbar||this.shadowRoot.querySelector("#content-edit").click()}_redoChanged(e){this.canRedo=e.detail.value}_undoChanged(e){this.canUndo=e.detail.value}static get styles(){return[...super.styles||[],...m,...u,t`
        :host {
          z-index: var(--hax-ui-focus-z-index - 1);
          top: 0;
          font-family: var(--hax-ui-font-family);
          font-size: var(--hax-ui-font-size);
          color: var(--hax-ui-color);

        }
        .wrapper {
          position: fixed;
          align-items: stretch;
          flex-direction: row-reverse;
          opacity: 0;
          visibility: visible;
          pointer-events: none;
          overflow: hidden;
          top: 0;
          bottom: 0;
          min-width: calc(var(--hax-tray-width) - 100px);
          max-width: 70vw;
          height: calc(100vh - 48px);
          max-height: calc(100vh - 48px);
          z-index: var(--hax-ui-focus-z-index);
          transition: height 0.6s ease-in-out,width 0.6s ease-in-out,opacity 0.6s ease-in-out,visibility 0.6s ease-in-out;
        }
        :host([collapsed]) #resize {
          display:none;
        }
        :host([resize-drag]) {
          cursor: col-resize;
          -webkit-user-select: none; /* Safari */
          -ms-user-select: none; /* IE 10 and IE 11 */
          user-select: none; /* Standard syntax */
          opacity: 1;
        }
        #resize {
          cursor: col-resize;
          background-color: transparent;
          height: 100%;
          padding: 0 12px 0 0;
          flex-shrink: 0;
          position: relative;
          z-index: var(--hax-ui-focus-z-index);
        }
        :host([element-align="right"]) #resize {
          padding: 0 0 0 12px;
        }
        #resize .resize-visual:hover {
          cursor: col-resize;
        }
        #resize .resize-visual {
          background-color: var(--hax-ui-color-accent);
          height: 100%;
          width: 4px;
        }
        :host(:hover) .wrapper {
          overflow: visible;
        }
        :host([element-align="left"]) .wrapper {
          left: -1000px;
          flex-direction: row;
        }
        :host([tray-detail="view-source"]) .detail {
          width: 50vw;
          height: 50vh;
          min-height: 300px;
          min-width: calc(var(--hax-tray-width) - 100px);
          resize: both;
          flex: unset;
        }
        :host([tray-detail="view-source"]) #resize {
          display: none;
        }
        :host([edit-mode]) .wrapper {
          opacity: 1;
          visibility: visible;
          pointer-events: all;
          display: flex;
        }
        :host([edit-mode][element-align="left"]) .wrapper {
          left: 0px;
        }
        :host([edit-mode][element-align="right"]) .wrapper {
          right: 0px;
        }
        :host([edit-mode][collapsed]) .wrapper {
          width: unset;
        }
        :host([edit-mode]) .wrapper.full-panel {
          width: unset;
          left: 0;
          right: 0;
        }

        #menubar {
          display: inline-flex;
          flex-direction: column;
          align-items: stretch;
          overflow: visible;
          flex: 0 0 auto;
          z-index: 6;
          background-color: var(--hax-ui-background-color);
        }
        :host([collapsed]) #menubar {
          width: unset;
        }
        #menubar > * {
          background-color: var(--hax-ui-background-color);
        }
        #menubar > *::part(button) {
          padding: var(--hax-ui-spacing-xs);
        }
        #menubar > *::part(label) {
          margin: 0px;
          font-size: 10px;
          display: inline-block;
          text-align: left;
          opacity: 1;
          visibility: visible;
          padding: 0px var(--hax-ui-spacing-sm);
          overflow: unset;
        }
        loading-indicator {
          --loading-indicator-background-color: var(
            --simple-colors-default-theme-accent-2,
            grey
          );
          --loading-indicator-color: var(
            --simple-colors-default-theme-accent-10,
            black
          );
        }
        #haxMenuAlign {
          --simple-toolbar-button-width: 18px;
          --simple-toolbar-button-height: 18px;
          margin: 4px 0px 0px;
          height: 24px;
          width: 24px;
        }
        .detail,
        #tray-detail {
          flex: 1 1 auto;
          display: flex;
          flex-direction: column;
          align-items: stretch;
        }
        .detail {
          resize: horizontal;
          visibility: visible;
          pointer-events: all;
          background-color: var(--hax-ui-background-color);
          max-height: calc(100vh - 48px);
          width: calc(
            var(--hax-tray-width) - var(--hax-tray-menubar-min-width)
          );
          max-width: 70vw;
          overflow-x: auto;
          opacity: 1;
        }
        :host([collapsed]) .detail {
          width: 0px;
          overflow: hidden;
          opacity: 0;
          visibility: hidden;
          pointer-events: none;
          max-height: 100vh;
          overflow-y: auto;
        }
        #tray-detail {
          width: auto;
          padding: 0 var(--hax-ui-spacing) var(--hax-ui-spacing);
          overflow-y: auto;
          transition: opacity .3s ease-in-out;
          opacity: .7;
        }
        .wrapper:focus #tray-detail,
        .wrapper:focus-within #tray-detail,
        .wrapper:hover #tray-detail,
        #tray-detail:hover,
        #tray-detail:focus,
        #tray-detail:focus-within {
          opacity: 1;
        }
        #haxcancelbutton::part(dropdown-icon) {
          display: none;
        }
        .tray-detail-titlebar {
          background-color: var(--hax-ui-color-accent);
          padding: var(--hax-ui-spacing-sm) var(--hax-ui-spacing);
          margin: 0 calc(0px - var(--hax-ui-spacing)) var(--hax-ui-spacing);
          display: flex;
          align-items: center;
          justify-content: space-between;
          height: var(--simple-modal-titlebar-height, unset);
          line-height: var(--simple-modal-titlebar-line-height, unset);
          position: sticky;
          z-index: 2;
          top: 0;
        }
        .tray-detail-titlebar h4 {
          flex: 1 1 auto;
          font-size: var(--hax-ui-font-size);
          font-family: var(--hax-ui-font-family);
        }
        .tray-detail-titlebar .tray-detail-titlebar-actions {
          float: right;
        }
        #settingsform {
          margin: -8px -8px 0;
          --simple-fields-field-margin: 12px;
          --a11y-collapse-heading-color: var(--simple-colors-default-theme-accent-12);
        }
        a11y-collapse {
          margin: 0px;
          --a11y-collapse-margin: 0;
          --a11y-collapse-vertical-padding: 12px;
          --a11y-collapse-horizontal-padding: 12px;
        }
        a11y-collapse span[slot="heading"] {
          --a11y-collapse-heading-color: var(--simple-colors-default-theme-accent-12) !important;        
        }
        simple-fields-field::part(label) {
          font-size: 11px;
        }
        simple-fields-field:hover::part(label) {
          font-weight: bold;
        }
        a11y-collapse span[slot="heading"] {
          line-height: 24px;
          height: 24px;
          display: block;
          margin: 8px 0;
        }
        a11y-collapse-group {
          margin: 0;
          padding: 0;
        }
        hax-tray-button,
        hax-gizmo-browser {
          visibility: visible;
          --a11y-collapse-heading-color: var(--simple-colors-default-theme-accent-12);
        }
        hax-tray-button:not(:defined),
        hax-gizmo-browser:not(:defined) {
          visibility: hidden;
        }
        hax-tray-upload {
          flex: 0 0 auto;
        }
        *[hidden] {
          display: none;
        }
        :host([element-align="right"]) #button {
          right: 0;
        }
        :host([element-align="left"]) #button {
          left: 0;
        }

        #button {
          position: fixed;
          top: 0;
          visibility: visible;
          margin: var(--hax-ui-spacing-xs);
        }
        :host([edit-mode]) #button {
          visibility: hidden;
          opacity: 0;
        }
        #button:hover {
          opacity: 1;
        }
        /** specific rendering of padding items to be next to each other */
        simple-fields-field[name="settings.advanced.margin-top"],
        simple-fields-field[name="settings.advanced.margin-bottom"],
        simple-fields-field[name="settings.advanced.margin-left"],
        simple-fields-field[name="settings.advanced.margin-right"],

        simple-fields-field[name="settings.advanced.padding-top"],
        simple-fields-field[name="settings.advanced.padding-bottom"],
        simple-fields-field[name="settings.advanced.padding-left"],
        simple-fields-field[name="settings.advanced.padding-right"] {
          width: 50%;
          text-align: center;
          display: inline-block;
          padding: 10px;
        }
        /** This is mobile layout for controls */
        @media screen and (max-width: 800px) {
          :host {
            width: 100%;
          }
          #resize {
            display: none;
          }
          :host([edit-mode]) .wrapper.full-panel .detail {
            max-width: 70vw;
            max-height: unset;
          }
          .detail {
            max-width: 70vw;
          }
          #tray-detail {
            max-width: 70vw;
            max-height: unset;
          }
          .wrapper {
            width: unset;
            top: -1000px;
            left: 0px;
            right: 0px;
            flex-direction: column;
          }
          :host([edit-mode]) .wrapper {
            top: 0;
            pointer-events: none;
          }
          :host([collapsed]) .wrapper {
            height: var(--hax-tray-menubar-min-height);
          }
          :host([element-align="left"]) .wrapper {
            left: -1000px;
            flex-direction: column;
          }
          #menubar {
            position: sticky;
            flex-direction: row;
            left: 0;
            top: 0;
            height: auto;
            flex: 0 0 auto;
            width: 100%;
            pointer-events: all;
          }
          #menubar > * {
            flex: 1 0 auto;
            min-width: var(--hax-tray-menubar-min-width);
          }
          #menubar > *::part(button) {
            min-width: var(--hax-tray-menubar-min-width);
            justify-content: space-around;
          }
          #menubar > *::part(label) {
            display: none;
          }
          #haxMenuAlign {
            display: none;
          }
          :host([tray-detail="view-source"]) .detail {
            width: 100%;
            resize: unset;
            height: 100vh;
          }
          :host([tray-detail="view-source"]) #tray-detail {
            overflow: hidden;
          }
          .detail {
            position: relative;
            flex: 1 1 100%;
            pointer-events: all;
          }
          :host([collapsed]) .detail {
            flex: 0 0 0px;
          }
        }
        @media screen and (max-width: 600px) {
          :host([edit-mode]) .hide-small {
            display: none;
          }
        }
      `]}get trayStatus(){let e=this.collapsed?"collapsed":"view-source"==this.trayDetail?"full-panel":"side-panel";return h.trayStatus=e,h.trayDetail=this.trayDetail,e}render(){return e`
      ${this.panelOpsTemplate}
      <div class="wrapper ${this.trayStatus}">
        ${this.hideToolbar?"":e`${this.menuToolbarTemplate}`}
        <div class="detail">
          <loading-indicator ?loading="${this.loading}"></loading-indicator>
          ${this.trayDetailTemplate}
        </div>
        <div class="resize" id="resize" @mousedown="${this.resizeDown}" @dblclick="${this.resetSize}">
          <div class="resize-visual"></div>
        </div>
      </div>
    `}resetSize(e){this.resizeDrag=!1,this.dragController.abort(),setTimeout((()=>{this.shadowRoot.querySelector(".detail").style.removeProperty("width")}),10)}resizeDown(e){this.resizeDrag=!0,this.__moveX=e.x,this.dragController=new AbortController,this.addEventListener("mousemove",(e=>{if(0===e.which&&(this.resizeDrag=!1,this.dragController.abort()),this.resizeDrag){this.__moveX=e.x;let t=44;this.hideToolbar&&(t=0),"right"===this.elementAlign?this.shadowRoot.querySelector(".detail").style.width=window.innerWidth-this.__moveX-t+"px":this.shadowRoot.querySelector(".detail").style.width=this.__moveX-t+"px"}}),{signal:this.dragController.signal}),this.addEventListener("mouseup",(e=>{this.resizeDrag=!1,this.dragController.abort()}),{signal:this.dragController.signal})}get panelOpsTemplate(){return this.hidePanelOps?"":e`
          <hax-tray-button
            large
            voice-command="edit page"
            .data-opened="${this.editMode}"
            @click="${this._clickEditButton}"
            icon="create"
            id="button"
            feature
            show-text-label
            show-tooltip
            label="${this.editMode?this.t.save:this.t.edit}"
          ></hax-tray-button>
        `}get toolbarsTemplate(){return e`${this.opsToolbarTemplate}${this.trayToolbarTemplate}`}get menuToolbarTemplate(){return e` <div id="menubar" class="collapse-menu">
      ${this.saveButtons} ${this.doButtons} ${this.contentButtons}
      <slot name="tray-buttons-pre"></slot>
      ${this.moreButtons}
    </div>`}get menuButtons(){return e`
        <hax-tray-button
          show-tooltip
          align-horizontal="${this.collapsed?"left":"center"}"
          id="haxMenuAlign"
          event-name="toggle-element-align"
          icon="arrow-${"left"==this.elementAlign?"forward":"back"}"
          label="${"left"==this.elementAlign?this.t.menuRight:this.t.menuLeft}"
          index="${"left"==this.elementAlign?"1":"0"}"
          tooltip="${this.t.move} ${"left"==this.elementAlign?this.t.right:this.t.left}"
        >
        </hax-tray-button>
    `}get saveButtons(){return this.hidePanelOps?"":e`
          <hax-tray-button
            @click="${this._clickSaveButton}"
            icon="save"
            icon-position="left"
            id="haxsavebutton"
            label="${this.editMode?this.t.save:this.t.edit}"
            event-name="save"
            voice-command="save page"
            show-text-label
            show-tooltip
            align-horizontal="${this.collapsed?"left":"center"}"
          ></hax-tray-button>
          <hax-tray-button
            icon="cancel"
            id="haxcancelbutton"
            label="${this.t.cancel}"
            icon-position="left"
            show-text-label
            show-tooltip
            align-horizontal="${this.collapsed?"left":"center"}"
          ></hax-tray-button>
        `}get doButtons(){return e` <hax-tray-button
        icon="icons:undo"
        ?disabled="${!this.canUndo}"
        label="${this.t.undo}"
        event-name="undo"
        voice-command="undo"
        data-simple-tour-stop
        data-stop-title="label"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div slot="tour" data-stop-content>
          Undo the previous operation in the content, whether typing or adding a
          widget.
        </div>
      </hax-tray-button>
      <hax-tray-button
        icon="icons:redo"
        ?disabled="${!this.canRedo}"
        label="${this.t.redo}"
        event-name="redo"
        voice-command="redo"
        data-simple-tour-stop
        data-stop-title="label"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div slot="tour" data-stop-content>
          Redo the last action that you hit Undo on.
        </div>
      </hax-tray-button>`}get contentButtons(){return e` <hax-tray-button
        event-name="content-edit"
        icon="settings"
        id="content-edit"
        label="${this.t.edit}"
        ?disabled="${!this.activeTagName||""==this.activeTagName||!this.activeNode||!this.activeNode.tagName}"
        voice-command="(modify)(configure)(edit) selected"
        data-simple-tour-stop
        data-stop-title="label"
        controls="tray-detail"
        tooltip="${this.t.edit} ${this.activeTagName}"
        toggles
        ?toggled="${!this.collapsed&&"content-edit"===this.trayDetail}"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div slot="tour" data-stop-content>
          When you want to add any content to the page from text, to images, to
          anything more advanced; you can always find items to add under the Add
          content menu. Click to expand, then either drag and drop items into
          the page or click and have them placed near whatever you are actively
          working on.
        </div>
      </hax-tray-button>
      <hax-tray-button
        event-name="content-add"
        icon="hax:add-brick"
        id="content-add"
        label="${this.t.blocks}"
        voice-command="select blocks (menu)"
        data-simple-tour-stop
        data-stop-title="label"
        controls="tray-detail"
        toggles
        ?toggled="${!this.collapsed&&"content-add"===this.trayDetail}"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div slot="tour" data-stop-content>
          When you want to add any content to the page from text, to images, to
          anything more advanced; you can always find items to add under the Add
          content menu. Click to expand, then either drag and drop items into
          the page or click and have them placed near whatever you are actively
          working on.
        </div>
      </hax-tray-button>
      <hax-tray-button
        icon="hax:multimedia"
        label="${this.t.media}"
        voice-command="select media (menu)"
        data-simple-tour-stop
        data-stop-title="label"
        controls="tray-detail"
        toggles
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
        @click="${this._clickMediaButton}"
      >
        <div slot="tour" data-stop-content>
          Search for media and content anywhere that your copy of HAX has access
          to. Pick what to search, perform the search and then click or drag the
          item into the contnet.
        </div>
      </hax-tray-button>
      <hax-tray-button
        event-name="content-map"
        icon="icons:toc"
        id="content-map"
        label="${this.t.structure}"
        voice-command="select structure (menu)"
        data-simple-tour-stop
        data-stop-title="label"
        controls="tray-detail"
        toggles
        ?toggled="${!this.collapsed&&"content-map"===this.trayDetail}"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div data-stop-content>
          This is a simple list of all the block areas of the page that are
          clickable to jump through items quickly as well as review some simple
          overview stats.
        </div>
      </hax-tray-button>`}_clickMediaButton(e){g.runProgram("/",{},null,null,"","sources"),g.open()}get moreButtons(){return e`<hax-tray-button
        id="exportbtn"
        icon="hax:html-code"
        label="${this.t.source}"
        event-name="view-source"
        voice-command="view (page) source"
        data-simple-tour-stop
        data-stop-title="label"
        icon-position="left"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      >
        <div data-stop-content>
          Every change you make in HAX is ultimately writing HTML. Know HTML?
          Awesome, pop open the source view and make any changes you like. HTML
          is always behind the scenes ensuring that content is portable, well
          formatted and easy to read.
        </div>
      </hax-tray-button>
      <hax-tray-button
        event-name="super-daemon"
        icon="hax:wizard-hat"
        label="${this.t.merlin}"
        voice-command="${this.t.merlin}"
        toggles
        ?toggled="${!this.collapsed&&this.tourOpened}"
        icon-position="left"
        tooltip="${this.t.summonMerlin}"
        show-text-label
        show-tooltip
        align-horizontal="${this.collapsed?"left":"center"}"
      ></hax-tray-button> `}get trayDetailTemplate(){return e` <div
      id="tray-detail"
      aria-live="polite"
      aria-disabled="${this.collapsed?"true":"false"}"
      tabindex="${this.collapsed?"-1":"0"}"
      selected-detail="${this.trayDetail}"
    >
      <div class="tray-detail-titlebar">
        <h4>
          ${this.trayLabel||`${this.activeTagName} ${this.t.properties}`}
          <div class="tray-detail-titlebar-actions">
          ${this.menuButtons}
        </div>
        </h4>
      </div>
      ${this.viewSourceTemplate}
      ${this.contentMapTemplate} ${this.contentEditTemplate}
      ${this.contentAddTemplate}
    </div>`}get viewSourceTemplate(){return e` <hax-view-source
      id="view-source"
      ?hidden="${"view-source"!==this.trayDetail}"
    ></hax-view-source>`}get contentEditTemplate(){return e` <simple-fields
      id="settingsform"
      ?dark="${"haxdark"==this.haxUiTheme}"
      disable-responsive
      code-theme="${"system"==this.haxUiTheme?"auto":"haxdark"==this.haxUiTheme?"vs-dark":"vs"}"
      ?hidden="${"content-edit"!==this.trayDetail}"
    ></simple-fields>`}get contentAddTemplate(){let t="content-add"!==this.trayDetail;return e`<div class="block-add-wrapper">
      <hax-tray-upload ?hidden="${t}" show-sources></hax-tray-upload>
      <hax-gizmo-browser
        id="gizmobrowser"
        ?hidden="${t}"
      ></hax-gizmo-browser>
      <hax-stax-browser
        id="staxbrowser"
        ?hidden="${t}"
        label="${this.t.templates}"
      ></hax-stax-browser>
      <hax-app-search ?hidden="${t}" id="haxappsearch"></hax-app-search>
    </div>`}get contentMapTemplate(){return e`<hax-map
      controls="content-map"
      ?hidden="${"content-map"!==this.trayDetail}"
    ></hax-map>`}_refreshAddData(){this.shadowRoot.querySelector("#gizmobrowser").resetList(p(h.gizmoList)),this.shadowRoot.querySelector("#staxbrowser").staxList=[...p(h.staxList)]}_processTrayEvent(e){var t=s(e)[0],i=e.detail.eventName;switch("HAX-TRAY-BUTTON"==t.tagName&&e.detail.eventName===this.trayDetail?this.collapsed=!this.collapsed:this.collapsed=!1,i){case"insert-stax":this.dispatchEvent(new CustomEvent("hax-insert-content-array",{bubbles:!0,cancelable:!0,composed:!0,detail:t.stax}));break;case"insert-tag":let i,a={tag:e.detail.value},o=h.haxSchemaFromTag(e.detail.value);if(h.recentGizmoList.push(o.gizmo),(t.getAttribute("data-demo-schema")||e.detail.demoSchema)&&o&&o.demoSchema&&o.demoSchema[0])i=o.demoSchema[0];else{let o=JSON.parse(t.getAttribute("event-properties")),s=t.getAttribute("event-content");e.detail.properties&&(o=e.detail.properties),null==o&&(o={}),null==s&&(s=""),i=h.haxElementPrototype(a,o,s)}this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:i}));break;case"toggle-element-align":let s=["left","right"],l=s[e.detail.index]?s[e.detail.index]:"left";this.style.setProperty("--hax-tray-custom-y",null),this.style.setProperty("--hax-tray-custom-x",null),h.elementAlign=l,n("hax-tray-elementAlign",l);break;case"super-daemon":g.open(),this.collapsed=!1;break;case"content-map":case"content-edit":case"content-add":this.trayDetail=e.detail.eventName;break;case"start-tour":this.startTour();break;case"stop-tour":window.SimpleTourManager.requestAvailability().stopTour("hax");break;case"undo":h.activeHaxBody.undo();break;case"redo":h.activeHaxBody.redo();break;case"view-source":this.trayDetail=e.detail.eventName,this.shadowRoot.querySelector("#view-source").openSource(),this.collapsed=!1}}startTour(){this.__tour=this.__tour||window.SimpleTourManager.requestAvailability(),this.tourController=new AbortController,window.addEventListener("tour-changed",this._handleTourChanged.bind(this),{signal:this.tourController.signal}),this.__tour.startTour("hax")}stopTour(){this.__tour=this.__tour||window.SimpleTourManager.requestAvailability(),this.__tour.stopTour("hax"),this.tourController.abort()}_handleTourChanged(e){this.tourOpened=e.detail.active==this.tourName}static get properties(){return{...super.properties,offsetMargin:{type:String,attribute:"offset-margin"},resizeDrag:{type:Boolean,attribute:"resize-drag",reflect:!0},collapsed:{type:Boolean,reflect:!0},traySizeIcon:{type:String},loading:{type:Boolean,reflect:!0},activeValue:{type:Object},activeSchema:{type:Array},elementAlign:{type:String,reflect:!0,attribute:"element-align"},light:{type:Boolean,reflect:!0},canUndo:{type:Boolean,attribute:"can-undo"},canRedo:{type:Boolean,attribute:"can-redo"},haxUiTheme:{type:String},hidePanelOps:{type:Boolean,reflect:!0,attribute:"hide-panel-ops"},hideToolbar:{type:Boolean,reflect:!0,attribute:"hide-toolbar"},globalPreferences:{type:Object},activeNode:{type:Object},activeTagName:{type:String},activeGizmo:{type:Object},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},trayDetail:{type:String,reflect:!0,attribute:"tray-detail"},trayLabel:{type:String},tourOpened:{type:String},__tour:{type:Object}}}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.__setup||(this.shadowRoot.querySelector("#settingsform").schematizer=l,this.shadowRoot.querySelector("#settingsform").elementizer=r,setTimeout((()=>{this.shadowRoot.querySelector(".wrapper").style.margin=this.offsetMargin}),1e3),this.__setup=!0,this.shadowRoot.querySelector("#settingsform").addEventListener("value-changed",this.__valueChangedEvent.bind(this)),this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxTray",object:this}})))}async updated(e){super.updated&&super.updated(e),e.forEach((async(e,t)=>{"editMode"==t&&(this.editMode&&await h.refreshActiveNodeForm(),this._editModeChanged(this.editMode)),"offsetMargin"==t&&setTimeout((()=>{this.shadowRoot.querySelector(".wrapper").style.margin=this.offsetMargin}),0),"trayDetail"==t&&this._updateTrayDetail(this[t]),"collapsed"==t&&this[t]&&this._editModeChanged(this.editMode),"activeGizmo"==t&&"view-source"!==this.trayDetail&&(this.activeGizmo?(this.activeTagName=this.activeGizmo.title,e&&["content-map","content-edit","content-add"].includes(this.trayDetail)||(this.trayDetail="content-edit")):["content-add","content-map"].includes(this.trayDetail)||(this.trayDetail="content-add")),"activeNode"==t&&this.activeNode&&this.activeNode.tagName&&this.editMode&&await h.refreshActiveNodeForm()}))}async _setupForm(){this.loading=!0;let e=this.activeNode;if(this._initial=!0,this.activeValue={settings:{configure:{},advanced:{__position:"hax-align-left",__scale:100},developer:{}}},e&&e.tagName&&h.elementList[e.tagName.toLowerCase()]){let t={...h.elementList[e.tagName.toLowerCase()]};void 0===t.gizmo.title?this.humanName=e.tagName.replace("-"," ").toLowerCase():this.humanName=t.gizmo.title;for(let e in this.activeHaxElement.properties)t.settings.configure.forEach((t=>{t.property===e&&(this.activeValue.settings.configure[e]=this.activeHaxElement.properties[e]),t.attribute===e&&(this.activeValue.settings.configure[e]=this.activeHaxElement.properties[e]),t.slot===e&&(this.activeValue.settings.configure[e]=this.activeHaxElement.properties[e])})),t.settings.advanced.forEach((t=>{t.property===e&&(this.activeValue.settings.advanced[e]=this.activeHaxElement.properties[e]),t.attribute===e&&(this.activeValue.settings.advanced[e]=this.activeHaxElement.properties[e]),t.slot===e&&(this.activeValue.settings.advanced[e]=this.activeHaxElement.properties[e])})),t.settings.developer.forEach((t=>{t.property===e&&(this.activeValue.settings.developer[e]=this.activeHaxElement.properties[e]),t.attribute===e&&(this.activeValue.settings.developer[e]=this.activeHaxElement.properties[e]),t.slot===e&&(this.activeValue.settings.developer[e]=this.activeHaxElement.properties[e])}));let i=document.createElement("div");i.innerHTML=this.activeHaxElement.content,i.childNodes.forEach((e=>{1===e.nodeType&&"undefined"!==e.innerHTML&&(t.settings.configure.forEach((t=>{t.slot===e.getAttribute("slot")?this.activeValue.settings.configure[t.slot]=e.innerHTML:""!=t.slot||null!=e.getAttribute("slot")&&"null"!=e.getAttribute("slot")||(this.activeValue.settings.configure[t.slot]=e.innerHTML)})),t.settings.advanced.forEach((t=>{t.slot===e.getAttribute("slot")?this.activeValue.settings.advanced[t.slot]=e.innerHTML:""!=t.slot||null!=e.getAttribute("slot")&&"null"!=e.getAttribute("slot")||(this.activeValue.settings.advanced[t.slot]=e.innerHTML)})),t.settings.developer.forEach((t=>{t.slot===e.getAttribute("slot")?this.activeValue.settings.developer[t.slot]=e.innerHTML:""!=t.slot||null!=e.getAttribute("slot")&&"null"!=e.getAttribute("slot")||(this.activeValue.settings.developer[t.slot]=e.innerHTML)})))})),""!=e.style.width?this.activeValue.settings.advanced.__scale=e.style.width.replace("%",""):this.activeValue.settings.advanced.__scale=100,"block"==e.style.display&&"0px auto"==e.style.margin&&"right"==e.style.float?this.activeValue.settings.advanced.__position="hax-align-right":"block"==e.style.display&&"0px auto"==e.style.margin?this.activeValue.settings.advanced.__position="hax-align-center":this.activeValue.settings.advanced.__position="hax-align-left",this.activeHaxElement.properties.__scale=this.activeValue.settings.advanced.__scale,this.activeHaxElement.properties.__position=this.activeValue.settings.advanced.__position;let a=!!t.type&&"grid"===t.type;t.settings.configure.forEach(((e,i)=>{t.settings.configure[i].attribute&&(t.settings.configure[i].property=t.settings.configure[i].attribute),t.settings.configure[i].slot&&(t.settings.configure[i].property=t.settings.configure[i].slot)})),t.settings.advanced.forEach(((e,i)=>{t.settings.advanced[i].attribute&&(t.settings.advanced[i].property=t.settings.advanced[i].attribute),t.settings.advanced[i].slot&&(t.settings.advanced[i].property=t.settings.advanced[i].slot)})),t.settings.developer.forEach(((e,i)=>{t.settings.developer[i].attribute&&(t.settings.developer[i].property=t.settings.developer[i].attribute),t.settings.developer[i].slot&&(t.settings.developer[i].property=t.settings.developer[i].slot)})),t.canPosition&&t.settings.advanced.unshift({property:"__position",title:this.t.alignment,inputMethod:"select",value:this.activeValue.settings.advanced.__position,options:{"hax-align-left":this.t.left,"hax-align-center":this.t.center,"hax-align-right":this.t.right}}),t.canScale&&t.settings.advanced.unshift({property:"__scale",title:this.t.width,inputMethod:"slider",value:this.activeValue.settings.advanced.__scale,min:t.canScale.min?t.canScale.min:12.5,max:t.canScale.max?t.canScale.max:100,step:t.canScale.step?t.canScale.step:12.5}),this.activeSchema=[{property:"settings",inputMethod:"collapse",properties:[]}];let setProps=(e,t,i=[])=>{let o=a?i.filter((e=>!(""===e.slot||e.slot||e.attribute&&"slot"==e.attribute))):i;this.activeSchema[0].properties.push({property:e,title:t,properties:o.length>0?o:void 0,disabled:o.length<1,expanded:"configure"===e&&(!h.isTextElement(this.activeNode)||h.isInlineElement(this.activeNode)),accordion:!0})};h.testHook(e,"setupActiveElementForm")&&await h.runHook(e,"setupActiveElementForm",[t]),setProps("configure",this.t.configure,t.settings.configure),setProps("advanced",this.t.advanced,t.settings.advanced),setProps("developer",this.t.developer,t.settings.developer),this.__activePropSchema=t,this.shadowRoot.querySelector("#settingsform").fields=[],this.shadowRoot.querySelector("#settingsform").value={},this.shadowRoot.querySelector("#settingsform").fields=this.activeSchema,this.shadowRoot.querySelector("#settingsform").value=this.activeValue,this.loading=!1}}_toArray(e){return null==e?[]:Object.keys(e).map((function(t){return e[t]}))}updateMap(){this.shadowRoot&&this.shadowRoot.querySelector("hax-map")&&"content-map"==this.trayDetail&&this.shadowRoot.querySelector("hax-map").updateHAXMap()}_updateTrayDetail(e){e&&this.shadowRoot&&this.shadowRoot.querySelector(".detail")&&(this.shadowRoot.querySelector(".detail").style.width="",this.shadowRoot.querySelector(".detail").style.height=""),"content-add"==e?(this.trayLabel=this.t.blocks,this._refreshAddData()):"content-map"==e?(this.trayLabel=this.t.structure,this.shadowRoot.querySelector("hax-map").updateHAXMap()):"content-edit"!=e||this.activeTagName&&""!=this.activeTagName&&this.activeNode&&this.activeNode.tagName?e&&""!=e?this.trayLabel=void 0:this.trayDetail="content-edit":this.trayDetail="content-add",this.requestUpdate()}__valueChangedEvent(e){if(this.editMode&&e.detail.value&&e.detail.value.settings){let i=e.detail.value.settings,s="grid"=={...h.elementList[this.activeNode.tagName.toLowerCase()]}.type,n={configure:"configure",advanced:"advanced",developer:"developer"};var t;clearTimeout(this.__contextPropDebounce),this.__contextPropDebounce=setTimeout((()=>{for(let l in n)for(let n in i[l])if(t=!1,null==i[l][n]||i[l][n].readOnly)"data-hax-lock"===n&&(this.dispatchEvent(new CustomEvent("hax-toggle-active-node-lock",{bubbles:!0,composed:!0,cancelable:!0,detail:{lock:!1,node:this.activeNode}})),this.__lockAllSettings(!1)),this.activeNode.removeAttribute(a(n));else{if("prefix"===n&&""!=i[l][n])this.activeNode.setAttribute("prefix",i[l][n]),t=!0;else if("data-hax-lock"===n)this.dispatchEvent(new CustomEvent("hax-toggle-active-node-lock",{bubbles:!0,composed:!0,cancelable:!0,detail:{lock:i[l][n],node:this.activeNode}})),this.__lockAllSettings(i[l][n]);else if("innerText"===n)this.activeNode.innerText=i[l][n],t=!0;else if("advanced"===l&&"__position"===n)t=!0,this._initial||this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,composed:!0,detail:{eventName:i[l][n],value:i[l][n]}}));else if("advanced"===l&&"__scale"===n)t=!0,this._initial||this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,composed:!0,detail:{eventName:"hax-size-change",value:i[l][n]}}));else if("advanced"===l&&"font-size"===n||"background-color"===n||"text-align"===n||"padding-top"===n||"padding-bottom"===n||"padding-left"===n||"padding-right"===n||"margin-top"===n||"margin-bottom"===n||"margin-left"===n||"margin-right"===n)this._initial||this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,composed:!0,detail:{eventName:"hax-style-setting-change",value:i[l]}}));else if(this.activeNode.hasOwnProperty(n)||this.activeNode.properties&&this.activeNode.properties.hasOwnProperty(n)||null!=i[l][n]&&i[l][n].constructor===Array||null!=i[l][n]&&i[l][n].constructor===Object)try{i[l][n].constructor===Array?this.activeNode[n]=[...i[l][n]]:i[l][n].constructor===Object?this.activeNode[n]={...i[l][n]}:this.activeNode[n]=i[l][n],t=!0}catch(e){console.warn(e),t=!1}else if(!s)for(let a in this.__activePropSchema.settings[l])if(this.__activePropSchema.settings[l][a].slot==n){let s="span";if(this.__activePropSchema.settings[l][a].slotWrapper)s=this.__activePropSchema.settings[l][a].slotWrapper;else if(this.__activePropSchema.settings[l][a].allowedSlotWrappers&&this.__activePropSchema.settings[l][a].allowedSlotWrappers[0])s=this.__activePropSchema.settings[l][a].allowedSlotWrappers[0];else if("code-editor"===this.activeNode.tagName.toLowerCase())s="template";else{let e=["span","div","p"],t=this.__activePropSchema.settings[l][a].excludedSlotWrappers||[];t&&(e=e.filter((e=>!t.includes(e))))}var e=document.createElement(s);if(this.__activePropSchema.settings[l][a].slotAttributes)for(let t in this.__activePropSchema.settings[l][a].slotAttributes)e.setAttribute(t,this.__activePropSchema.settings[l][a].slotAttributes[t]);""!==this.__activePropSchema.settings[l][a].slot&&(e.slot=this.__activePropSchema.settings[l][a].slot),e.innerHTML=i[l][n];const r=e.cloneNode(!0);t=!0,h.isTextElement(this.activeNode)?this.activeNode.innerHTML=e.innerHTML:(o(this.activeNode,this.__activePropSchema.settings[l][a].slot),this.activeNode.appendChild(r))}if(!t&&""!=a(n))try{!0===i[l][n]?this.activeNode.setAttribute(a(n),a(n)):!1===i[l][n]||""===i[l][n]?this.activeNode.removeAttribute(a(n)):this.activeNode.setAttribute(a(n),i[l][n])}catch(e){console.warn(e),console.warn(n,i[l][n])}}}),100)}setTimeout((()=>{this._initial&&(this._initial=!1)}),51)}__lockAllSettings(e){this.shadowRoot.querySelectorAll("simple-fields-tab *[is-simple-field-type]:not([name='settings.advanced.data-hax-lock'])").forEach((t=>{t.disabled=e}))}_editModeChanged(e){!this.hidePanelOps&&this.shadowRoot&&this.shadowRoot.querySelector("#button")&&(this.shadowRoot.querySelector("#button").icon=e?"save":"create"),e?this.removeAttribute("tabindex"):this.setAttribute("tabindex","-1")}_clickEditButton(e){h.editMode=!0,window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_clickSaveButton(e){h.editMode=!1,this.dispatchEvent(new CustomEvent("hax-save",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}}customElements.define(HaxTray.tag,HaxTray);export{HaxTray};