/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as s,html as i,css as t}from"../../../lit-element/lit-element.js";import{ElmslnStudioStyles as o}from"./elmsln-studio-styles.js";import{ElmslnStudioUtilities as e}from"./elmsln-studio-utilities.js";import"../../img-view-modal/img-view-modal.js";import"../../hax-iconset/hax-iconset.js";import"../../threaded-discussion/threaded-discussion.js";class ElmslnStudioPortfolio extends(e(o(s))){static get styles(){return[...super.styles,t`
        :host {
          display: block;
          flex-wrap: wrap;
        }
        h1 {
          text-align: center;
        }
        #breadcrumb {
          margin: 0 0 var(--elmsln-studio-margin, 20px);
          flex: 1 0 100%;
          --elmsln-studio-link-Color: var(
            --simple-colors-fixed-theme-light-blue-8
          );
          --elmsln-studio-link-focus-Color: var(
            --simple-colors-fixed-theme-light-blue-9
          );
        }
        #breadcrumb > * {
          display: inline;
        }
        lrndesign-avatar,
        .student-name,
        .project-name,
        .assignment-name,
        .submission-date {
          font-weight: normal;
          display: block;
        }
        .student-name {
          font-size: calc(2 * var(--elmsln-studio-FontSize, 16px));
          font-weight: bold;
          color: #4b4b4b;
        }
        .project-name {
          font-size: calc(1.75 * var(--elmsln-studio-FontSize, 16px));
          color: #95989a;
        }
        #project-buttons,
        .submission-header {
          position: relative;
          height: 40px;
          margin-top: -40px;
        }
        #sort,
        .submission-header elmsln-studio-button {
          color: #95989a;
          font-size: var(--elmsln-studio-FontSize, 16px);
          text-transform: uppercase;
          position: absolute;
          right: 0;
          top: 0;
        }
        #sort:focus,
        #sort:hover,
        .submission-header elmsln-studio-button:focus,
        .submission-header elmsln-studio-button:hover {
          color: #4b4b4b;
        }
        #sort.sort-latest {
          transform: rotateX(180deg) rotateY(0deg);
        }
        section {
          border-top: 2px solid #eaeaea;
          padding: calc(0.5 * var(--elmsln-studio-margin, 20px)) 0
            var(--elmsln-studio-margin, 20px);
        }
        .view-discussion {
          border: 1px solid #eaeaea;
          padding: calc(0.5 * var(--elmsln-studio-margin, 20px));
        }
        .view-discussion section {
          opacity: 0.4;
          display: none;
        }
        .view-discussion section.section-discussion {
          display: block;
          opacity: 1;
        }
        h2 {
          margin: calc(2 * var(--elmsln-studio-margin, 20px)) auto;
          text-align: center;
        }
        .assignment-name {
          font-size: calc(1.5 * var(--elmsln-studio-FontSize, 16px));
          color: #555555;
        }
        .submission-date {
          font-size: var(--elmsln-studio-FontSize, 16px);
          color: #95989a;
        }
        .submission-body {
          color: #95989a;
          line-height: 160%;
          margin: calc(0.5 * var(--elmsln-studio-margin, 20px)) auto
            var(--elmsln-studio-margin, 20px);
        }
        .submission-body:first-child {
          margin-top: 0;
        }
        .submission-body:last-child {
          margin-bottom: 0;
        }
        .submission-links {
          list-style: none;
          padding-inline-start: 0;
        }
        .submission-links > li {
          display: flex;
          align-items: flex-start;
          justify-content: flex-start;
        }
        .submission-links a:link,
        .submission-links a:visited {
          font-size: calc(1.5 * var(--elmsln-studio-FontSize, 16px));
          font-weight: bold;
          color: #000;
          text-decoration: none;
        }
        .submission-links a:focus,
        .submission-links a:hover {
          text-decoration: underline;
        }
        .submission-links simple-icon {
          margin-right: 0.5em;
        }
        .submission-links a:focus simple-icon,
        .submission-links a:hover simple-icon {
          text-decoration: none;
        }
        .callout {
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
          border: 1px solid #eaeaea;
          padding: 0;
        }
        .discussion-label {
          text-align: left;
          font-size: calc(1 * var(--elmsln-studio-FontSize, 16px));
          margin: var(--elmsln-studio-margin, 20px) 0
            calc(0.25 * var(--elmsln-studio-margin, 20px));
        }
        .callout > * {
          padding: calc(0.25 * var(--elmsln-studio-margin, 20px))
            calc(0.5 * var(--elmsln-studio-margin, 20px));
        }
        .callout .callout-label {
          font-size: calc(1 * var(--elmsln-studio-FontSize, 16px));
          font-weight: normal;
          display: flex;
          align-items: center;
          justify-content: flex-start;
          margin: 0;
          color: #4b4b4b;
          border-bottom: 1px solid #eaeaea;
        }
        .callout .callout-label simple-icon {
          margin-right: 1em;
        }
        threaded-discussion {
          background-color: #eaeaea;
          padding: 1px;
          --threaded-discussion-comment-button-BackgroundColor: var(
            --simple-colors-fixed-theme-light-blue-8
          );
          --threaded-discussion-comment-button-focus-BackgroundColor: var(
            --simple-colors-fixed-theme-light-blue-9
          );
        }
        #prev-next-nav {
          z-index: 10000;
          display: flex;
        }
        @media screen and (min-width: 600px) {
          :host {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
          }
          #primary {
            flex: 1 0 100%;
          }
          #primary.view-discussion {
            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));
          }
          #primary:not(.view-discussion) {
            max-width: calc(1000px - 2 * var(--elmsln-studio-margin, 20px));
            margin: 0 auto;
            border: 1px solid #eaeaea;
            padding: var(--elmsln-studio-margin, 20px);
          }
          .view-discussion section {
            display: block;
          }
          .view-discussion section.section-discussion {
            border: 4px solid #95989a;
            padding: calc(0.5 * var(--elmsln-studio-margin, 20px))
              calc(0.5 * var(--elmsln-studio-margin, 20px))
              var(--elmsln-studio-margin, 20px);
            opacity: 1;
          }
          #secondary {
            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));
          }
        }
      `]}render(){return i`
      <div id="breadcrumb">
        <elmsln-studio-link href="/submissions">Submissions</elmsln-studio-link>
        <span> > </span>
        ${this.portfolio?i`
                ${this.portfolio.projectId&&this.portfolio.project?i`
                      <elmsln-studio-link
                        href="${"/submissions?project="+this.portfolio.projectId}"
                        >${this.portfolio.project||"Project"}</elmsln-studio-link
                      >
                      <span> > </span>
                    `:""}
              `:""}
        ${this.portfolio&&this.assignment?i`
                <elmsln-studio-link
                  href="${`/submissions?${this.portfolio.projectId&&this.portfolio.project?`project=${this.portfolio.projectId}&`:""}assignment=${this.assignment.assignmentId}`}"
                  >${this.assignment.assignment||"Assignment"}</elmsln-studio-link
                >
              `:i`<em>Assignment</em>`}
        <span> > </span>
        <span
          >${this.portfolio?this.fullName(this.portfolio):i`<em>Student</em>`}</span
        >
      </div>
      <div
        id="primary"
        class="${this.comment&&""!==this.comment?"view-discussion":""}"
      >
        <article id="portfolio-project">
          <h1>
            <lrndesign-avatar
              accent-color="${this.portfolio?this.accentColor(this.fullName(this.portfolio)):"grey"}"
              aria-hidden="true"
              label="${this.portfolio?this.fullName(this.portfolio):"undefined"}"
              .src="${this.portfolio&&this.portfolio.avatar?this.portfolio.avatar:void 0}"
              two-chars
            >
            </lrndesign-avatar>
            <span class="student-name"
              >${this.portfolio?this.fullName(this.portfolio):"Loading..."}</span
            >
            ${this.portfolio&&this.portfolio.project?i`
                    <span class="project-name">${this.portfolio.project}</span>
                  `:""}
          </h1>
          ${this.portfolio?i`
                  <div id="project-buttons">
                    <button
                      id="sort"
                      aria-pressed="${this.sortLatest?"false":"true"}"
                      class="${this.sortLatest?"sort-latest":""}"
                      @click="${s=>this.sortLatest=!this.sortLatest}"
                      controls="portfolio-project"
                    >
                      <span> > </span>
                    </button>
                  </div>
                `:this.loading("grey")}
            <span>${this.fullName(this.portfolio)}</span>
          </div>
          <div
            id="primary"
            ?hidden="${!this.portfolio}"
            class="${this.comment&&""!==this.comment?"view-discussion":""}"
          >
            <article id="portfolio-project">
              <h1>
                <lrndesign-avatar
                  accent-color="${this.accentColor(this.fullName(this.portfolio))}"
                  aria-hidden="true"
                  label="${this.fullName(this.portfolio)}"
                  .src="${this.portfolio&&this.portfolio.avatar?this.portfolio.avatar:void 0}"
                  two-chars
                >
                </lrndesign-avatar>
                <span class="student-name"
                  >${this.fullName(this.portfolio)}</span
                >
                <span class="project-name">${this.portfolio.project}</span>
              </h1>
              <div id="project-buttons">
                <button
                  id="sort"
                  aria-pressed="${this.sortLatest?"false":"true"}"
                  class="${this.sortLatest?"sort-latest":""}"
                  @click="${s=>this.sortLatest=!this.sortLatest}"
                  controls="portfolio-project"
                >
                  <simple-icon icon="sort"></simple-icon>
                  <span class="sr-only"
                    >Sort Submissions
                    ${this.sortLatest?"Newest First":"Oldest First"}</simple-tooltip
                  >
                </div>
                ${this.sortedSubmissions.map(s=>i`
                    <section
                      class="${this.submissionFilter===s.id?"section-discussion":""}"
                    >
                      <div class="submission-header">
                        <h2 id="sub-${s.id}">
                          <span class="assignment-name">${s.assignment}</span>
                          <span class="submission-date"
                            >Submitted:
                            <local-time
                              month="long"
                              day="numeric"
                              year="numeric"
                              hour="2-digit"
                              minute="2-digit"
                              second="2-digit"
                              time-zone-name="short"
                              datetime="${s.date}"
                            >
                              ${this.dateFormat(s.date)}
                            </local-time>
                          </span>
                        </h2>
                        <elmsln-studio-button
                          id="sub-${s.id}-toggle-button"
                          class="view-discussion-button"
                          aria-describedby="sub-${s.id}"
                          icon="${this.submissionFilter===s.id&&this.comment?"close":this.getFeedbackIcon(s.feedback.length)}"
                          path="${this.getActivityLink(s,this.submissionFilter===s.id&&this.comment)}"
                        >
                          <span class="sr-only"
                            >${this.submissionFilter===s.id&&this.comment?"Close Feedback":`View Feedback (${s.feedback.length})`}</span
                          >
                          <span class="sr-only"
                            >Give / View Feedback (${s.feedback.length})</span
                          >
                        </elmsln-studio-button>
                      </div>
                      <div class="submission-body">
                        ${s.links&&s.links.length>0?i`
                              <ul class="submission-links">
                                ${s.links.map(s=>i`
                                    <li>
                                      <elmsln-studio-link
                                        href="${s.url}"
                                        target="_blank"
                                      >
                                        <simple-icon
                                          aria-hidden="true"
                                          icon="${"pdf"===s.type?"hax:file-pdf":"link"}"
                                        ></simple-icon>
                                        ${s.text||s.url}
                                      </elmsln-studio-link>
                                    </li>
                                  `)}
                              </ul>
                            `:s.sources&&0!==s.sources.length?this.getThumnailGrid(s):i` ${s.body} `}
                      </div>
                    </section>
                  `)}
            </article>
          </div>
          <div
            id="secondary"
            ?hidden=${!this.portfolio||!this.comment||""===this.comment}
          >
            <aside>
              <div class="instructions callout">
                <h2 class="callout-label">
                  <simple-icon icon="info" aria-hidden="true"></simple-icon>
                  Giving Feedback
                </h2>
                <div>
                  <ul>
                    <li>Things to look for: blah, blah, blah</li>
                    <li>How to say it: blah, blah, blah</li>
                    <li>Other info.</li>
                  </ul>
                </div>
              </div>
              <h2 class="discussion-label">Feedback</h2>
              <div class="discussion callout">
                <p class="callout-label">
                  <simple-icon
                    icon="communication:comment"
                    aria-hidden="true"
                  ></simple-icon>
                  Post New Feedback
                </p>
                <threaded-discussion
                  comment-icon="send"
                  ?demo="${this.demoMode}"
                  .data="${this.submission||[]}"
                  latest
                >
                </threaded-discussion>
              </div>
            </aside>
          </div>
        `}static get properties(){return{...super.properties,portfolio:{type:Object},feedback:{type:Object},comment:{type:String,attribute:"comment"},submissions:{type:Array},submissionFilter:{type:String,attribute:"submission-filter"},sortLatest:{type:Boolean,attribute:"sort-latest",reflect:!0}}}static get tag(){return"elmsln-studio-portfolio"}constructor(){super(),this.feedback={},this.comment="",this.tag=ElmslnStudioPortfolio.tag}firstUpdated(s){super.firstUpdated&&super.firstUpdated(s),this.fetchData("submissions"),this.fetchData("portfolios"),this.fetchData("discussion"),console.log("updated",this.submissions,this.portfolios,this.discussion)}get nav(){let s,i,t=this.portfolio||{},getLink=s=>{let i=this.submissionFilter?this.submissionFilter.replace(/-\w+$/,""):t.assignmentId,o=`${i}-${s.userId}`,e=i&&s.submissions?s.submissions.filter(s=>s.id===o):[],n=e.length>0?e[0]:{};return n.activity="submission",this.getActivityLink(n,!this.comment,this.sortLatest)},o=t.prev?this.fullName(t.prev):"",e=t.next?this.fullName(t.next):"";return s=t.prev?getLink(t.prev):void 0,i=t.next?getLink(t.next):void 0,this.prevNextNav(o,s,e,i)}get sortedSubmissions(){return this.portfolio&&this.portfolio.submissions?this.sortDates(this.portfolio.submissions,this.sortLatest):[]}get assignment(){let s=this.portfolio&&this.portfolio.submissions?this.portfolio.submissions.filter(s=>!this.submissionFilter||s.id===this.submissionFilter):[];return!!s&&s[0]}updated(s){super.updated&&super.updated(s),s.forEach((s,i)=>{})}}customElements.define("elmsln-studio-portfolio",ElmslnStudioPortfolio);export{ElmslnStudioPortfolio};