/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
import{noChange as e,_$LH as t}from"./lit-html.js";import{PartType as r}from"./directive.js";import{isPrimitive as n,isSingleExpression as a,isTemplateResult as o,isCompiledTemplateResult as l}from"./directive-helpers.js";const{_TemplateInstance:i,_isIterable:s,_resolveDirective:p,_ChildPart:d,_ElementPart:c}=t;export const hydrate=(e,t,r={})=>{if(console.warn("Importing `hydrate()` from `lit-html/experimental-hydrate.js` is deprecated.Import from `@lit-labs/ssr-client` instead."),void 0!==t._$litPart$)throw new Error("container already contains a live render");let n,a,o;const l=[],i=document.createTreeWalker(t,NodeFilter.SHOW_COMMENT,null,!1);let s;for(;null!==(s=i.nextNode());){const t=s.data;if(t.startsWith("lit-part")){if(0===l.length&&void 0!==n)throw new Error(`There must be only one root part per container. Found a part marker (${s}) when we already have a root part marker (${a})`);o=openChildPart(e,s,l,r),null!=n||(n=o),null!=a||(a=s)}else if(t.startsWith("lit-node"))createAttributeParts(s,l,r);else if(t.startsWith("/lit-part")){if(1===l.length&&o!==n)throw new Error("internal error");o=closeChildPart(s,o,l)}}if(void 0===n){const e=t instanceof ShadowRoot?"{container.host.localName}'s shadow root":t instanceof DocumentFragment?"DocumentFragment":t.localName;console.error(`There should be exactly one root part in a render container, but we didn't find any in ${e}.`)}t._$litPart$=n};const openChildPart=(t,r,a,c)=>{let m,u;if(0===a.length)u=new d(r,null,void 0,c),m=t;else{const e=a[a.length-1];if("template-instance"===e.type)u=new d(r,null,e.instance,c),e.instance._$parts.push(u),m=e.result.values[e.instancePartIndex++],e.templatePartIndex++;else if("iterable"===e.type){u=new d(r,null,e.part,c);const t=e.iterator.next();if(t.done)throw m=void 0,e.done=!0,new Error("Unhandled shorter than expected iterable");m=t.value,e.part._$committedValue.push(u)}else u=new d(r,null,e.part,c)}if(m=p(u,m),m===e)a.push({part:u,type:"leaf"});else if(n(m))a.push({part:u,type:"leaf"}),u._$committedValue=m;else if(o(m)){if(l(m))throw new Error("compiled templates are not supported");const e=`lit-part ${digestForTemplateResult(m)}`;if(r.data!==e)throw new Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");{const e=d.prototype._$getTemplate(m),t=new i(e,u);a.push({type:"template-instance",instance:t,part:u,templatePartIndex:0,instancePartIndex:0,result:m}),u._$committedValue=t}}else s(m)?(a.push({part:u,type:"iterable",value:m,iterator:m[Symbol.iterator](),done:!1}),u._$committedValue=[]):(a.push({part:u,type:"leaf"}),u._$committedValue=null==m?"":m);return u},closeChildPart=(e,t,r)=>{if(void 0===t)throw new Error("unbalanced part marker");t._$endNode=e;const n=r.pop();if("iterable"===n.type&&!n.iterator.next().done)throw new Error("unexpected longer than expected iterable");if(r.length>0){return r[r.length-1].part}},createAttributeParts=(e,t,n)=>{const o=/lit-node (\d+)/.exec(e.data),l=parseInt(o[1]),i=e.nextElementSibling;if(null===i)throw new Error("could not find node for attribute parts");i.removeAttribute("defer-hydration");const s=t[t.length-1];if("template-instance"!==s.type)throw new Error("internal error");{const e=s.instance;for(;;){const t=e._$template.parts[s.templatePartIndex];if(void 0===t||t.type!==r.ATTRIBUTE&&t.type!==r.ELEMENT||t.index!==l)break;if(t.type===r.ATTRIBUTE){const o=new t.ctor(i,t.name,t.strings,s.instance,n),l=a(o)?s.result.values[s.instancePartIndex]:s.result.values,p=!(o.type===r.EVENT||o.type===r.PROPERTY);o._$setValue(l,o,s.instancePartIndex,p),s.instancePartIndex+=t.strings.length-1,e._$parts.push(o)}else{const t=new c(i,s.instance,n);p(t,s.result.values[s.instancePartIndex++]),e._$parts.push(t)}s.templatePartIndex++}}};export const digestForTemplateResult=e=>{const t=new Uint32Array(2).fill(5381);for(const r of e.strings)for(let e=0;e<r.length;e++)t[e%2]=33*t[e%2]^r.charCodeAt(e);const r=String.fromCharCode(...new Uint8Array(t.buffer));return btoa(r)};