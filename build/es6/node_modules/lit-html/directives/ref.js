import{nothing as t}from"../lit-html.js";import{AsyncDirective as i}from"../async-directive.js";import{directive as s}from"../directive.js";
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
<<<<<<< Updated upstream
 */const e=()=>new o;class o{}const h=new WeakMap,l=s(class extends i{render(i){return t}update(i,[s]){var h;const l=s!==this.G;return l&&void 0!==this.G&&this.ot(void 0),(l||this.rt!==this.lt)&&(this.G=s,this.ct=null===(h=i.options)||void 0===h?void 0:h.host,this.ot(this.lt=i.element)),t}ot(t){var i;if("function"==typeof this.G){const s=null!==(i=this.ct)&&void 0!==i?i:globalThis;let l=h.get(s);void 0===l&&(l=new WeakMap,h.set(s,l)),void 0!==l.get(this.G)&&this.G.call(this.ct,void 0),l.set(this.G,t),void 0!==t&&this.G.call(this.ct,t)}else this.G.value=t}get rt(){var t,i,s;return"function"==typeof this.G?null===(i=h.get(null!==(t=this.ct)&&void 0!==t?t:globalThis))||void 0===i?void 0:i.get(this.G):null===(s=this.G)||void 0===s?void 0:s.value}disconnected(){this.rt===this.lt&&this.ot(void 0)}reconnected(){this.ot(this.lt)}});export{e as createRef,l as ref};
=======
 */const e=()=>new h;class h{}const o=new WeakMap,c=s(class extends i{render(i){return t}update(i,[s]){const o=s!==this.G;return o&&void 0!==this.G&&this.ot(void 0),(o||this.rt!==this.lt)&&(this.G=s,this.ct=i.options?.host,this.ot(this.lt=i.element)),t}ot(t){if("function"==typeof this.G){const i=this.ct??globalThis;let s=o.get(i);void 0===s&&(s=new WeakMap,o.set(i,s)),void 0!==s.get(this.G)&&this.G.call(this.ct,void 0),s.set(this.G,t),void 0!==t&&this.G.call(this.ct,t)}else this.G.value=t}get rt(){return"function"==typeof this.G?o.get(this.ct??globalThis)?.get(this.G):this.G?.value}disconnected(){this.rt===this.lt&&this.ot(void 0)}reconnected(){this.ot(this.lt)}});export{e as createRef,c as ref};
>>>>>>> Stashed changes
