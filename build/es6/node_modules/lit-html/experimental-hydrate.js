import{noChange as e,_$LH as t}from"./lit-html.js";import{PartType as r}from"./directive.js";import{isPrimitive as n,isTemplateResult as a,isSingleExpression as o}from"./directive-helpers.js";
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const{R:i,D:l,V:s,I:d,F:c}=t,f=(e,t,r={})=>{if(void 0!==t._$litPart$)throw Error("container already contains a live render");let n,a;const o=[],i=document.createTreeWalker(t,NodeFilter.SHOW_COMMENT,null,!1);let l;for(;null!==(l=i.nextNode());){const t=l.data;if(t.startsWith("lit-part")){if(0===o.length&&void 0!==n)throw Error("there must be only one root part per container");a=p(e,l,o,r),null!=n||(n=a)}else if(t.startsWith("lit-node"))h(l,o,r);else if(t.startsWith("/lit-part")){if(1===o.length&&a!==n)throw Error("internal error");a=u(l,a,o)}}console.assert(void 0!==n,"there should be exactly one root part in a render container"),t._$litPart$=n},p=(t,r,o,c)=>{let y,v;if(0===o.length)v=new d(r,null,void 0,c),y=t;else{const e=o[o.length-1];if("template-instance"===e.type)v=new d(r,null,e.instance,c),e.instance.u.push(v),y=e.result.values[e.instancePartIndex++],e.templatePartIndex++;else if("iterable"===e.type){v=new d(r,null,e.part,c);const t=e.iterator.next();if(t.done)throw y=void 0,e.done=!0,Error("Unhandled shorter than expected iterable");y=t.value,e.part._$AH.push(v)}else v=new d(r,null,e.part,c)}if(y=s(v,y),y===e)o.push({part:v,type:"leaf"});else if(n(y))o.push({part:v,type:"leaf"}),v._$AH=y;else if(a(y)){const e="lit-part "+m(y);if(r.data!==e)throw Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");{const e=d.prototype._$AC(y),t=new i(e,v);o.push({type:"template-instance",instance:t,part:v,templatePartIndex:0,instancePartIndex:0,result:y}),v._$AH=t}}else l(y)?(o.push({part:v,type:"iterable",value:y,iterator:y[Symbol.iterator](),done:!1}),v._$AH=[]):(o.push({part:v,type:"leaf"}),v._$AH=null==y?"":y);return v},u=(e,t,r)=>{if(void 0===t)throw Error("unbalanced part marker");t._$AB=e;const n=r.pop();if("iterable"===n.type&&!n.iterator.next().done)throw Error("unexpected longer than expected iterable");if(r.length>0)return r[r.length-1].part},h=(e,t,n)=>{var a;const i=/lit-node (\d+)/.exec(e.data),l=parseInt(i[1]),d=null!==(a=e.previousElementSibling)&&void 0!==a?a:e.parentElement;if(null===d)throw Error("could not find node for attribute parts");d.removeAttribute("defer-hydration");const y=t[t.length-1];if("template-instance"!==y.type)throw Error("internal error");{const e=y.instance;for(;;){const t=e._$AD.parts[y.templatePartIndex];if(void 0===t||t.type!==r.ATTRIBUTE&&t.type!==r.ELEMENT||t.index!==l)break;if(t.type===r.ATTRIBUTE){const a=new t.ctor(d,t.name,t.strings,y.instance,n),i=o(a)?y.result.values[y.instancePartIndex]:y.result.values,l=!(a.type===r.EVENT||a.type===r.PROPERTY);a._$AI(i,a,y.instancePartIndex,l),y.instancePartIndex+=t.strings.length-1,e.u.push(a)}else{const t=new c(d,y.instance,n);s(t,y.result.values[y.instancePartIndex++]),e.u.push(t)}y.templatePartIndex++}}},m=e=>{const t=new Uint32Array(2).fill(5381);for(const r of e.strings)for(let e=0;e<r.length;e++)t[e%2]=33*t[e%2]^r.charCodeAt(e);const r=String.fromCharCode(...new Uint8Array(t.buffer));return btoa(r)};export{m as digestForTemplateResult,f as hydrate};