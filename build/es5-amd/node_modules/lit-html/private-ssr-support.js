define(["exports", "./lit-html.js"], function (_exports, _litHtml) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports._$LH = void 0;
  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }
  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  /**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var r = {
    boundAttributeSuffix: _litHtml._$LH.O,
    marker: _litHtml._$LH.P,
    markerMatch: _litHtml._$LH.A,
    HTML_RESULT: _litHtml._$LH.C,
    getTemplateHtml: _litHtml._$LH.M,
    overrideDirectiveResolve: function overrideDirectiveResolve(e, t) {
      return /*#__PURE__*/function (_e) {
        babelHelpers.inherits(_class, _e);
        var _super = _createSuper(_class);
        function _class() {
          babelHelpers.classCallCheck(this, _class);
          return _super.apply(this, arguments);
        }
        babelHelpers.createClass(_class, [{
          key: "_$AS",
          value: function _$AS(e, r) {
            return t(this, r);
          }
        }]);
        return _class;
      }(e);
    },
    setDirectiveClass: function setDirectiveClass(e, t) {
      e._$litDirective$ = t;
    },
    getAttributePartCommittedValue: function getAttributePartCommittedValue(e, r, a) {
      var i = _litHtml.noChange;
      return e.j = function (e) {
        return i = e;
      }, e._$AI(r, e, a), i;
    },
    connectedDisconnectable: function connectedDisconnectable(e) {
      return _objectSpread(_objectSpread({}, e), {}, {
        _$AU: !0
      });
    },
    resolveDirective: _litHtml._$LH.R,
    AttributePart: _litHtml._$LH.V,
    PropertyPart: _litHtml._$LH.U,
    BooleanAttributePart: _litHtml._$LH.H,
    EventPart: _litHtml._$LH.N,
    ElementPart: _litHtml._$LH.F,
    TemplateInstance: _litHtml._$LH.L,
    isIterable: _litHtml._$LH.D,
    ChildPart: _litHtml._$LH.I
  };
  _exports._$LH = r;
});