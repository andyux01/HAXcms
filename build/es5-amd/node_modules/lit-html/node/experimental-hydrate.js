define(["exports", "../../../buffer", "./lit-html.js", "./directive.js", "./directive-helpers.js"], function (_exports, _buffer, _litHtml, _directive, _directiveHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hydrate = _exports.digestForTemplateResult = void 0;
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e7) { throw _e7; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e8) { didErr = true; err = _e8; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
  var l = _litHtml._$LH.L,
    s = _litHtml._$LH.D,
    c = _litHtml._$LH.R,
    d = _litHtml._$LH.I,
    f = _litHtml._$LH.F,
    p = function p(e, t) {
      var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (console.warn("Importing `hydrate()` from `lit-html/experimental-hydrate.js` is deprecated.Import from `@lit-labs/ssr-client` instead."), void 0 !== t._$litPart$) throw Error("container already contains a live render");
      var n, o, a;
      var i = [],
        l = document.createTreeWalker(t, NodeFilter.SHOW_COMMENT, null, !1);
      var s;
      for (; null !== (s = l.nextNode());) {
        var _t = s.data;
        if (_t.startsWith("lit-part")) {
          if (0 === i.length && void 0 !== n) throw Error("There must be only one root part per container. Found a part marker (".concat(s, ") when we already have a root part marker (").concat(o, ")"));
          a = m(e, s, i, r), null != n || (n = a), null != o || (o = s);
        } else if (_t.startsWith("lit-node")) u(s, i, r);else if (_t.startsWith("/lit-part")) {
          if (1 === i.length && a !== n) throw Error("internal error");
          a = h(s, a, i);
        }
      }
      if (void 0 === n) {
        var _e = babelHelpers.instanceof(t, ShadowRoot) ? "{container.host.localName}'s shadow root" : babelHelpers.instanceof(t, DocumentFragment) ? "DocumentFragment" : t.localName;
        console.error("There should be exactly one root part in a render container, but we didn't find any in ".concat(_e, "."));
      }
      t._$litPart$ = n;
    },
    m = function m(e, r, n, i) {
      var f, p;
      if (0 === n.length) p = new d(r, null, void 0, i), f = e;else {
        var _e2 = n[n.length - 1];
        if ("template-instance" === _e2.type) p = new d(r, null, _e2.instance, i), _e2.instance._$AV.push(p), f = _e2.result.values[_e2.instancePartIndex++], _e2.templatePartIndex++;else if ("iterable" === _e2.type) {
          p = new d(r, null, _e2.part, i);
          var _t2 = _e2.iterator.next();
          if (_t2.done) throw f = void 0, _e2.done = !0, Error("Unhandled shorter than expected iterable");
          f = _t2.value, _e2.part._$AH.push(p);
        } else p = new d(r, null, _e2.part, i);
      }
      if (f = c(p, f), f === _litHtml.noChange) n.push({
        part: p,
        type: "leaf"
      });else if ((0, _directiveHelpers.isPrimitive)(f)) n.push({
        part: p,
        type: "leaf"
      }), p._$AH = f;else if ((0, _directiveHelpers.isTemplateResult)(f)) {
        var _e3 = "lit-part " + w(f);
        if (r.data !== _e3) throw Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");
        {
          var _e4 = d.prototype._$AC(f),
            _t3 = new l(_e4, p);
          n.push({
            type: "template-instance",
            instance: _t3,
            part: p,
            templatePartIndex: 0,
            instancePartIndex: 0,
            result: f
          }), p._$AH = _t3;
        }
      } else s(f) ? (n.push({
        part: p,
        type: "iterable",
        value: f,
        iterator: f[Symbol.iterator](),
        done: !1
      }), p._$AH = []) : (n.push({
        part: p,
        type: "leaf"
      }), p._$AH = null == f ? "" : f);
      return p;
    },
    h = function h(e, t, r) {
      if (void 0 === t) throw Error("unbalanced part marker");
      t._$AB = e;
      var n = r.pop();
      if ("iterable" === n.type && !n.iterator.next().done) throw Error("unexpected longer than expected iterable");
      if (r.length > 0) return r[r.length - 1].part;
    },
    u = function u(e, t, r) {
      var o = /lit-node (\d+)/.exec(e.data),
        a = parseInt(o[1]),
        l = e.nextElementSibling;
      if (null === l) throw Error("could not find node for attribute parts");
      l.removeAttribute("defer-hydration");
      var s = t[t.length - 1];
      if ("template-instance" !== s.type) throw Error("internal error");
      {
        var _e5 = s.instance;
        for (;;) {
          var _t4 = _e5._$AD.parts[s.templatePartIndex];
          if (void 0 === _t4 || _t4.type !== _directive.PartType.ATTRIBUTE && _t4.type !== _directive.PartType.ELEMENT || _t4.index !== a) break;
          if (_t4.type === _directive.PartType.ATTRIBUTE) {
            var _o = new _t4.ctor(l, _t4.name, _t4.strings, s.instance, r),
              _a = (0, _directiveHelpers.isSingleExpression)(_o) ? s.result.values[s.instancePartIndex] : s.result.values,
              _c = !(_o.type === _directive.PartType.EVENT || _o.type === _directive.PartType.PROPERTY);
            _o._$AI(_a, _o, s.instancePartIndex, _c), s.instancePartIndex += _t4.strings.length - 1, _e5._$AV.push(_o);
          } else {
            var _t5 = new f(l, s.instance, r);
            c(_t5, s.result.values[s.instancePartIndex++]), _e5._$AV.push(_t5);
          }
          s.templatePartIndex++;
        }
      }
    },
    w = function w(t) {
      var r = new Uint32Array(2).fill(5381);
      var _iterator = _createForOfIteratorHelper(t.strings),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _e6 = _step.value;
          for (var _t6 = 0; _t6 < _e6.length; _t6++) r[_t6 % 2] = 33 * r[_t6 % 2] ^ _e6.charCodeAt(_t6);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var n = String.fromCharCode.apply(String, babelHelpers.toConsumableArray(new Uint8Array(r.buffer)));
      return _buffer.Buffer.from(n, "binary").toString("base64");
    };
  _exports.digestForTemplateResult = w;
  _exports.hydrate = p;
});