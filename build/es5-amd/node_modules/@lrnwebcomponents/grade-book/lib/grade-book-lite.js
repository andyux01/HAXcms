define(["exports", "meta", "../../../lit/index.js", "../../simple-colors/simple-colors.js", "../../i18n-manager/lib/I18NMixin.js", "../../utils/lib/gSheetsInterface.js", "../../utils/utils.js", "../../simple-icon/lib/simple-icon-button-lite.js", "../../simple-icon/lib/simple-icons.js", "../../hax-iconset/lib/simple-hax-iconset.js", "../../simple-icon/simple-icon.js", "../../simple-fields/lib/simple-fields-field.js", "../../simple-fields/lib/simple-fields-tag-list.js", "../../a11y-collapse/a11y-collapse.js", "../../a11y-collapse/lib/a11y-collapse-group.js", "../../editable-table/lib/editable-table-display.js", "../../a11y-tabs/a11y-tabs.js", "../../a11y-tabs/lib/a11y-tab.js", "../../grid-plate/grid-plate.js", "../../iframe-loader/lib/loading-indicator.js", "../../../@github/time-elements/dist/index.js", "../../../mobx/dist/mobx.esm.js", "../../../idb-keyval/dist/compat.js", "../../file-system-broker/lib/xlsx-file-system-broker.js", "../../simple-filter/simple-filter.js", "../../micro-frontend-registry/micro-frontend-registry.js", "../../micro-frontend-registry/lib/microServices.js", "./GradeBookUIPieces.js", "./grade-book-store.js", "./grade-book-pop-up.js", "./letter-grade.js", "./letter-grade-picker.js"], function (_exports, meta, _index, _simpleColors, _I18NMixin, _gSheetsInterface, _utils, _simpleIconButtonLite, _simpleIcons, _simpleHaxIconset, _simpleIcon, _simpleFieldsField, _simpleFieldsTagList, _a11yCollapse, _a11yCollapseGroup, _editableTableDisplay, _a11yTabs, _a11yTab, _gridPlate, _loadingIndicator, _index2, _mobxEsm, _compat, _xlsxFileSystemBroker, _simpleFilter, _microFrontendRegistry, _microServices, _GradeBookUIPieces, _gradeBookStore, _gradeBookPopUp, _letterGrade, _letterGradePicker) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GradeBookLite = void 0;
  meta = _interopRequireWildcard(meta);
  var _templateObject_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject2_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject3_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject4_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject5_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject6_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject7_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject8_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject9_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject10_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject11_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject12_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject13_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject14_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject15_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject16_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject17_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject18_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject19_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject20_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject21_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject22_f84fb5c0e4f411ed85766367b4d3e9fc, _templateObject23_f84fb5c0e4f411ed85766367b4d3e9fc;
  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && babelHelpers.instanceof(outerFn.prototype, Generator) ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers.typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }
  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  /**
   * `grade-book`
   * `A headless gradebook that supports multiple backends with rubrics`
   * @demo demo/index.html Grade book
   * @element grade-book
   */
  var GradeBookLite = /*#__PURE__*/function (_UIRenderPieces) {
    babelHelpers.inherits(GradeBookLite, _UIRenderPieces);
    var _super = _createSuper(GradeBookLite);
    function GradeBookLite() {
      var _this;
      babelHelpers.classCallCheck(this, GradeBookLite);
      _this = _super.call(this);
      _this.__pdfLoading = false;
      _this.__hashLoading = false;
      (0, _microServices.enableServices)(["core"]);
      _this.where = "term";
      _this.hasFilePicker = false;
      _this.source = "googledocs";
      if (window.showOpenFilePicker) {
        _this.source = "filesystem";
        _this.hasFilePicker = true;
      }
      _this.ready = false;
      // 0,1 - column splits for 3 column
      // 2 - renders in a new popped up window
      _this.displayMode = 0;
      // storing internals of the assessmentView tab
      _this.assessmentView = _this.resetAssessmentView();
      _this.totalScore = 0;
      // student submission status for rendering
      _this.activeStudentSubmissions = [];
      // lock on score override
      _this.scoreLock = true;
      // active rubric data
      _this.activeRubric = [];
      // the active grade sheet
      _this.activeGrading = {};
      _this.disabled = false;
      // shows progress indicator as it loads
      _this.loading = false;
      // translatable text
      _this.t = {
        generateHashLink: "Generate hash link",
        generatingPleaseWait: "Generating please wait..",
        downloadingPdfPleaseWait: "Downloading PDF please wait..",
        downloadPdf: "Download PDF",
        csvURL: "CSV URL",
        points: "Points",
        criteria: "Criteria",
        description: "Description",
        assessmentWeight: "Assessment weight",
        overallFeedback: "Overall feedback",
        letterGrade: "Letter grade",
        highRange: "High range",
        lowRange: "Low range",
        noSubmission: "No submission found",
        studentSubmission: "Student submission",
        openInNewWindow: "Open in new window",
        gradingScale: "Grading scale",
        activeStudent: "Active student",
        activeAssignment: "Active assignment",
        submitted: "Submitted",
        dueDate: "Due date",
        firstName: "First name",
        surname: "Surname",
        photo: "Photo",
        email: "Email",
        previous: "Previous",
        next: "Next",
        previousStudent: "Previous student",
        nextStudent: "Next student",
        previousAssignment: "Previous assignment",
        nextAssignment: "Next assignment",
        student: "Student",
        assessmentView: "Assessment View",
        activeAssessment: "Active assessment",
        studentReportView: "Student report view",
        loadGradebook: "Load gradebook",
        load: "Load",
        saveGradebook: "Save gradebook",
        selectGradebookSource: "Select gradebook source",
        sourceData: "Source data",
        pasteValidJSONHere: "Paste valid JSON here",
        loadingFilePleaseWait: "LOADING FILE PLEASE WAIT.."
      };
      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        basePath: meta.url,
        locales: ["es", "fr", "de"]
      });
      // notice that a category on the active grading area responded that it changed
      _this.addEventListener("simple-fields-tag-list-changed", _this.qualitativeFeedbackUpdate.bind(babelHelpers.assertThisInitialized(_this)));
      // value change within the rubric area
      _this.addEventListener("value-changed", _this.rubricCriteriaPointsChange);
      // drop event to remove the styling from droppable areas
      _this.addEventListener("drop", _this._handleDragDrop.bind(babelHelpers.assertThisInitialized(_this)));
      (0, _mobxEsm.autorun)(function () {
        _this.activeStudent = (0, _mobxEsm.toJS)(_gradeBookStore.GradeBookStore.activeStudent);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.activeAssignment = (0, _mobxEsm.toJS)(_gradeBookStore.GradeBookStore.activeAssignment);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.database = (0, _mobxEsm.toJS)(_gradeBookStore.GradeBookStore.database);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.activeSubmission = (0, _mobxEsm.toJS)(_gradeBookStore.GradeBookStore.activeSubmission);
      });
      return _this;
    }
    babelHelpers.createClass(GradeBookLite, [{
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;
        if (babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite.prototype), "firstUpdated", this).call(this, changedProperties);
        }
        var resizeObserver = new ResizeObserver(function (entries) {
          clearTimeout(_this2.__resizer);
          _this2.__resizer = setTimeout(function () {
            var pixels = 0;
            var _iterator = _createForOfIteratorHelper(entries),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var entry = _step.value;
                if (entry.contentBoxSize) {
                  pixels = Math.round(window.innerHeight - entry.contentBoxSize[0].blockSize - 122);
                } else {
                  pixels = Math.round(window.innerHeight - entry.contentRect.height - 122);
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            _this2.shadowRoot.querySelector("#studentassessment").shadowRoot.querySelector("[part='content']").style.height = pixels + "px";
          }, 50);
        });
        // see if we have a previous file reference
        setTimeout( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return (0, _compat.get)("grade-book-prev-file");
              case 2:
                _this2.prevLocalFileReference = _context.sent;
                _this2.requestUpdate();
              case 4:
              case "end":
                return _context.stop();
            }
          }, _callee);
        })), 0);
      }
    }, {
      key: "resetAssessmentView",
      value: function resetAssessmentView() {
        return {
          qualitative: [],
          written: []
        };
      }
      /**
       * Return an object representing all scores on all assignments
       * which allows us to make a visual of all submissions this student
       * has had.
       */
    }, {
      key: "getStudentSubmissions",
      value: function getStudentSubmissions(activeStudent) {
        var response = [];
        for (var i in this.database.submissions) {
          var row = this.database.submissions[i];
          // look for student, need a match before we render anything
          if (row.student === this.database.roster[activeStudent].student) {
            for (var j in row) {
              if (j !== "student") {
                var a = this.getAssignmentByShortName(j);
                if (a) {
                  response.push({
                    studentScore: !this.database.grades[activeStudent] || this.database.grades[activeStudent][j] == "" ? null : this.database.grades[activeStudent][j],
                    assignmentPoints: a.points,
                    assignmentName: a.name,
                    assignmentIndex: a.index
                  });
                }
              }
            }
            return response;
          }
        }
        return response;
      }
    }, {
      key: "getAssignmentByShortName",
      value: function getAssignmentByShortName(name) {
        var index;
        var item = this.database.assignments.filter(function (i, ind) {
          if (i.shortName === name) {
            index = ind;
            return true;
          }
          return false;
        });
        if (item.length === 1) {
          item[0].index = index;
          return item[0];
        }
        return null;
      }
      // generate current score based on student / assignment cross-section
    }, {
      key: "getCurrentScore",
      value: function getCurrentScore(activeStudent, activeAssignment) {
        // see if there's a score set in the grades setup
        if (this.database.grades[activeStudent] && this.database.grades[activeStudent][this.database.assignments[activeAssignment].shortName]) {
          return this.database.grades[activeStudent][this.database.assignments[activeAssignment].shortName];
        }
        return 0;
      }
      // return the active rurbic based on active assignment
    }, {
      key: "getActiveRubric",
      value: function getActiveRubric() {
        var _this3 = this;
        return this.database.rubrics.filter(function (item) {
          return item.shortName == _this3.database.assignments[_this3.activeAssignment].rubric;
        });
      }
      /**
       * LitElement life cycle for property change notification
       */
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this4 = this;
        if (babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite.prototype), "updated", this).call(this, changedProperties);
        }
        changedProperties.forEach(function (oldValue, propName) {
          // set rubric based on assignment
          if (!_this4.loading && ["activeAssignment", "activeStudent", "database", "loading"].includes(propName)) {
            setTimeout(function () {
              // this will defer to whatever the "grades" db value is
              _this4.totalScore = _this4.getCurrentScore(_this4.activeStudent, _this4.activeAssignment);
              _this4.assessmentView = _this4.resetAssessmentView();
              _this4.activeRubric = babelHelpers.toConsumableArray(_this4.getActiveRubric());
              _this4.hideRubricInfo = babelHelpers.toConsumableArray(_this4.activeRubric.map(function () {
                return false;
              }));
              _this4.activeStudentSubmissions = [];
              _this4.activeStudentSubmissions = babelHelpers.toConsumableArray(_this4.getStudentSubmissions(_this4.activeStudent));
              if (_this4.database.tags && _this4.database.tags.data) {
                _this4.items = _this4.database.tags.data;
              }
            }, 0);
          }
          // source will have to fetch ALL the pages and slowly load data as it rolls through
          if (["sourceData", "source"].includes(propName)) {
            if (_this4.sourceData) {
              switch (_this4.source) {
                case "googledocs":
                  _this4.loading = true;
                  // gid from the google sheet. technically if you add / remove sheets this would
                  // have to be updated to match
                  _this4.gSheet = new _gSheetsInterface.gSheetInterface(_this4, _this4.sourceData, {
                    tags: 0,
                    roster: 118800528,
                    assignments: 540222065,
                    rubrics: 1744429439,
                    submissions: 2104732668,
                    gradeScale: 980501320,
                    grades: 2130903440,
                    gradesDetails: 644559151,
                    settings: 1413275461
                  });
                  setTimeout( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
                    var i, loadedData;
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                      while (1) switch (_context2.prev = _context2.next) {
                        case 0:
                          _context2.t0 = _regeneratorRuntime().keys(_this4.gSheet.sheetGids);
                        case 1:
                          if ((_context2.t1 = _context2.t0()).done) {
                            _context2.next = 13;
                            break;
                          }
                          i = _context2.t1.value;
                          _context2.next = 5;
                          return _this4.gSheet.loadSheetData(i);
                        case 5:
                          loadedData = _context2.sent;
                          loadedData = _this4.transformTable(loadedData);
                          if (typeof _this4["process".concat(i, "Data")] === "function") {
                            loadedData = _this4["process".concat(i, "Data")](loadedData);
                          }
                          _this4.database[i] = loadedData;
                          if (i === "gradeScale" && _this4.database.gradeScale && _this4.database.gradeScale.length > 0) {
                            _gradeBookStore.GradeBookStore.gradeScale = _this4.database.gradeScale;
                          }
                          _this4.requestUpdate();
                          _context2.next = 1;
                          break;
                        case 13:
                          _this4.importStateCleanup();
                        case 14:
                        case "end":
                          return _context2.stop();
                      }
                    }, _callee2);
                  })), 0);
                  break;
                case "url":
                  _this4.loading = true;
                  fetch(_this4.sourceData).then(function (response) {
                    if (response.ok) {
                      return response.json();
                    }
                  }).then(function (json) {
                    _gradeBookStore.GradeBookStore.database = json;
                    _this4.importStateCleanup();
                  }).catch(function (error) {
                    console.warn(error);
                  });
                  break;
                case "json":
                  _gradeBookStore.GradeBookStore.database = JSON.parse(_this4.sourceData);
                  _this4.importStateCleanup();
                  break;
              }
            } else if (_this4.source == "filesystem") {
              if (!_this4.__applied) {
                _this4.__applied = true;
                // this listener gets the event from the service worker
                window.addEventListener("xlsx-file-system-data", function (e) {
                  var database = e.detail.data;
                  for (var i in database) {
                    var loadedData = _this4.transformTable(database[i]);
                    if (typeof _this4["process".concat(i, "Data")] === "function") {
                      loadedData = _this4["process".concat(i, "Data")](loadedData);
                    }
                    _gradeBookStore.GradeBookStore.database[i] = loadedData;
                  }
                  _this4.importStateCleanup();
                });
              }
            }
          }
        });
      }
    }, {
      key: "importStateCleanup",
      value: function importStateCleanup() {
        this.loading = false;
        if (this.database.gradeScale && this.database.gradeScale.length > 0) {
          _gradeBookStore.GradeBookStore.gradeScale = this.database.gradeScale;
        }
        this.requestUpdate();
        this.ready = true;
      }
    }, {
      key: "transformTable",
      value: function transformTable(table) {
        var tmp = table.shift();
        var headings = {};
        var data = [];
        for (var i in tmp) {
          headings[tmp[i]] = i;
        }
        for (var i in table) {
          var item = {};
          for (var j in headings) {
            item[j] = table[i][headings[j]];
          }
          // push data onto the database of all data we have now as objects
          data.push(item);
        }
        // allow for deeper processing on the data or just return the data found
        return data;
      }
      /**
       * process assignment data to normalize date string
       */
    }, {
      key: "processassignmentsData",
      value: function processassignmentsData(data) {
        for (var i in data) {
          if (data[i].dueDate != "") {
            try {
              var event = new Date("".concat(data[i].dueDate, " ").concat(data[i].dueTime));
              data[i]._ISODueDate = event.toISOString();
            } catch (e) {}
          }
        }
        return data;
      }
      /**
       * Process our tagging structure for use in the rubric
       * Tag structure allows the instructor to drag and drop elements into
       * qualitative areas of a rubric
       */
    }, {
      key: "processtagsData",
      value: function processtagsData(data) {
        var categories = new Set([]);
        var rCategories = [];
        // these must all exist as keys for us to proceed
        for (var i in data) {
          data[i].category = data[i].category ? data[i].category.split(",") : [];
          data[i].associatedMaterial = data[i].associatedMaterial ? data[i].associatedMaterial.split(",") : [];
          // trick to dedup the categories using a Set
          data[i].category.forEach(function (item) {
            categories.add(item);
          });
          // convert Set to Array for data visualization purposes
          rCategories = babelHelpers.toConsumableArray(Array.from(categories));
        }
        return {
          categories: rCategories,
          data: data
        };
      }
    }, {
      key: "processrubricsData",
      value: function processrubricsData(data) {
        for (var i in data) {
          data[i].qualitative = data[i].qualitative ? data[i].qualitative.split(",") : [];
        }
        return data;
      }
    }, {
      key: "processrosterData",
      value: function processrosterData(data) {
        for (var i in data) {
          data[i].interests = data[i].interests ? data[i].interests.split(",") : [];
        }
        return data;
      }
    }, {
      key: "processsettingsData",
      value: function processsettingsData(data) {
        var d = {};
        for (var i in data) {
          d[data[i].key] = data[i].value;
        }
        return d;
      }
    }, {
      key: "changeAssignment",
      value: function () {
        var _changeAssignment = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
          return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                // have to possibly resolve UI click handler of span vs the button
                if (e.target.getAttribute("value") == "prev" && 0 !== this.activeAssignment) {
                  _gradeBookStore.GradeBookStore.activeAssignment--;
                } else if (e.target.getAttribute("value") == "next" && this.database.assignments.length - 1 !== _gradeBookStore.GradeBookStore.activeAssignment) {
                  _gradeBookStore.GradeBookStore.activeAssignment++;
                }
                _context3.next = 3;
                return this.requestUpdate();
              case 3:
              case "end":
                return _context3.stop();
            }
          }, _callee3, this);
        }));
        function changeAssignment(_x) {
          return _changeAssignment.apply(this, arguments);
        }
        return changeAssignment;
      }()
    }, {
      key: "studentLetterGradeHistoryClick",
      value: function studentLetterGradeHistoryClick(e) {
        // ensure this is numeric
        _gradeBookStore.GradeBookStore.activeAssignment = parseInt(e.target.value);
        this.requestUpdate();
      }
    }, {
      key: "activateOption",
      value: function activateOption(e) {
        var target = (0, _utils.normalizeEventPath)(e);
        if (target[0].getAttribute("data-student") && target[0].getAttribute("data-assignment")) {
          _gradeBookStore.GradeBookStore.activeAssignment = parseInt(target[0].getAttribute("data-assignment"));
          _gradeBookStore.GradeBookStore.activeStudent = parseInt(target[0].getAttribute("data-student"));
        }
      }
    }, {
      key: "handleGridScaling",
      value: function handleGridScaling(e) {
        var paths = (0, _utils.normalizeEventPath)(e);
        if (paths[0].tagName === "TABLE") {
          // toggle between height
          if (paths[0].style.height != "") {
            paths[0].style.height = null;
          } else {
            paths[0].style.height = "90vh";
          }
        }
      }
    }, {
      key: "PDFPageButton",
      value: function PDFPageButton() {
        var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "auto";
        return (0, _index.html)(_templateObject_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n      ", "\n      <div class=\"hash-page-btn\">\n        <simple-icon-button-lite\n          part=\"hash-page-btn\"\n          class=\"btn\"\n          icon=\"", "\"\n          id=\"hash-page-btn\"\n          @click=\"", "\"\n          icon-position=\"top\"\n        >\n        </simple-icon-button-lite>\n        <simple-tooltip for=\"pdf-page-btn\" position=\"", "\">\n          ", "\n        </simple-tooltip>\n      </div>\n    "])), _microFrontendRegistry.MicroFrontendRegistry.has("@core/htmlToPdf") ? (0, _index.html)(_templateObject2_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject2_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral([" <div class=\"pdf-page-btn\">\n            <simple-icon-button-lite\n              part=\"pdf-page-btn\"\n              class=\"btn\"\n              icon=\"", "\"\n              id=\"pdf-page-btn\"\n              @click=\"", "\"\n              icon-position=\"top\"\n            >\n            </simple-icon-button-lite>\n            <simple-tooltip for=\"pdf-page-btn\" position=\"", "\">\n              ", "\n            </simple-tooltip>\n          </div>"])), this.__pdfLoading ? "hax:loading" : "lrn:pdf", this.downloadPDFviaMicro, position, this.__pdfLoading ? this.t.downloadingPdfPleaseWait : this.t.downloadPdf) : "", this.__hashLoading ? "hax:loading" : "link", this.createHashLink, position, this.__hashLoading ? this.t.generatingPleaseWait : this.t.generateHashLink);
      }
      /**
       * Download PDF, via microservice
       */
    }, {
      key: "downloadPDFviaMicro",
      value: function () {
        var _downloadPDFviaMicro = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {
          var htmlContent, base, response, link;
          return _regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1) switch (_context4.prev = _context4.next) {
              case 0:
                this.__pdfLoading = true;
                // active dom, but remove the Lit comments from response
                htmlContent = this.shadowRoot.querySelector("#studentreport").innerHTML.replace(/<\!--.*?-->/g, "").replace(/\s+/g, " ").trim(); // base helps w/ calculating URLs in content
                base = "";
                if (document.querySelector("base")) {
                  base = document.querySelector("base").href;
                }
                _context4.next = 6;
                return _microFrontendRegistry.MicroFrontendRegistry.call("@core/htmlToPdf", {
                  base: base,
                  html: htmlContent
                });
              case 6:
                response = _context4.sent;
                if (response.status == 200 && response.data) {
                  link = document.createElement("a"); // click link to download file
                  // @todo this downloads but claims to be corrupt.
                  link.href = window.URL.createObjectURL((0, _utils.b64toBlob)(response.data, "application/pdf"));
                  link.download = "StudentReport.pdf";
                  link.target = "_blank";
                  this.appendChild(link);
                  link.click();
                  this.removeChild(link);
                }
                this.__pdfLoading = false;
              case 9:
              case "end":
                return _context4.stop();
            }
          }, _callee4, this);
        }));
        function downloadPDFviaMicro(_x2) {
          return _downloadPDFviaMicro.apply(this, arguments);
        }
        return downloadPDFviaMicro;
      }()
      /**
       * Download PDF, via microservice
       */
    }, {
      key: "createHashLink",
      value: function () {
        var _createHashLink = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
          var htmlContent, response;
          return _regeneratorRuntime().wrap(function _callee5$(_context5) {
            while (1) switch (_context5.prev = _context5.next) {
              case 0:
                this.__hashLoading = true;
                // active dom, but remove the Lit comments from response
                htmlContent = this.shadowRoot.querySelector("#studentreport").innerHTML.replace(/<\!--.*?-->/g, "").replace(/\s+/g, " ").trim();
                _context5.next = 4;
                return _microFrontendRegistry.MicroFrontendRegistry.call("@core/crypto", {
                  op: "hash",
                  data: htmlContent
                });
              case 4:
                response = _context5.sent;
                if (response.status == 200 && response.data) {
                  window.open("https://secure-feedback.vercel.app/?message=".concat(response.data), "_blank");
                }
                this.__hashLoading = false;
              case 7:
              case "end":
                return _context5.stop();
            }
          }, _callee5, this);
        }));
        function createHashLink(_x3) {
          return _createHashLink.apply(this, arguments);
        }
        return createHashLink;
      }() // open extra window and then render content
    }, {
      key: "openWindow",
      value: function openWindow(e) {
        var _this5 = this;
        if (this.__openWindow && !this.__openWindow.closed) {
          this.__openWindow.focus();
        } else {
          this.__openWindow = window.open("", "studentwork", "left=0,top=0,width=".concat(screen.width / 2, ",height=").concat(screen.height / 2, ",menubar=0,location=0,toolbar=0,status=0"));
          this.__openWindow.onbeforeunload = function () {
            _this5.displayMode = 0;
            _this5.__openWindow = null;
          };
        }
      }
      /**
       * LitElement render method
       */
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;
        return (0, _index.html)(_templateObject3_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject3_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n      <loading-indicator full ?loading=\"", "\"></loading-indicator>\n      <div class=\"top-controls\">\n        <div class=\"group divider-right app-name\">\n          <slot name=\"app-name\"></slot>\n        </div>\n        <div class=\"group divider-right\">\n          ", "\n          <simple-icon-button-lite\n            @click=\"", "\"\n            value=\"prev\"\n            title=\"", "\"\n            icon=\"arrow-back\"\n            ?disabled=\"", "\"\n          >\n            <span class=\"hide-900\" value=\"prev\">", "</span>\n          </simple-icon-button-lite>\n          <simple-icon-button-lite\n            @click=\"", "\"\n            value=\"next\"\n            title=\"", "\"\n            ?disabled=\"", "\"\n            icon=\"arrow-forward\"\n          >\n            <span class=\"hide-900\" value=\"next\">", "</span>\n          </simple-icon-button-lite>\n        </div>\n        <div class=\"group\">", "</div>\n        ", "\n      </div>\n      <div ?hidden=\"", "\" class=\"source-selection\">\n        <label>", "..</label>\n        <select id=\"source\" @change=\"", "\">\n          ", "\n          <option\n            value=\"googledocs\"\n            ?selected=\"", "\"\n          >\n            Google docs\n          </option>\n          <option value=\"url\">URL endpoint (JSON)</option>\n          <option value=\"json\">JSON data blob</option>\n        </select>\n        <simple-icon-button-lite\n          @click=\"", "\"\n          title=\"", "\"\n          ?disabled=\"", "\"\n          icon=\"folder-shared\"\n        >\n          <span class=\"hide-900\">", "</span>\n        </simple-icon-button-lite>\n        ", "\n        <input\n          id=\"sourcedata\"\n          placeholder=\"", "\"\n          ?hidden=\"", "\"\n        />\n        <textarea\n          id=\"sourcedatablob\"\n          rows=\"10\"\n          cols=\"40\"\n          placeholder=\"", "\"\n          ?hidden=\"", "\"\n        ></textarea>\n      </div>\n      ", "\n      <a11y-tabs\n        id=\"studentassessment\"\n        full-width\n        @a11y-tabs-active-changed=\"", "\"\n        ?hidden=\"", "\"\n      >\n        <a11y-tab\n          id=\"assessment\"\n          icon=\"assignment-ind\"\n          label=\"", "\"\n        >\n          ", "\n        </a11y-tab>\n        <a11y-tab\n          id=\"studentreporttab\"\n          icon=\"assignment\"\n          label=\"", "\"\n        >\n          <div id=\"studentreport\">\n            ", "\n          </div>\n        </a11y-tab>\n      </a11y-tabs>\n    "])), this.loading, this.renderActiveAssignmentBtn(), this.changeAssignment, this.t.previousAssignment, 0 === this.activeAssignment || !this.ready, this.t.previous, this.changeAssignment, this.t.nextAssignment, this.database.assignments.length - 1 === this.activeAssignment || !this.ready, this.t.next, this.renderGradeScaleBtn(), this.ready && this.source === "filesystem" && this.sourceData ? (0, _index.html)(_templateObject4_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject4_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n              <div class=\"group\">\n                <simple-icon-button-lite\n                  @click=\"", "\"\n                  title=\"", "\"\n                  ?disabled=\"", "\"\n                  icon=\"save\"\n                >\n                  <span class=\"hide-900\">", "</span>\n                </simple-icon-button-lite>\n              </div>\n            "])), this.saveToFilesystem, this.t.saveGradebook, !this.sourceData, this.t.saveGradebook) : _index.nothing, this.sourceData, this.t.selectGradebookSource, this.selectSource, this.hasFilePicker ? (0, _index.html)(_templateObject5_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject5_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["<option\n                value=\"filesystem\"\n                ?selected=\"", "\"\n              >\n                File system\n              </option>"])), this.source === "filesystem") : _index.nothing, this.source === "googledocs", this.loadFromSource, this.t.loadGradebook, this.sourceData, this.t.loadGradebook, this.source == "filesystem" && this.prevLocalFileReference ? (0, _index.html)(_templateObject6_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject6_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n              <simple-icon-button-lite\n                @click=\"", "\"\n                title=\"", "\"\n                ?disabled=\"", "\"\n                icon=\"folder-shared\"\n              >\n                <span class=\"hide-900\"\n                  >", " ", "</span\n                >\n              </simple-icon-button-lite>\n            "])), this.loadFromExistingSource, this.t.loadGradebook, this.sourceData, this.t.load, this.prevLocalFileReference.name) : _index.nothing, this.t.sourceData, !["googledocs", "url"].includes(this.source), this.t.pasteValidJSONHere, this.source != "json", this.source === "filesystem" && this.loading ? (0, _index.html)(_templateObject7_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject7_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["<p class=\"source-selection\">", "</p>"])), this.t.loadingFilePleaseWait) : _index.nothing, this.updateStudentReport, !(this.database.assignments && this.database.assignments[this.activeAssignment]), this.t.activeAssessment, this.activeRubric[0] ? (0, _index.html)(_templateObject8_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject8_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                <grid-plate disable-responsive layout=\"1-1\">\n                  <div slot=\"col-1\" class=\"tag-group\">\n                    <simple-fields-field\n                      id=\"inputfilter\"\n                      @value-changed=\"", "\"\n                      .value=\"", "\"\n                      aria-controls=\"filter\"\n                      label=\"Filter\"\n                      placeholder=\"Tag search\"\n                      type=\"text\"\n                      auto-validate=\"\"\n                      autofocus\n                      part=\"filter\"\n                    ></simple-fields-field>\n                    <simple-icon-button-lite\n                      @click=\"", "\"\n                      icon=\"hardware:keyboard-arrow-right\"\n                      class=\"control\"\n                      value=\"\"\n                      >Collapse all</simple-icon-button-lite\n                    >\n                    <simple-icon-button-lite\n                      @click=\"", "\"\n                      icon=\"hardware:keyboard-arrow-down\"\n                      class=\"control\"\n                      value=\"\"\n                      >Expand all</simple-icon-button-lite\n                    >\n                    ", "\n                  </div>\n                  <div slot=\"col-2\">\n                    <h3>", "</h3>\n                    ", "\n                    ", "\n                    <div class=\"student-feedback-wrap\">\n                      <div class=\"student-feedback-text\">\n                        <h3 class=\"heading\">Overall feedback</h3>\n                        <simple-fields-field\n                          type=\"textarea\"\n                          data-criteria=\"overall\"\n                          data-rubric-written\n                        ></simple-fields-field>\n                      </div>\n                      <div class=\"student-feedback-score\">\n                        <simple-icon-button-lite\n                          icon=\"", "\"\n                          @click=\"", "\"\n                        ></simple-icon-button-lite>\n                        <simple-fields-field\n                          ?disabled=\"", "\"\n                          type=\"number\"\n                          min=\"0\"\n                          id=\"totalpts\"\n                          maxlength=\"10\"\n                          @value-changed=\"", "\"\n                        ></simple-fields-field>\n                        /\n                        ", "\n                        pts\n                        <letter-grade\n                          style=\"margin:-8px 0 0 16px;\"\n                          total=\"", "\"\n                          score=\"", "\"\n                        ></letter-grade>\n                      </div>\n                    </div>\n                  </div>\n                </grid-plate>\n              "])), this.inputfilterChanged, this.like, this.collapseAll, this.expandAll, this.database.tags.categories.length > 0 ? (0, _index.html)(_templateObject9_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject9_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                          <a11y-collapse-group\n                            heading-button\n                            id=\"categoriesgroup\"\n                            global-options='{\"expanded\": true}'\n                          >\n                            ", "\n                          </a11y-collapse-group>\n                        "])), this.database.tags.categories.map(function (category, i) {
          return (0, _index.html)(_templateObject10_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject10_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                                <a11y-collapse>\n                                  <div slot=\"heading\">\n                                    <simple-colors\n                                      accent-color=\"", "\"\n                                      ><span></span></simple-colors\n                                    >", "\n                                  </div>\n                                  <div slot=\"content\">\n                                    ", "\n                                  </div>\n                                </a11y-collapse>\n                              "])), _this6.pickColor(i), category, _this6.filtered.filter(function (item) {
            return item.category.includes(category);
          }).map(function (term) {
            return (0, _index.html)(_templateObject11_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject11_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["<simple-tag\n                                            draggable=\"true\"\n                                            tabindex=\"0\"\n                                            @keypress=\"", "\"\n                                            @dragstart=\"", "\"\n                                            accent-color=\"", "\"\n                                            value=\"", "\"\n                                            .data=\"", "\"\n                                          ></simple-tag>"])), _this6.keyDown, _this6.setDragTransfer, _this6.pickColor(i), term.term, term);
          }));
        })) : _index.nothing, this.activeRubric[0].name, this.PDFPageButton(), this.activeRubric.map(function (rubric, index) {
          return (0, _index.html)(_templateObject12_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject12_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                        <letter-grade-picker></letter-grade-picker>\n\n                        <editable-table-display\n                          accent-color=\"", "\"\n                          bordered\n                          column-header\n                          condensed\n                          disable-responsive\n                          scroll\n                          striped\n                        >\n                          <table>\n                            <tbody>\n                              <tr>\n                                ", "\n                              </tr>\n                              <tr>\n                                ", "\n                              </tr>\n                            </tbody>\n                          </table>\n                        </editable-table-display>\n                        <h4>Additional ", " feedback</h4>\n                        <simple-fields-field\n                          type=\"textarea\"\n                          data-rubric-written\n                          data-criteria=\"", "\"\n                        ></simple-fields-field>\n                      "])), _this6.accentColor, rubric.qualitative.map(function (cat) {
            return (0, _index.html)(_templateObject13_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject13_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral([" <td>", "</td> "])), cat);
          }), rubric.qualitative.map(function (cat) {
            return (0, _index.html)(_templateObject14_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject14_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                                    <td>\n                                      <simple-fields-tag-list\n                                        style=\"background-color:transparent;\"\n                                        data-criteria=\"", "\"\n                                        label=\"", "\"\n                                      ></simple-fields-tag-list>\n                                    </td>\n                                  "])), rubric.criteria, cat);
          }), rubric.criteria, rubric.criteria);
        }), this.scoreLock ? "lock" : "lock-open", this.toggleLock, this.scoreLock, this.totalScoreChangedEvent, this.database.assignments[this.activeAssignment].points, this.database.assignments[this.activeAssignment].points, this.totalScore) : _index.nothing, this.t.studentReportView, !this.loading && this.database.assignments && this.database.assignments[this.activeAssignment] ? (0, _index.html)(_templateObject15_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject15_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                  <letter-grade\n                    class=\"student-report-score\"\n                    show-scale\n                    total=\"", "\"\n                    score=\"", "\"\n                  ></letter-grade>\n                  <h2>Feedback report</h2>\n                  <div class=\"student-report-wrap\">\n                    <a11y-collapse-group\n                      heading-button\n                      expanded\n                      style=\"width:80%;\"\n                    >\n                      ", "\n                      <a11y-collapse class=\"student-feedback-text\">\n                        <div slot=\"heading\" class=\"heading\">\n                          <span style=\"font-size:20px;\"\n                            >", "</span\n                          >\n                        </div>\n                        <div slot=\"content\">\n                          <p>", "</p>\n                          <h2>Your total Score</h2>\n                          <div class=\"score-display\">\n                            ", " /\n                            ", "\n                            pts\n                          </div>\n                        </div>\n                      </a11y-collapse>\n                    </a11y-collapse-group>\n                  </div>\n                "])), this.database.assignments[this.activeAssignment].points, this.totalScore, this.database.rubrics.filter(function (item) {
          return item.shortName == _this6.database.assignments[_this6.activeAssignment].rubric;
        }).map(function (rubric) {
          return (0, _index.html)(_templateObject16_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject16_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                            <a11y-collapse class=\"student-feedback-text\">\n                              <div slot=\"heading\" class=\"heading\">\n                                <span style=\"font-size:20px;\"\n                                  >", "</span\n                                >\n                              </div>\n                              <div slot=\"content\">\n                                <div class=\"student-feedback-score-heading\">\n                                  <div>\n                                    ", " /\n                                    ", "\n                                  </div>\n                                  <h3>Criteria details</h3>\n                                </div>\n                                <p>", "</p>\n                                <h3>Your feedback</h3>\n                                <ul>\n                                  ", "\n                                </ul>\n                                <h3>Additional Criteria feedback</h3>\n                                <p>\n                                  ", "\n                                </p>\n                              </div>\n                            </a11y-collapse>\n                          "])), rubric.criteria, _this6.getCriteriaScore(rubric.criteria), Math.round(rubric.percentage / 100 * _this6.database.assignments[_this6.activeAssignment].points), rubric.description, rubric.qualitative.map(function (cat) {
            return (0, _index.html)(_templateObject17_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject17_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                                      <h4>", "</h4>\n                                      <ul>\n                                        ", "\n                                      </ul>\n                                    "])), cat, _this6.activeGrading[rubric.criteria] ? (0, _index.html)(_templateObject18_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject18_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["", ""])), _this6.activeGrading[rubric.criteria][cat].map(function (tag) {
              return (0, _index.html)(_templateObject19_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject19_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral([" <li>\n                                                <span>", "</span\n                                                >", "\n                                                ", "\n                                              </li>"])), tag.term, tag.description ? (0, _index.html)(_templateObject20_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject20_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral([" - ", ""])), tag.description) : "", tag.associatedMaterial ? (0, _index.html)(_templateObject21_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject21_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                                                      <ul>\n                                                        ", "\n                                                      </ul>\n                                                    "])), tag.associatedMaterial.map(function (material) {
                return (0, _index.html)(_templateObject22_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject22_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n                                                            <li>\n                                                              <a\n                                                                href=\"", "\"\n                                                                target=\"_blank\"\n                                                                rel=\"noopener noreferrer\"\n                                                                >", "</a\n                                                              >\n                                                            </li>\n                                                          "])), material, material);
              })) : "");
            })) : "");
          }), _this6.getCriteriaFeedback(rubric.criteria));
        }), this.t.overallFeedback, this.getCriteriaFeedback("overall"), this.totalScore, this.database.assignments[this.activeAssignment].points) : _index.nothing);
      }
    }, {
      key: "inputfilterChanged",
      value: function inputfilterChanged(e) {
        if (e.detail.value !== "") {
          this.expandAll();
        }
        this.like = e.target.value;
      }
    }, {
      key: "expandAll",
      value: function expandAll(e) {
        this.shadowRoot.querySelectorAll("#categoriesgroup a11y-collapse").forEach(function (item) {
          item.expanded = true;
        });
      }
    }, {
      key: "collapseAll",
      value: function collapseAll(e) {
        this.shadowRoot.querySelectorAll("#categoriesgroup a11y-collapse").forEach(function (item) {
          item.expanded = false;
        });
      }
    }, {
      key: "selectSource",
      value: function selectSource(e) {
        this.source = this.shadowRoot.querySelector("#source").value;
      }
    }, {
      key: "loadFromSource",
      value: function loadFromSource(e) {
        this.source = this.shadowRoot.querySelector("#source").value;
        if (this.source === "json") {
          this.sourceData = this.shadowRoot.querySelector("#sourcedatablob").value;
        } else if (this.source == "filesystem") {
          this.loadFromFilesystem();
        } else {
          this.sourceData = this.shadowRoot.querySelector("#sourcedata").value;
        }
      }
    }, {
      key: "loadFromExistingSource",
      value: function loadFromExistingSource(e) {
        this.source = this.shadowRoot.querySelector("#source").value;
        this.loadFromFilesystem(true);
      }
    }, {
      key: "loadFromFilesystem",
      value: function loadFromFilesystem() {
        var _this7 = this;
        var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        // implies they already selected a file and want to use that again
        if (existing) {
          this.loading = true;
          setTimeout(function () {
            _xlsxFileSystemBroker.XLSXFileSystemBrokerSingleton.processFile(_this7.prevLocalFileReference, "json");
            _this7.sourceData = _this7.prevLocalFileReference;
          }, 0);
        } else {
          _xlsxFileSystemBroker.XLSXFileSystemBrokerSingleton.loadFile("xls").then( /*#__PURE__*/function () {
            var _ref3 = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(file) {
              return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                while (1) switch (_context6.prev = _context6.next) {
                  case 0:
                    _this7.loading = true;
                    // store reference so we can add a button for recent
                    _context6.next = 3;
                    return (0, _compat.set)("grade-book-prev-file", file);
                  case 3:
                    setTimeout(function () {
                      _xlsxFileSystemBroker.XLSXFileSystemBrokerSingleton.processFile(file, "json");
                      _this7.sourceData = file;
                    }, 0);
                  case 4:
                  case "end":
                    return _context6.stop();
                }
              }, _callee6);
            }));
            return function (_x4) {
              return _ref3.apply(this, arguments);
            };
          }());
        }
      }
    }, {
      key: "saveToFilesystem",
      value: function () {
        var _saveToFilesystem = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e) {
          var output, blob, file;
          return _regeneratorRuntime().wrap(function _callee7$(_context7) {
            while (1) switch (_context7.prev = _context7.next) {
              case 0:
                // return as Blob based output
                // @todo undo the table transform on import so that we can have it as an array
                // form that they want in xlsx files
                // ensure we save the header row into the output based on correct key names
                // this means we'll ahve to undo the process functions as well.
                // MAY want to consider redoing how we look info up so that we don't transform it
                // into complex objects and instead use complex arrays (maybe)
                output = _xlsxFileSystemBroker.XLSXFileSystemBrokerSingleton.workbookFromJSON(this.database); // treat as a Blob and then convert to a FileReader object
                blob = new Blob([output], {
                  type: "application/octet-stream"
                });
                file = new FileReader();
                file.readAsDataURL(blob);
                // save to file format in question!
                _context7.next = 6;
                return _xlsxFileSystemBroker.XLSXFileSystemBrokerSingleton.saveFile("xlsx", output);
              case 6:
              case "end":
                return _context7.stop();
            }
          }, _callee7, this);
        }));
        function saveToFilesystem(_x5) {
          return _saveToFilesystem.apply(this, arguments);
        }
        return saveToFilesystem;
      }()
      /**
       * Listen for value change coming from the fields in the active rubric
       * and update the overall point total to match
       */
    }, {
      key: "rubricCriteriaPointsChange",
      value: function rubricCriteriaPointsChange(e) {
        var _this8 = this;
        // detect score field change
        if (e.detail.getAttribute("data-rubric-score") != null) {
          clearTimeout(this.__debounce);
          this.__debounce = setTimeout( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
            return _regeneratorRuntime().wrap(function _callee8$(_context8) {
              while (1) switch (_context8.prev = _context8.next) {
                case 0:
                  if (!_this8.loading) {
                    // @todo we need to store and recall these values
                    _this8.updateTotalScore();
                    _this8.shadowRoot.querySelector("#totalpts").value = _this8.totalScore;
                  }
                  // force locking the score if this changes as we're using the rubric
                  // to modify things
                  _this8.scoreLock = true;
                case 2:
                case "end":
                  return _context8.stop();
              }
            }, _callee8);
          })), 0);
        }
      }
    }, {
      key: "updateTotalScore",
      value: function updateTotalScore() {
        var score = 0;
        var tables = this.shadowRoot.querySelectorAll("#assessment simple-fields-field[type='number']:not(#totalpts)");
        // add the scores up based on values of the pieces
        for (var i in Array.from(tables)) {
          if (tables[i].value) {
            score = score + parseInt(tables[i].value);
          }
        }
        this.totalScore = score;
        this.shadowRoot.querySelector("#totalpts").value = score;
        this.requestUpdate();
      }
    }, {
      key: "totalScoreChangedEvent",
      value: function totalScoreChangedEvent(e) {
        if (this.ready) {
          e.stopPropagation();
          e.stopImmediatePropagation();
          e.preventDefault();
          this.totalScore = e.detail.value;
          this.database.grades[this.activeStudent][this.database.assignments[this.activeAssignment].shortName] = this.totalScore;
          this.activeStudentSubmissions = [];
          this.activeStudentSubmissions = babelHelpers.toConsumableArray(this.getStudentSubmissions(this.activeStudent));
          this.requestUpdate();
        }
      }
      /**
       * lock toggle
       */
    }, {
      key: "toggleLock",
      value: function toggleLock(e) {
        this.scoreLock = !this.scoreLock;
      }
      /**
       * update student report when that tab is activated
       */
    }, {
      key: "updateStudentReport",
      value: function updateStudentReport() {
        // force a repaint of the calculated values from the Assessment view
        this.requestUpdate();
      }
      /**
       * Return the criteria score, current value
       */
    }, {
      key: "getCriteriaScore",
      value: function getCriteriaScore(criteria) {
        var tables = this.shadowRoot.querySelectorAll("#assessment editable-table-display");
        // add the scores up based on values of the pieces
        for (var i in Array.from(tables)) {
          if (tables[i].shadowRoot.querySelector("[data-rubric-score][data-criteria=\"".concat(criteria, "\"]"))) {
            return tables[i].shadowRoot.querySelector("[data-rubric-score][data-criteria=\"".concat(criteria, "\"]")).value;
          }
        }
        return 0;
      }
      /**
       * Return the criteria written feedback, current value
       */
    }, {
      key: "getCriteriaFeedback",
      value: function getCriteriaFeedback(criteria) {
        if (this.shadowRoot.querySelector("#assessment [data-rubric-written][data-criteria=\"".concat(criteria, "\"]"))) {
          return this.shadowRoot.querySelector("#assessment [data-rubric-written][data-criteria=\"".concat(criteria, "\"]")).value;
        }
        return "";
      }
      /**
       * A qualitative feedback field got a new value
       */
    }, {
      key: "qualitativeFeedbackUpdate",
      value: function qualitativeFeedbackUpdate(e) {
        // group grade report by criteria, then qualitative label, THEN the list of tags used
        if (!this.activeGrading[e.detail.getAttribute("data-criteria")]) {
          this.activeGrading[e.detail.getAttribute("data-criteria")] = {};
        }
        this.activeGrading[e.detail.getAttribute("data-criteria")][e.detail.label] = e.detail.tagList;
        this.requestUpdate();
      }
      // @todo add support for keyboard based assignment of tag to criteria
    }, {
      key: "keyDown",
      value: function keyDown(e) {
        if (e.key === "Enter") {}
      }
      // get color based on index in the object "colors" from SimpleColors
      // this allows us to use an index in a common way and obtain a color
      // so that our tags have a color association per category
    }, {
      key: "pickColor",
      value: function pickColor(val) {
        var colors = Object.keys(this.colors);
        while (val > colors.length) {
          val = val - colors.length;
        }
        return colors[val];
      }
      // ensure when we drop a tag onto the UI that it removes all the outlines
      // of fields that can have items dropped into them
    }, {
      key: "_handleDragDrop",
      value: function _handleDragDrop(e) {
        window.dispatchEvent(new CustomEvent("simple-tag-drop", {
          detail: {
            value: "drop"
          }
        }));
      }
      // set the drag transfer data
    }, {
      key: "setDragTransfer",
      value: function setDragTransfer(e) {
        window.dispatchEvent(new CustomEvent("simple-tag-dragstart", {
          detail: {
            value: e.target
          }
        }));
        var data = e.target.data;
        // have to add in color
        data.color = e.target.accentColor;
        e.dataTransfer.setData("text", JSON.stringify(data));
      }
    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite), "properties", this)), {}, {
          displayMode: {
            type: Number
          },
          __pdfLoading: {
            type: Boolean
          },
          __hashLoading: {
            type: Boolean
          },
          disabled: {
            type: Boolean,
            reflect: true
          },
          loading: {
            type: Boolean,
            reflect: true
          },
          ready: {
            type: Boolean,
            reflect: true
          },
          activeStudent: {
            type: Number,
            attribute: "active-student"
          },
          activeAssignment: {
            type: Number,
            attribute: "active-assignment"
          },
          totalScore: {
            type: Number
          },
          scoreLock: {
            type: Boolean
          },
          source: {
            type: String
          },
          sourceData: {
            type: String,
            attribute: "source-data"
          },
          activeSubmission: {
            type: String,
            attribute: false
          },
          database: {
            type: Object,
            attribute: false
          },
          activeRubric: {
            type: Object,
            attribute: false
          },
          assessmentView: {
            type: Object,
            attribute: false
          },
          activeGrading: {
            type: Object,
            attribute: false
          },
          activeStudentSubmissions: {
            type: Array
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(GradeBookLite), "styles", this)), [(0, _index.css)(_templateObject23_f84fb5c0e4f411ed85766367b4d3e9fc || (_templateObject23_f84fb5c0e4f411ed85766367b4d3e9fc = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host [hidden] {\n          display: none !important;\n        }\n        @media (max-width: 900px) {\n          .hide-900 {\n            display: none;\n          }\n        }\n        loading-indicator {\n          --loading-indicator-background-color: var(\n            --simple-colors-default-theme-accent-2,\n            grey\n          );\n          --loading-indicator-color: var(\n            --simple-colors-default-theme-accent-10,\n            black\n          );\n        }\n        loading-indicator[full] {\n          top: 0;\n          position: absolute;\n          left: 0;\n          right: 0;\n          z-index: 1;\n        }\n        h1,\n        h2,\n        h3,\n        h4 {\n          margin: 0;\n        }\n        grid-plate {\n          --hax-layout-container-transition: none;\n          --grid-plate-col-transition: none;\n          --grid-plate-item-margin: 0px;\n          --grid-plate-item-padding: 8px;\n        }\n        #studentassessment {\n          --a11y-tabs-border-color: var(\n            --simple-colors-default-theme-accent-10,\n            black\n          );\n          --a11y-tabs-border-color: var(\n            --simple-colors-default-theme-accent-10,\n            black\n          );\n          color: var(--simple-colors-default-theme-grey-12);\n          background-color: var(--simple-colors-default-theme-grey-1);\n          --a11y-tabs-faded-color: var(--simple-colors-default-theme-grey-11);\n          --a11y-tabs-focus-color: var(--simple-colors-default-theme-grey-10);\n          --a11y-tabs-faded-background: var(\n            --simple-colors-default-theme-grey-2\n          );\n        }\n        #studentassessment::part(content) {\n          overflow: scroll;\n        }\n        a11y-collapse {\n          --a11y-collapse-border-color: var(\n            --simple-colors-default-theme-accent-10,\n            black\n          );\n          --a11y-collapse-horizontal-padding: 8px;\n          --a11y-collapse-vertical-padding: 4px;\n        }\n        a11y-collapse:not([expanded]):hover {\n          background-color: var(--simple-colors-default-theme-accent-1, grey);\n        }\n        a11y-collapse div[slot=\"heading\"] {\n          font-size: 18px;\n          font-weight: normal;\n          cursor: pointer;\n          line-height: 30px;\n          display: flex;\n        }\n        a11y-collapse[expanded] div[slot=\"heading\"] {\n          font-weight: bold;\n        }\n        .active-student-grade-history letter-grade {\n          display: inline-flex;\n          margin: 2px;\n        }\n        .active-student-grade-history button {\n          opacity: 0.4;\n          background-color: transparent;\n          border: 0;\n          padding: 0;\n          margin: 0;\n        }\n        .active-student-grade-history button.activeAssignment {\n          opacity: 0.9;\n          background-color: var(--simple-colors-default-theme-yellow-8);\n        }\n        .active-student-grade-history button:focus,\n        .active-student-grade-history button:active,\n        .active-student-grade-history button:hover {\n          opacity: 1;\n          outline: 1px solid black;\n          outline-offset: 2px;\n        }\n        simple-fields-tag-list {\n          --simple-fields-tag-list-possible: var(\n            --simple-colors-default-theme-accent-2\n          );\n          --simple-fields-tag-list-focus: var(\n            --simple-colors-default-theme-accent-10\n          );\n        }\n        simple-colors[accent-color] {\n          display: inline-flex;\n          width: 24px;\n          height: 24px;\n          margin: 4px 6px 0 0;\n        }\n        simple-colors[accent-color] span {\n          display: inline-flex;\n          width: 24px;\n          height: 24px;\n          background-color: var(\n            --simple-colors-default-theme-accent-3,\n            #eeeeee\n          );\n        }\n        simple-fields-field[type=\"textarea\"] {\n          --simple-fields-font-size: 20px;\n        }\n        .source-selection {\n          text-align: center;\n          margin-top: 30vh;\n          font-size: 32px;\n        }\n        .source-selection label {\n          display: block;\n        }\n        .source-selection select {\n          font-size: 18px;\n        }\n        #sourcedata,\n        #sourcedatablob {\n          display: block;\n          margin: 16px auto;\n          font-size: 24px;\n        }\n        simple-fields-field[type=\"number\"] {\n          --simple-fields-font-size: 40px;\n          line-height: 40px;\n        }\n\n        .student-feedback-score-heading {\n          display: flex;\n          font-size: 28px;\n          font-weight: bold;\n          line-height: 28px;\n          padding: 8px;\n        }\n        .student-feedback-score-heading h3 {\n          margin: 0 0 0 8px;\n          padding: 0;\n        }\n\n        #totalpts {\n          width: 84px;\n          margin: 0 12px;\n        }\n        .student-feedback-wrap {\n          display: flex;\n        }\n        .student-feedback-wrap .student-feedback-text {\n          width: 80%;\n          margin: 0;\n        }\n        .student-feedback-wrap .student-feedback-text div.heading {\n          padding: 20px;\n        }\n        .student-feedback-wrap .student-feedback-score {\n          font-size: 40px;\n          line-height: 68px;\n          padding: 34px 16px;\n          display: flex;\n          width: 50%;\n        }\n        simple-tag {\n          margin: 2px;\n        }\n        simple-tag:focus,\n        simple-tag:hover {\n          --simple-fields-fieldset-border-color: var(\n            --simple-colors-default-theme-accent-10,\n            #eeeeee\n          );\n        }\n        .user-info {\n          display: flex;\n          font-size: 16px;\n          min-width: 140px;\n          font-family: sans-serif;\n          font-weight: normal;\n          border-right: 1px solid black;\n        }\n        .user-left {\n          display: inline-flex;\n        }\n        .user-right {\n          display: block;\n          padding: 0 4px 0 0;\n          margin: 12px 0;\n        }\n        .user-right div a {\n          color: var(--simple-colors-default-theme-grey-12);\n          text-decoration: none;\n        }\n        .user-right div a:hover,\n        .user-right div a:focus,\n        .user-right div a:active {\n          color: var(--simple-colors-default-theme-blue-8);\n          text-decoration: underline;\n        }\n        .user-right div {\n          display: block;\n          text-align: center;\n        }\n        .user-photo {\n          --simple-icon-height: 48px;\n          --simple-icon-width: 48px;\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          margin: 12px 6px;\n          float: left;\n          vertical-align: middle;\n        }\n        .active-submission {\n          max-height: 400px;\n          width: 60%;\n          overflow: auto;\n          margin: 0 auto;\n        }\n        .active-submission iframe {\n          height: 400px;\n          width: 60%;\n        }\n        .tag-group {\n          position: sticky;\n          top: 0;\n        }\n        .student-report-wrap {\n          display: flex;\n          justify-content: space-evenly;\n        }\n        .student-report-score {\n          position: absolute;\n          right: 40px;\n          margin-top: -20px;\n        }\n        editable-table-display::part(td),\n        editable-table-display::part(th) {\n          text-align: center;\n          vertical-align: top;\n          max-width: 250px;\n        }\n        editable-table-display::part(simple-fields-field) {\n          --simple-fields-font-size: 32px;\n          --simple-fields-text-align: center;\n          background-color: transparent;\n          max-width: 100px;\n          padding: 0 0 28px 0;\n          margin: 0;\n        }\n\n        table thead th {\n          padding: 4px !important;\n          position: sticky;\n          top: -2px;\n          z-index: 1;\n        }\n        table thead th:first-child {\n          position: sticky;\n          left: 0;\n          z-index: 2;\n        }\n        table tbody th {\n          position: sticky;\n          left: 0;\n          z-index: 1;\n        }\n\n        .col-highlight,\n        tr:hover td,\n        tr:hover th {\n          transition: 0.3s ease-in-out all;\n          background-color: var(\n            --simple-colors-default-theme-yellow-2\n          ) !important;\n        }\n        table {\n          width: calc(100% - 2 * var(--editable-table-border-width, 1px));\n          border-collapse: collapse;\n          border-width: var(--editable-table-border-width, 1px);\n          border-style: var(--editable-table-border-style, solid);\n          border-color: var(--simple-colors-default-theme-grey-6, #999);\n          font-weight: var(--editable-table-light-weight, 200);\n          color: var(--simple-colors-default-theme-grey-10, #222);\n          background-color: var(--simple-colors-default-theme-grey-1, #fff);\n        }\n        .th,\n        .td {\n          font-weight: var(--editable-table-light-weight, 200);\n          color: var(--simple-colors-default-theme-grey-10, #222);\n          background-color: var(--simple-colors-default-theme-grey-1, #fff);\n        }\n        caption {\n          font-size: var(\n            --editable-table-caption-font-size,\n            var(--editable-table-font-size, unset)\n          );\n          font-weight: var(--editable-table-heavy-weight, 600);\n          color: var(\n            --editable-table-caption-color,\n            var(--simple-colors-default-theme-grey-10, #222)\n          );\n          background-color: var(\n            --editable-table-caption-bg-color,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n          width: 100%;\n        }\n        .tr {\n          display: table-row;\n        }\n        .th-or-td {\n          display: table-cell;\n        }\n        .thead .th-or-td {\n          height: 32px;\n          padding: 0;\n          margin: 0;\n        }\n        .thead-tr .th {\n          background-color: var(--simple-colors-default-theme-grey-2, #e0e0e0);\n          font-weight: var(--editable-table-heavy-weight, 600);\n          color: var(--simple-colors-default-theme-grey-12, #000);\n        }\n        .tbody-tr .th {\n          font-weight: var(--editable-table-heavy-weight, 600);\n          color: var(--simple-colors-default-theme-grey-12, #000);\n          background-color: var(--simple-colors-default-theme-grey-1, #fff);\n          text-align: left;\n        }\n        table[bordered] .th,\n        table[bordered] .td {\n          border-width: var(--editable-table-border-width, 1px);\n          border-style: var(--editable-table-border-style, solid);\n          border-color: var(--simple-colors-default-theme-grey-6, #999);\n        }\n        table[condensed] {\n          --editable-table-cell-vertical-padding: var(\n            --editable-table-cell-vertical-padding-condensed,\n            2px\n          );\n          --editable-table-cell-horizontal-padding: var(\n            --editable-table-cell-horizontal-padding-condensed,\n            4px\n          );\n        }\n        table[striped] .tbody-tr:nth-child(2n + 1) .th-or-td {\n          background-color: var(--simple-colors-default-theme-grey-2, #f0f0f0);\n        }\n        .tfoot-tr .th,\n        .tfoot-tr .td {\n          border-top: 2px solid var(--simple-colors-default-theme-grey-10, #222);\n          font-weight: var(--editable-table-heavy-weight, 600);\n          color: var(--simple-colors-default-theme-grey-12, #000);\n        }\n        caption,\n        .th-or-td {\n          text-align: left;\n        }\n        table[numeric-styles] .thead-tr .th-or-td[numeric],\n        table[numeric-styles] .tfoot-tr .th-or-td[numeric],\n        table[numeric-styles] .th-or-td[numeric] {\n          text-align: center;\n          font-size: 24px;\n          font-family: sans-serif;\n          --editable-table-cell-justify: flex-end;\n        }\n        table[numeric-styles] .tfoot-tr .th-or-td[negative],\n        table[numeric-styles] .td[negative] {\n          color: var(--simple-colors-default-theme-red-7, red);\n          --editable-table-cell-color: var(\n            --editable-table-negative-color,\n            red\n          );\n        }\n\n        caption > div {\n          display: flex;\n          align-items: flex-end;\n          justify-content: space-between;\n        }\n        caption > div > *:not(:last-child) {\n          padding: 0 0 5px;\n        }\n        #column {\n          width: calc(var(--simple-picker-option-size) + 6px);\n          overflow: visible;\n          display: none;\n          margin-left: 10px;\n          --simple-picker-border-width: 1px;\n          --simple-picker-focus-border-width: 1px;\n          --simple-picker-border-color: var(\n            --simple-colors-default-theme-grey-6,\n            #999\n          );\n        }\n        .th,\n        .td {\n          padding: 0;\n        }\n        .top-controls {\n          background-color: var(--simple-colors-default-theme-accent-12);\n          color: var(--simple-colors-default-theme-accent-1);\n          height: 36px;\n          vertical-align: middle;\n          width: 100%;\n          display: flex;\n        }\n        .top-controls .group {\n          padding: 0 8px;\n        }\n        .top-controls .app-name {\n          padding: 0 24px 0 16px;\n        }\n        .top-controls simple-icon-button-lite span {\n          padding: 0 8px 0 0;\n        }\n        .top-controls .divider-left {\n          border-left: 1px solid var(--simple-colors-default-theme-accent-1);\n        }\n        .top-controls .divider-right {\n          border-right: 1px solid var(--simple-colors-default-theme-accent-1);\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "grade-book-lite";
      }
    }]);
    return GradeBookLite;
  }((0, _GradeBookUIPieces.UIRenderPieces)((0, _I18NMixin.I18NMixin)((0, _simpleFilter.SimpleFilterMixin)(_simpleColors.SimpleColors))));
  _exports.GradeBookLite = GradeBookLite;
  customElements.define(GradeBookLite.tag, GradeBookLite);
  window.GradeBook = window.GradeBook || {};
  window.GradeBook.requestAvailability = function () {
    // if there is no single instance, generate one and append it to end of the document
    if (!window.GradeBook.instance) {
      if (document.querySelector("grade-book")) {
        window.GradeBook.instance = document.querySelector("grade-book");
      } else {
        window.GradeBook.instance = document.createElement("grade-book");
        document.body.appendChild(window.GradeBook.instance);
      }
    }
    return window.GradeBook.instance;
  };
});