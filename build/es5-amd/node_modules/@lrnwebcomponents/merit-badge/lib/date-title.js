define(["exports", "../../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.DateTitle = void 0;
  var _templateObject_2ac3ea60edcb11edb3e3ed4f0d506a4b, _templateObject2_2ac3ea60edcb11edb3e3ed4f0d506a4b;
  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }
  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var DateTitle = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(DateTitle, _LitElement);
    var _super = _createSuper(DateTitle);
    function DateTitle() {
      var _this;
      babelHelpers.classCallCheck(this, DateTitle);
      _this = _super.call(this);
      _this.title = "";
      _this.date = "";
      return _this;
    }
    babelHelpers.createClass(DateTitle, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_2ac3ea60edcb11edb3e3ed4f0d506a4b || (_templateObject_2ac3ea60edcb11edb3e3ed4f0d506a4b = babelHelpers.taggedTemplateLiteral(["<div class=\"container\"></div>"])));
      }
    }, {
      key: "updated",
      value: function updated() {
        this.generateCircularText("circTxt1", this.title, 90, -170, -100, "font-size: 20px; color: black;", "transform: scaleY(-1) scaleX(-1); position:absolute");
        this.generateCircularText("circTxt2", this.date, 90, 90, -40, "font-size: 20px; color: black;", "");
      }
    }, {
      key: "generateCircularText",
      value: function generateCircularText(className, text, radius, range, startPos, css, bottomCss) {
        var textArr = text.split("");
        var container = this.shadowRoot.querySelector(".container");
        var containerHeight = container.clientHeight;
        var newElement = document.createElement("div");
        newElement.setAttribute("class", className);
        var deg = range / textArr.length;
        textArr.forEach(function (ch) {
          ch = "<p style=\"height:".concat(radius, "px;").concat(css, ";transform:rotate(").concat(startPos, "deg);left:50%;top:").concat(containerHeight / 2 - radius, "px;position:absolute;transform-origin:0 100%\">\n             <span style=\"").concat(bottomCss, "\">").concat(ch, "</span>\n           </p>");
          newElement.innerHTML += ch;
          startPos += deg;
        });
        container.appendChild(newElement);
      }
    }], [{
      key: "tag",
      get: function get() {
        return "date-title";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          date: {
            type: String
          },
          title: {
            type: String
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_2ac3ea60edcb11edb3e3ed4f0d506a4b || (_templateObject2_2ac3ea60edcb11edb3e3ed4f0d506a4b = babelHelpers.taggedTemplateLiteral(["\n      .container {\n        color: white;\n        width: 300px;\n        height: 300px;\n        margin: 0 auto;\n      }\n      div.circTxt1,\n      div.circTxt2 {\n        color: white;\n        border-radius: 50%;\n        display: inline-block;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 50%;\n        transform-origin: 50% 50%;\n      }\n      div.circTxt1 p {\n        color: white;\n        font-size: 2em;\n        margin: 0;\n        color: white;\n\n      }\n      div.circTxt2 p {\n        font-size: 0.8em;\n        margin: 0;\n        color: white;\n\n      }\n      @keyframes moveAround {\n        0% {\n          transform: rotate(-2deg);\n        }\n        25% {\n          transform: rotate(2deg);\n        }\n        50% {\n          transform: rotate(-2deg);\n        }\n        75% {\n          transform: rotate(2deg);\n        }\n        100% {\n          transform: rotate(-2deg);\n        }\n      }\n    "])));
      }
    }]);
    return DateTitle;
  }(_index.LitElement);
  _exports.DateTitle = DateTitle;
  customElements.define(DateTitle.tag, DateTitle);
});