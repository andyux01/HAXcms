define(["exports", "../../../lit/index.js", "../../simple-filter/simple-filter.js", "../../utils/utils.js", "./hax-store.js", "./hax-element-demo.js", "./hax-tray-button.js", "../../../mobx/dist/mobx.esm.js", "../../simple-fields/lib/simple-fields-field.js", "../../simple-toolbar/lib/simple-button-grid.js", "../../simple-popover/lib/simple-popover-selection.js", "../../a11y-collapse/a11y-collapse.js", "../../i18n-manager/lib/I18NMixin.js"], function (_exports, _index, _simpleFilter, _utils, _haxStore, _haxElementDemo, _haxTrayButton, _mobxEsm, _simpleFieldsField, _simpleButtonGrid, _simplePopoverSelection, _a11yCollapse, _I18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxGizmoBrowser = void 0;
  var _templateObject_43d59c80deab11edbfe72fb80ddf5a61, _templateObject2_43d59c80deab11edbfe72fb80ddf5a61, _templateObject3_43d59c80deab11edbfe72fb80ddf5a61, _templateObject4_43d59c80deab11edbfe72fb80ddf5a61, _templateObject5_43d59c80deab11edbfe72fb80ddf5a61, _templateObject6_43d59c80deab11edbfe72fb80ddf5a61, _templateObject7_43d59c80deab11edbfe72fb80ddf5a61, _templateObject8_43d59c80deab11edbfe72fb80ddf5a61;
  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }
  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  /* `hax-gizmo-browser`
   * `Browse a list of gizmos. This provides a listing of custom elements for people to search and select based on what have been defined as gizmos for users to select.`
   * @microcopy - the mental model for this element
   * - gizmo - silly name for the general public when talking about custom elements and what it provides in the end.
   */
  var HaxGizmoBrowser = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(HaxGizmoBrowser, _I18NMixin);
    var _super = _createSuper(HaxGizmoBrowser);
    function HaxGizmoBrowser() {
      var _this;
      babelHelpers.classCallCheck(this, HaxGizmoBrowser);
      _this = _super.call(this);
      _this.daemonKeyCombo = null;
      (0, _mobxEsm.autorun)(function () {
        _this.daemonKeyCombo = (0, _mobxEsm.toJS)(_haxStore.HAXStore.daemonKeyCombo);
      });
      _this.items = [];
      _this.categories = [];
      _this.like = "";
      _this.value = "";
      _this.where = "index";
      _this.recentGizmoList = [];
      _this.t = {
        filterContentTypes: "Filter Content Types"
      };
      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        namespace: "hax"
      });
      _this.addEventListener("mouseleave", _this.closePopover.bind(babelHelpers.assertThisInitialized(_this)));
      _this.addEventListener("mouseout", _this.closePopover.bind(babelHelpers.assertThisInitialized(_this)));
      (0, _mobxEsm.autorun)(function () {
        if (_haxStore.HAXStore.editMode) {
          var recent = (0, _mobxEsm.toJS)(_haxStore.HAXStore.recentGizmoList);
          var recentList = [];
          var recentTags = [];
          recent.forEach(function (gizmo) {
            if (gizmo && gizmo.tag) {
              if (!recentTags.includes(gizmo.tag)) {
                recentTags.push(gizmo.tag);
                recentList.push(gizmo);
                // limit to 5, then remove the 1st one
                if (recentList.length > 5) {
                  recentTags.shift();
                  recentList.shift();
                }
              }
            }
          });
          _this.recentGizmoList = recentList;
        }
      });
      return _this;
    }
    babelHelpers.createClass(HaxGizmoBrowser, [{
      key: "closePopover",
      value: function closePopover() {
        var popover = window.SimplePopoverManager.requestAvailability();
        popover.opened = false;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        return (0, _index.html)(_templateObject_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral([" <div class=\"toolbar-inner\" part=\"toolbar\">\n        <simple-fields-field\n          id=\"inputfilter\"\n          @value-changed=\"", "\"\n          aria-controls=\"filter\"\n          label=\"", "\"\n          type=\"text\"\n          auto-validate=\"\"\n          part=\"filter\"\n        ></simple-fields-field>\n      </div>\n      <a11y-collapse id=\"recent\" heading=\"Recent\" heading-button expanded>\n        <simple-button-grid columns=\"5\" always-expanded part=\"grid\">\n          ", "\n        </simple-button-grid>\n      </a11y-collapse>\n      ", ""])), this.inputfilterChanged, this.t.filterContentTypes, this.recentGizmoList.map(function (gizmo, i) {
          return (0, _index.html)(_templateObject2_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject2_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral([" <simple-popover-selection event=\"hover\">\n              <hax-tray-button\n                small\n                show-text-label\n                voice-command=\"insert ", "\"\n                draggable=\"true\"\n                @dragstart=\"", "\"\n                index=\"", "\"\n                is-current-item\n                label=\"", "\"\n                event-name=\"insert-tag\"\n                event-data=\"", "\"\n                data-demo-schema=\"true\"\n                icon-position=\"top\"\n                icon=\"", "\"\n                part=\"grid-button\"\n                slot=\"button\"\n              ></hax-tray-button>\n              <hax-element-demo\n                render-tag=\"", "\"\n                slot=\"options\"\n              ></hax-element-demo>\n              ", "\n            </simple-popover-selection>"])), gizmo.title, _this2._dragStart, i, gizmo.title, gizmo.tag, gizmo.icon, gizmo.tag, gizmo.shortcutKey ? (0, _index.html)(_templateObject3_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject3_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral(["<div slot=\"options\">\n                    <kbd\n                      style=\"background-color: rgba(0, 0, 0, 0.1);border-radius: 4px;color: rgba(0, 0, 0, 0.7);box-shadow: #d1d5db 0px -4px 0px inset, rgba(0, 0, 0, 0.4) 0px 1px 1px;padding: 4px 8px;margin: 8px auto;display: block;z-index: 1;font-size: 8px;\n                \"\n                      >", " + ", "</kbd\n                    >\n                  </div>"])), _this2.daemonKeyCombo, gizmo.shortcutKey) : "");
        }), this.categories.map(function (tag) {
          return (0, _index.html)(_templateObject4_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject4_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral([" <a11y-collapse\n          heading=\"", "\"\n          heading-button\n        >\n          <simple-button-grid columns=\"3\" always-expanded part=\"grid\">\n            ", "\n          </simple-button-grid>\n        </a11y-collapse>"])), _this2.ucfirst(tag), _this2.filtered.map(function (gizmo, i) {
            return (0, _index.html)(_templateObject5_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject5_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral(["", ""])), gizmo && gizmo.tags && gizmo.tags.includes(tag) ? (0, _index.html)(_templateObject6_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject6_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral([" <simple-popover-selection event=\"hover\">\n                      <hax-tray-button\n                        show-text-label\n                        is-current-item\n                        voice-command=\"insert ", "\"\n                        draggable=\"true\"\n                        @dragstart=\"", "\"\n                        index=\"", "\"\n                        label=\"", "\"\n                        event-name=\"insert-tag\"\n                        event-data=\"", "\"\n                        data-demo-schema=\"true\"\n                        icon-position=\"top\"\n                        icon=\"", "\"\n                        part=\"grid-button\"\n                        slot=\"button\"\n                      ></hax-tray-button>\n                      ", "\n                      <hax-element-demo\n                        render-tag=\"", "\"\n                        slot=\"options\"\n                      ></hax-element-demo>\n                    </simple-popover-selection>"])), gizmo.title, _this2._dragStart, i, gizmo.title, gizmo.tag, gizmo.icon, gizmo.shortcutKey ? (0, _index.html)(_templateObject7_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject7_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral(["<div slot=\"options\">\n                            <kbd\n                              style=\"background-color: rgba(0, 0, 0, 0.1);border-radius: 4px;color: rgba(0, 0, 0, 0.7);box-shadow: #d1d5db 0px -4px 0px inset, rgba(0, 0, 0, 0.4) 0px 1px 1px;padding: 4px 8px;margin: 8px auto;display: block;z-index: 1;font-size: 8px;\n                \"\n                              >", " +\n                              ", "</kbd\n                            >\n                          </div>"])), _this2.daemonKeyCombo, gizmo.shortcutKey) : "", gizmo.tag) : "");
          }));
        }));
      }
    }, {
      key: "_dragStart",
      value:
      /**
       * Drag start so we know what target to set
       */
      function _dragStart(e) {
        // create the tag
        var schema = _haxStore.HAXStore.haxSchemaFromTag(e.target.eventData);
        var target;
        if (schema.gizmo.tag && schema.demoSchema && schema.demoSchema[0]) {
          target = (0, _utils.haxElementToNode)(schema.demoSchema[0]);
        } else {
          target = document.createElement(e.target.eventData);
        }
        _haxStore.HAXStore.recentGizmoList.push(schema.gizmo);
        _haxStore.HAXStore.__dragTarget = target;
        if (e.dataTransfer) {
          e.dataTransfer.effectAllowed = "move";
          e.dataTransfer.dropEffect = "move";
        }
        e.stopPropagation();
        e.stopImmediatePropagation();
      }
    }, {
      key: "inputfilterChanged",
      value: function inputfilterChanged(e) {
        this.like = e.target.value;
        if (this.like == "") {
          this.collapseAll();
        } else {
          this.expandAll();
        }
      }
    }, {
      key: "expandAll",
      value: function expandAll() {
        this.shadowRoot.querySelectorAll("a11y-collapse").forEach(function (item) {
          item.expanded = true;
        });
      }
    }, {
      key: "collapseAll",
      value: function collapseAll() {
        this.shadowRoot.querySelectorAll("a11y-collapse:not(#recent)").forEach(function (item) {
          item.expanded = false;
        });
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;
        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "updated", this).call(this, changedProperties);
        }
        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "filtered") {
            _this3.requestUpdate();
          }
          if (propName == "items" && _this3[propName] && _this3[propName].length > 0) {
            _this3.categories = babelHelpers.toConsumableArray(_this3.updateCategories(_this3.items));
          }
        });
      }
    }, {
      key: "ucfirst",
      value: function ucfirst(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
      }
    }, {
      key: "updateCategories",
      value: function updateCategories(list) {
        var tags = [];
        list.forEach(function (gizmo) {
          if (gizmo.tags && gizmo.tags[0]) {
            if (!tags.includes(gizmo.tags[0])) {
              tags.push(gizmo.tags[0]);
            }
          }
        });
        tags.sort();
        return tags;
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this4 = this;
        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "firstUpdated", this).call(this, changedProperties);
        }
        (0, _mobxEsm.autorun)(function () {
          if (_haxStore.HAXStore.editMode) {
            _this4.resetList((0, _mobxEsm.toJS)(_haxStore.HAXStore.gizmoList));
          }
        });
      }
      /**
       * Reset this browser.
       */
    }, {
      key: "resetList",
      value: function resetList(list) {
        if (list) {
          this.like = "";
          this.value = "";
          var items = list.filter(function (gizmo, i) {
            // remove inline and hidden references
            if (gizmo && gizmo.meta && (gizmo.meta.inlineOnly || gizmo.meta.hidden || gizmo.requiresParent)) {
              return false;
            }
            return true;
          });
          // build index for improved searchability
          items.map(function (gizmo, i) {
            items[i].index = gizmo.title + " " + gizmo.tag;
            if (gizmo.tags) {
              items[i].index += " " + gizmo.tags.join(" ");
            }
            if (gizmo.meta && gizmo.meta.author) {
              items[i].index += " " + gizmo.meta.author;
            }
          });
          this.items = babelHelpers.toConsumableArray(items);
        }
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject8_43d59c80deab11edbfe72fb80ddf5a61 || (_templateObject8_43d59c80deab11edbfe72fb80ddf5a61 = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          flex: 0 1 auto;\n          overflow-y: auto;\n        }\n        :host > * {\n          max-width: 100%;\n        }\n        simple-popover-selection {\n          display: flex;\n        }\n        hax-tray-button {\n          flex: auto;\n          font-size: 12px;\n          --hax-ui-font-size-sm: 12px;\n          --simple-toolbar-button-height: 22px;\n          --simple-toolbar-button-width: 22px;\n        }\n        hax-tray-button[small] {\n          font-size: 8px;\n          --hax-ui-font-size-sm: 8px;\n          --simple-toolbar-button-height: 16px;\n          --simple-toolbar-button-width: 16px;\n        }\n        .toolbar-inner {\n          max-width: 96%;\n        }\n        hax-tray-button::part(button) {\n          font-size: var(hax-ui-font-size-xs);\n        }\n        simple-button-grid {\n          --simple-button-grid-margin: 2px;\n        }\n        simple-fields-field {\n          margin-top: 0;\n          margin-bottom: 8px;\n        }\n        simple-fields-field::part(option-input) {\n          padding: 0px 2px;\n          font-size: 12px;\n        }\n        a11y-collapse {\n          margin: 0;\n          --a11y-collapse-margin: 0;\n          --a11y-collapse-vertical-padding: 8px;\n          --a11y-collapse-horizontal-padding: 4px;\n        }\n        a11y-collapse::part(heading) {\n          margin: 8px 0px;\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser), "properties", this)), {}, {
          categories: {
            type: Array
          },
          recentGizmoList: {
            type: Array
          }
        });
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-gizmo-browser";
      }
    }]);
    return HaxGizmoBrowser;
  }((0, _I18NMixin2.I18NMixin)((0, _simpleFilter.SimpleFilterMixin)(_index.LitElement)));
  _exports.HaxGizmoBrowser = HaxGizmoBrowser;
  customElements.define(HaxGizmoBrowser.tag, HaxGizmoBrowser);
});