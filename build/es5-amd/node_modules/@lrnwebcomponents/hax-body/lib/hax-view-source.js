define(["exports", "require", "../../../lit-element/lit-element.js", "../../dl-behavior/dl-behavior.js", "../../utils/utils.js", "./hax-store.js", "./hax-toolbar.js", "./hax-ui-styles.js", "../../../mobx/dist/mobx.esm.js", "../../i18n-manager/lib/I18NMixin.js"], function (_exports, _require, _litElement, _dlBehavior, _utils, _haxStore, _haxToolbar, _haxUiStyles, _mobxEsm, _I18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxViewSource = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_73650ac08b4811ebbbe2170cf981e021() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          margin: 0;\n          padding: 0;\n          flex: 0 1 100vh;\n          display: flex;\n          flex-direction: column;\n        }\n        :host > *,\n        #textarea {\n          margin: 0;\n          padding: 0;\n        }\n        #hiddentextarea,\n        #spacer {\n          flex: 0 1 0px;\n        }\n        #wrapper {\n          flex: 1 0 calc(70vh - 94px);\n          position: relative;\n        }\n        #textarea {\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          left: 0;\n          right: 0;\n        }\n        hax-toolbar {\n          flex: 0 0 auto;\n          width: 100%;\n          display: flex;\n          background-color: var(--hax-ui-background-color);\n        }\n        hax-toolbar::part(buttons) {\n          justify-content: space-between;\n          flex: 0 1 auto;\n          margin: 0 auto;\n        }\n      "]);

    _templateObject2_73650ac08b4811ebbbe2170cf981e021 = function _templateObject2_73650ac08b4811ebbbe2170cf981e021() {
      return data;
    };

    return data;
  }

  function _templateObject_73650ac08b4811ebbbe2170cf981e021() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"spacer\"></div>\n      <div id=\"wrapper\">\n        <textarea id=\"hiddentextarea\" hidden></textarea>\n        <code-editor\n          id=\"textarea\"\n          title=\"\"\n          theme=\"", "\"\n          language=\"html\"\n          font-size=\"13\"\n          word-wrap\n        ></code-editor>\n      </div>\n      <hax-toolbar always-expanded>\n        <hax-tray-button\n          label=\"", "\"\n          icon=\"editor:insert-drive-file\"\n          @click=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <hax-tray-button\n          @click=\"", "\"\n          icon=\"editor:format-clear\"\n          label=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <hax-tray-button\n          @click=\"", "\"\n          icon=\"icons:content-copy\"\n          label=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <hax-tray-button\n          label=\"", "\"\n          icon=\"icons:file-download\"\n          @click=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <hax-tray-button\n          @click=\"", "\"\n          label=\"HAXSchema\"\n          icon=\"hax:code-json\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n      </hax-toolbar>\n    "]);

    _templateObject_73650ac08b4811ebbbe2170cf981e021 = function _templateObject_73650ac08b4811ebbbe2170cf981e021() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-eview-source`
   * @element hax-eview-source
   * `Export dialog with all export options and settings provided.`
   */
  var HaxViewSource = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(HaxViewSource, _I18NMixin);

    var _super = _createSuper(HaxViewSource);

    babelHelpers.createClass(HaxViewSource, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_73650ac08b4811ebbbe2170cf981e021(), this.haxUiTheme == "hax" ? "vs" : this.haxUiTheme == "haxdark" ? "vs-dark" : "auto", this.t.updatePage, this.importContent.bind(this), this.scrubContent.bind(this), this.t.cleanFormatting, this.selectBody.bind(this), this.t.copyHTML, this.t.downloadHTML, this.download.bind(this), this.htmlToHaxElements.bind(this));
      }
    }, {
      key: "download",

      /**
       * Download file.
       */
      value: function download(e) {
        var data = this.contentToFile(false);
        this.downloadFromData(data, "html", "my-new-code");

        _haxStore.HAXStore.toast("HTML content downloaded"); //this.close();

      }
      /**
       * Download file.
       */

    }, {
      key: "downloadfull",
      value: function downloadfull(e) {
        var data = this.contentToFile(true);
        this.downloadFromData(data, "html", "my-new-webpage");

        _haxStore.HAXStore.toast("Working offline copy downloaded"); //this.close();

      }
      /**
       * Import content into body area.
       */

    }, {
      key: "importContent",
      value: function importContent(e) {
        // import contents of this text area into the activeHaxBody
        var htmlBody = this.shadowRoot.querySelector("#textarea").value;

        _haxStore.HAXStore.toast("Content updated");

        _haxStore.HAXStore.activeHaxBody.importContent(htmlBody); //this.close();

      }
      /**
       * Scrub and then import content as if pasted from Word / GDocs
       */

    }, {
      key: "scrubContent",
      value: function scrubContent(e) {
        // import contents of this text area into the activeHaxBody
        var htmlBody = this.shadowRoot.querySelector("#textarea").value;

        _haxStore.HAXStore.toast("Scrubbed, Content updated");

        _haxStore.HAXStore.activeHaxBody.importContent((0, _utils.stripMSWord)(htmlBody)); //this.close();

      }
    }, {
      key: "close",
      value: function close() {
        window.dispatchEvent(new CustomEvent("simple-modal-hide", {
          bubbles: true,
          cancelable: true,
          detail: {}
        }));
      }
      /**
       * update content of the editor area
       */

    }, {
      key: "openSource",
      value: function openSource() {
        // import at this time so we can delay as long as possible
        // from needing to pull in monaco
        new Promise(function (res, rej) {
          return _require.default(["../../code-editor/code-editor.js"], res, rej);
        });
        this.updateEditor();
      }
      /**
       * selectBody
       */

    }, {
      key: "selectBody",
      value: function selectBody(e) {
        var hiddenarea = this.shadowRoot.querySelector("#hiddentextarea");
        hiddenarea.value = this.shadowRoot.querySelector("#textarea").value;
        hiddenarea.removeAttribute("hidden");
        hiddenarea.focus();
        hiddenarea.select();
        document.execCommand("copy");
        hiddenarea.setAttribute("hidden", "hidden");

        _haxStore.HAXStore.toast(this.t.copiedToClipboard); //this.close();

      }
      /**
       * HTML to HAX Elements
       */

    }, {
      key: "htmlToHaxElements",
      value: function htmlToHaxElements(e) {
        var elements = _haxStore.HAXStore.htmlToHaxElements(this.shadowRoot.querySelector("#textarea").value);

        var str = JSON.stringify(elements, null, 2);
        var val = this.shadowRoot.querySelector("#textarea").value;
        var hiddenarea = this.shadowRoot.querySelector("#hiddentextarea");
        hiddenarea.removeAttribute("hidden");
        hiddenarea.value = str;
        hiddenarea.focus();
        hiddenarea.select();
        document.execCommand("copy");
        hiddenarea.value = val;
        hiddenarea.setAttribute("hidden", "hidden");

        _haxStore.HAXStore.toast(this.t.copiedToClipboard);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        this.updateEditor();
      }
    }, {
      key: "updateEditor",
      value: function updateEditor() {
        if (_haxStore.HAXStore.activeHaxBody && this.shadowRoot && this.shadowRoot.querySelector("#textarea")) {
          this.shadowRoot.querySelector("#textarea").editorValue = (0, _utils.formatHTML)(_haxStore.HAXStore.activeHaxBody.haxToContent());
        }
      }
      /**
       * Output entire thing as a file.
       */

    }, {
      key: "contentToFile",
      value: function contentToFile(full) {
        var body = _haxStore.HAXStore.activeHaxBody.haxToContent();

        var content = body; // if you want full HTML headers or not

        if (full) {
          content = "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes\"\n            />\n            <title>hax-body demo</title>\n            <script>window.WCGlobalCDNPath=\"https://cdn.webcomponents.psu.edu/cdn/\"; </script> <script src=\"https://cdn.webcomponents.psu.edu/cdn/build.js\"></script> \n            <style>\n              body {\n                padding: 32px;\n              }\n            </style>\n          </head>\n          <body>\n          ".concat(body, "\n          </body>\n        </html>\n      ");
        }

        return content;
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(_haxUiStyles.HaxComponentStyles), [(0, _litElement.css)(_templateObject2_73650ac08b4811ebbbe2170cf981e021())]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-view-source";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource), "properties", this)), {}, {
          /**
           * Global preferences for HAX overall
           */
          globalPreferences: {
            type: Object
          },
          theme: {
            type: String
          }
        });
      }
    }]);

    function HaxViewSource() {
      var _this;

      babelHelpers.classCallCheck(this, HaxViewSource);
      _this = _super.call(this);
      _this.t = {
        updatePage: "Update Page",
        copyHTML: "Copy HTML",
        downloadHTML: "Download HTML",
        cleanFormatting: "Clean Formatting",
        copiedToClipboard: "Copied to clipboard"
      };

      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        namespace: "hax"
      });

      _this.fileTypes = {
        CSV: "text/csv",
        JSON: "text/json",
        PDF: "application/pdf",
        TXT: "text/plain",
        HTML: "text/html"
      };
      (0, _mobxEsm.autorun)(function () {
        _this.globalPreferences = (0, _mobxEsm.toJS)(_haxStore.HAXStore.globalPreferences);
        _this.haxUiTheme = (_this.globalPreferences || {}).haxUiTheme || "hax";
      });
      return _this;
    }

    return HaxViewSource;
  }((0, _I18NMixin2.I18NMixin)((0, _dlBehavior.MtzFileDownloadBehaviors)(_litElement.LitElement)));

  _exports.HaxViewSource = HaxViewSource;
  window.customElements.define(HaxViewSource.tag, HaxViewSource);
});